[
    {
        "iteration": 0,
        "problem": "[('a0 : (= z z)) -> (= z z)]",
        "problem_raw": "[('a0 : (= nat z z)) -> (= nat z z)]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> (= z z)] {",
            "intro _ : [('a0 : (= z z)) -> (= z z)].",
            "}"
        ],
        "logprob": -0.6616395562101203,
        "actions": [
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= (+ z z) z)",
        "problem_raw": "(= nat (+ z z) z)",
        "proof": [
            "theorem t : (= (+ z z) z) {",
            "show (= (+ z z) z) by +_z.",
            "}"
        ],
        "logprob": -0.6486500780228532,
        "actions": [
            "c +_z",
            "=> (= (+ z z) z)."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : (= (+ 'a0 'a0) 'a0)) -> (= z z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (+ 'a0 'a0) 'a0)) -> (= nat z z)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= (+ 'a0 'a0) 'a0)) -> (= z z)] {",
            "intro x : nat.",
            "intro x0 : (= (+ x x) x).",
            "show (= z z) by eq_refl.",
            "}"
        ],
        "logprob": -5.104478634259204,
        "actions": [
            "intro.",
            "intro.",
            "c eq_refl",
            "=> (= z z)."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= z (s z))",
        "problem_raw": "(= nat z (s z))",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= (s (s z)) z)",
        "problem_raw": "(= nat (s (s z)) z)",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> (= z 'a0)]",
        "problem_raw": "[('a0 : nat) -> (= nat z 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> (= z 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> (= nat z 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : (= z (+ (+ (s z) z) z))) -> ('a1 : (= (+ (+ z z) z) z)) -> (= z z)]",
        "problem_raw": "[('a0 : (= nat z (+ (+ (s z) z) z))) -> ('a1 : (= nat (+ (+ z z) z) z)) -> (= nat z z)]",
        "proof": [
            "theorem t : [('a0 : (= z (+ (+ (s z) z) z))) -> ('a1 : (= (+ (+ z z) z) z)) -> (= z z)] {",
            "show (= z z) by eq_refl.",
            "intro x : (= z (+ (+ (s z) z) z)).",
            "intro _ : [('a1 : (= (+ (+ z z) z) z)) -> (= z z)].",
            "}"
        ],
        "logprob": -4.607661660812225,
        "actions": [
            "c eq_refl",
            "=> (= z z).",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : nat) -> ('a3 : nat) -> (= (s z) (+ 'a2 'a2))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : nat) -> ('a3 : nat) -> (= nat (s z) (+ 'a2 'a2))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : (= z z)) -> (= 'a0 z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z z)) -> (= nat 'a0 z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= (+ z (s (s z))) (+ z z))",
        "problem_raw": "(= nat (+ z (s (s z))) (+ z z))",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= (s (+ (+ z z) z)) (s (s (+ (s z) z))))",
        "problem_raw": "(= nat (s (+ (+ z z) z)) (s (s (+ (s z) z))))",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : (= z z)) -> ('a2 : nat) -> ('a3 : nat) -> ('a4 : nat) -> (= 'a3 (+ (+ (+ 'a0 z) 'a0) z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z z)) -> ('a2 : nat) -> ('a3 : nat) -> ('a4 : nat) -> (= nat 'a3 (+ (+ (+ 'a0 z) 'a0) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z z)) -> (= (+ z (s (s z))) z)]",
        "problem_raw": "[('a0 : (= nat z z)) -> ('a1 : (= nat z z)) -> (= nat (+ z (s (s z))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> (= 'a0 (s z))]",
        "problem_raw": "[('a0 : nat) -> (= nat 'a0 (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> (= (+ 'a0 (+ 'a0 'a0)) (+ (+ (+ (+ 'a0 'a0) z) 'a0) 'a0))]",
        "problem_raw": "[('a0 : nat) -> (= nat (+ 'a0 (+ 'a0 'a0)) (+ (+ (+ (+ 'a0 'a0) z) 'a0) 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : (= z (s z))) -> ('a2 : (= (s z) (s 'a0))) -> ('a3 : nat) -> ('a4 : nat) -> (= (+ (+ (+ (+ z z) z) z) z) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z (s z))) -> ('a2 : (= nat (s z) (s 'a0))) -> ('a3 : nat) -> ('a4 : nat) -> (= nat (+ (+ (+ (+ z z) z) z) z) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= z (s (s z)))",
        "problem_raw": "(= nat z (s (s z)))",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= z z)",
        "problem_raw": "(= nat z z)",
        "proof": [
            "theorem t : (= z z) {",
            "show (= z z) by eq_refl.",
            "}"
        ],
        "logprob": -1.43060535555597,
        "actions": [
            "c eq_refl",
            "=> (= z z)."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= (+ z (+ z z)) z)",
        "problem_raw": "(= nat (+ z (+ z z)) z)",
        "proof": [
            "theorem t : (= (+ z (+ z z)) z) {",
            "show (= (+ z z) z) by +_z.",
            "show (= z (+ z z)) by eq_symm.",
            "show (= (+ z (+ z z)) z) by rewrite.",
            "}"
        ],
        "logprob": -4.098690521579507,
        "actions": [
            "c +_z",
            "=> (= (+ z z) z).",
            "c eq_symm",
            "=> (= z (+ z z)).",
            "c rewrite",
            "=> (= (+ z (+ z z)) z)."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= (+ (s z) (+ z (+ z (s z)))) (+ z z))",
        "problem_raw": "(= nat (+ (s z) (+ z (+ z (s z)))) (+ z z))",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= (+ (+ z z) z) z)",
        "problem_raw": "(= nat (+ (+ z z) z) z)",
        "proof": [
            "theorem t : (= (+ (+ z z) z) z) {",
            "show (= (+ (+ z z) z) (+ z z)) by +_z.",
            "show (= (+ z z) z) by +_z.",
            "show (= (+ (+ z z) z) z) by rewrite.",
            "}"
        ],
        "logprob": -4.791211609792135,
        "actions": [
            "c +_z",
            "=> (= (+ (+ z z) z) (+ z z)).",
            "c +_z",
            "=> (= (+ z z) z).",
            "c rewrite",
            "=> (= (+ (+ z z) z) z)."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : (= (+ (+ z z) z) (s z))) -> (= z z)]",
        "problem_raw": "[('a0 : (= nat (+ (+ z z) z) (s z))) -> (= nat z z)]",
        "proof": [
            "theorem t : [('a0 : (= (+ (+ z z) z) (s z))) -> (= z z)] {",
            "show (= z z) by eq_refl.",
            "intro _ : [('a0 : (= (+ (+ z z) z) (s z))) -> (= z z)].",
            "}"
        ],
        "logprob": -2.835758103552266,
        "actions": [
            "c eq_refl",
            "=> (= z z).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z z)) -> (= (+ (+ (s (+ (+ z (s z)) (+ (+ z z) z))) z) z) z)]",
        "problem_raw": "[('a0 : (= nat z z)) -> ('a1 : (= nat z z)) -> (= nat (+ (+ (s (+ (+ z (s z)) (+ (+ z z) z))) z) z) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : (= (s z) (+ (+ z z) z))) -> ('a1 : nat) -> ('a2 : (= (s 'a1) 'a1)) -> (= z 'a1)]",
        "problem_raw": "[('a0 : (= nat (s z) (+ (+ z z) z))) -> ('a1 : nat) -> ('a2 : (= nat (s 'a1) 'a1)) -> (= nat z 'a1)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : (= (+ z z) z)) -> ('a1 : (= z (+ z (+ z z)))) -> (= (+ z (s z)) z)]",
        "problem_raw": "[('a0 : (= nat (+ z z) z)) -> ('a1 : (= nat z (+ z (+ z z)))) -> (= nat (+ z (s z)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= z 'a1)) -> ('a3 : (= z z)) -> (= (s z) 'a1)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat z 'a1)) -> ('a3 : (= nat z z)) -> (= nat (s z) 'a1)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : nat) -> ('a4 : nat) -> ('a5 : (= z 'a4)) -> ('a6 : nat) -> (= z z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : nat) -> ('a4 : nat) -> ('a5 : (= nat z 'a4)) -> ('a6 : nat) -> (= nat z z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (s z) z)) -> (= (+ (s (+ z z)) (+ z z)) z)]",
        "problem_raw": "[('a0 : (= nat z z)) -> ('a1 : (= nat (s z) z)) -> (= nat (+ (s (+ z z)) (+ z z)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : (= (s (+ (s z) z)) (s (+ z (+ (+ z (s z)) (+ z (s z))))))) -> ('a1 : (= z z)) -> (= z (+ (+ (s (+ (s z) z)) z) (s z)))]",
        "problem_raw": "[('a0 : (= nat (s (+ (s z) z)) (s (+ z (+ (+ z (s z)) (+ z (s z))))))) -> ('a1 : (= nat z z)) -> (= nat z (+ (+ (s (+ (s z) z)) z) (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= (s (+ z (+ z z))) z)",
        "problem_raw": "(= nat (s (+ z (+ z z))) z)",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> (= z 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> (= nat z 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= (s z) z)",
        "problem_raw": "(= nat (s z) z)",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : (= (+ (+ z z) z) (s z))) -> (= (s z) z)]",
        "problem_raw": "[('a0 : (= nat (+ (+ z z) z) (s z))) -> (= nat (s z) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : (= (+ 'a0 z) z)) -> ('a2 : nat) -> (= (+ 'a2 'a2) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (+ 'a0 z) z)) -> ('a2 : nat) -> (= nat (+ 'a2 'a2) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> (= z (+ 'a0 (s z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> (= nat z (+ 'a0 (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= z (+ (s z) z))",
        "problem_raw": "(= nat z (+ (s z) z))",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> (= z z)]",
        "problem_raw": "[('a0 : nat) -> (= nat z z)]",
        "proof": [
            "theorem t : [('a0 : nat) -> (= z z)] {",
            "intro x : nat.",
            "show (= z z) by eq_refl.",
            "}"
        ],
        "logprob": -2.780643757857528,
        "actions": [
            "intro.",
            "c eq_refl",
            "=> (= z z)."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : (= z (+ z (+ (s z) (s (+ (+ z z) (+ z z))))))) -> (= z z)]",
        "problem_raw": "[('a0 : (= nat z (+ z (+ (s z) (s (+ (+ z z) (+ z z))))))) -> (= nat z z)]",
        "proof": [
            "theorem t : [('a0 : (= z (+ z (+ (s z) (s (+ (+ z z) (+ z z))))))) -> (= z z)] {",
            "intro x : (= z (+ z (+ (s z) (s (+ (+ z z) (+ z z)))))).",
            "show (= z z) by eq_refl.",
            "}"
        ],
        "logprob": -4.572543686882645,
        "actions": [
            "intro.",
            "c eq_refl",
            "=> (= z z)."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= z 'a1)) -> ('a4 : (= z (+ 'a1 'a1))) -> ('a5 : (= (+ (s (+ 'a2 'a2)) (s z)) (+ 'a2 'a0))) -> (= (+ z 'a1) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= nat z 'a1)) -> ('a4 : (= nat z (+ 'a1 'a1))) -> ('a5 : (= nat (+ (s (+ 'a2 'a2)) (s z)) (+ 'a2 'a0))) -> (= nat (+ z 'a1) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= (+ z (+ z z)) (+ (+ (s z) z) (+ (+ (+ z (s z)) z) (s (s z)))))",
        "problem_raw": "(= nat (+ z (+ z z)) (+ (+ (s z) z) (+ (+ (+ z (s z)) z) (s (s z)))))",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= z (+ z z))",
        "problem_raw": "(= nat z (+ z z))",
        "proof": [
            "theorem t : (= z (+ z z)) {",
            "show (= (+ z z) z) by +_z.",
            "show (= z (+ z z)) by eq_symm.",
            "}"
        ],
        "logprob": -1.7481052090736802,
        "actions": [
            "c +_z",
            "=> (= (+ z z) z).",
            "c eq_symm",
            "=> (= z (+ z z))."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= (+ z (+ (s z) z)) z)",
        "problem_raw": "(= nat (+ z (+ (s z) z)) z)",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= z (s (s (s z))))",
        "problem_raw": "(= nat z (s (s (s z))))",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : nat) -> ('a4 : nat) -> ('a5 : nat) -> ('a6 : nat) -> (= z z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : nat) -> ('a4 : nat) -> ('a5 : nat) -> ('a6 : nat) -> (= nat z z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= (+ (s z) 'a0) z)) -> (= z 'a1)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= nat (+ (s z) 'a0) z)) -> (= nat z 'a1)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= (+ z (+ (+ (+ z z) (+ z (+ (s z) z))) z)) z)",
        "problem_raw": "(= nat (+ z (+ (+ (+ z z) (+ z (+ (s z) z))) z)) z)",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : nat) -> (= z z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : nat) -> (= nat z z)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : nat) -> (= z z)] {",
            "intro x : nat.",
            "intro x0 : (= x x).",
            "intro x1 : nat.",
            "show (= z z) by eq_refl.",
            "}"
        ],
        "logprob": -4.9007130770807565,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "c eq_refl",
            "=> (= z z)."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ z z))) -> ('a2 : nat) -> ('a3 : (= 'a2 'a2)) -> ('a4 : nat) -> ('a5 : (= 'a2 'a4)) -> (= z 'a4)]",
        "problem_raw": "[('a0 : (= nat z z)) -> ('a1 : (= nat z (+ z z))) -> ('a2 : nat) -> ('a3 : (= nat 'a2 'a2)) -> ('a4 : nat) -> ('a5 : (= nat 'a2 'a4)) -> (= nat z 'a4)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> (= z (+ 'a0 z))]",
        "problem_raw": "[('a0 : nat) -> (= nat z (+ 'a0 z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= (+ (+ z z) (+ z (+ (s z) z))) (s z))",
        "problem_raw": "(= nat (+ (+ z z) (+ z (+ (s z) z))) (s z))",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= z (+ z (s z)))",
        "problem_raw": "(= nat z (+ z (s z)))",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : (= (s z) z)) -> (= (+ z z) (+ z z))]",
        "problem_raw": "[('a0 : (= nat (s z) z)) -> (= nat (+ z z) (+ z z))]",
        "proof": [
            "theorem t : [('a0 : (= (s z) z)) -> (= (+ z z) (+ z z))] {",
            "intro x : (= (s z) z).",
            "show (= (+ z z) (+ z z)) by eq_refl.",
            "}"
        ],
        "logprob": -4.089171632834075,
        "actions": [
            "intro.",
            "c eq_refl",
            "=> (= (+ z z) (+ z z))."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : (= z (+ z (s (+ z (+ (+ (s z) z) z)))))) -> (= z z)]",
        "problem_raw": "[('a0 : (= nat z (+ z (s (+ z (+ (+ (s z) z) z)))))) -> (= nat z z)]",
        "proof": [
            "theorem t : [('a0 : (= z (+ z (s (+ z (+ (+ (s z) z) z)))))) -> (= z z)] {",
            "intro x : (= z (+ z (s (+ z (+ (+ (s z) z) z))))).",
            "show (= z z) by eq_refl.",
            "}"
        ],
        "logprob": -4.622629687908413,
        "actions": [
            "intro.",
            "c eq_refl",
            "=> (= z z)."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : (= z z)) -> ('a1 : nat) -> ('a2 : (= z z)) -> (= 'a1 (+ (+ 'a1 z) 'a1))]",
        "problem_raw": "[('a0 : (= nat z z)) -> ('a1 : nat) -> ('a2 : (= nat z z)) -> (= nat 'a1 (+ (+ 'a1 z) 'a1))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : (= z z)) -> ('a1 : nat) -> (= 'a1 (+ 'a1 'a1))]",
        "problem_raw": "[('a0 : (= nat z z)) -> ('a1 : nat) -> (= nat 'a1 (+ 'a1 'a1))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= z (s z))) -> (= (+ 'a1 (+ (+ 'a1 'a1) 'a1)) (s 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat z (s z))) -> (= nat (+ 'a1 (+ (+ 'a1 'a1) 'a1)) (s 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> (= 'a0 'a0)]",
        "problem_raw": "[('a0 : nat) -> (= nat 'a0 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> (= 'a0 'a0)] {",
            "intro x : nat.",
            "show (= x x) by eq_refl.",
            "}"
        ],
        "logprob": -2.816232833590277,
        "actions": [
            "intro.",
            "c eq_refl",
            "=> (= x x)."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : (= (s (+ z (+ (+ z z) (+ (s z) (+ z z))))) z)) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : nat) -> ('a4 : nat) -> (= z 'a3)]",
        "problem_raw": "[('a0 : (= nat (s (+ z (+ (+ z z) (+ (s z) (+ z z))))) z)) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : nat) -> ('a4 : nat) -> (= nat z 'a3)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : (= (s (+ 'a0 (+ 'a0 'a0))) z)) -> ('a2 : (= z 'a0)) -> ('a3 : nat) -> (= 'a3 (+ z z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (s (+ 'a0 (+ 'a0 'a0))) z)) -> ('a2 : (= nat z 'a0)) -> ('a3 : nat) -> (= nat 'a3 (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : (= (+ 'a0 'a0) (+ (+ z z) z))) -> (= 'a0 z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (+ 'a0 'a0) (+ (+ z z) z))) -> (= nat 'a0 z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> (= 'a0 z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> (= nat 'a0 z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (s (+ (+ (s z) z) z)))) -> (= (+ z z) (s (+ (s z) (+ z z))))]",
        "problem_raw": "[('a0 : (= nat z z)) -> ('a1 : (= nat z (s (+ (+ (s z) z) z)))) -> (= nat (+ z z) (s (+ (s z) (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= (s (s (+ (+ (s z) z) z))) (+ (s (+ (+ (+ z (+ (+ z z) z)) z) z)) (+ (+ z z) (s z))))",
        "problem_raw": "(= nat (s (s (+ (+ (s z) z) z))) (+ (s (+ (+ (+ z (+ (+ z z) z)) z) z)) (+ (+ z z) (s z))))",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= (+ z (+ z (+ z (s z)))) (s z))",
        "problem_raw": "(= nat (+ z (+ z (+ z (s z)))) (s z))",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : (= (s (s 'a0)) (+ (+ z 'a0) 'a0))) -> (= z (+ (s (s 'a0)) 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (s (s 'a0)) (+ (+ z 'a0) 'a0))) -> (= nat z (+ (s (s 'a0)) 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : (= (+ z z) (s z))) -> (= (+ (+ (+ (+ z (s z)) z) (s z)) z) z)]",
        "problem_raw": "[('a0 : (= nat (+ z z) (s z))) -> (= nat (+ (+ (+ (+ z (s z)) z) (s z)) z) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : (= (+ z (s z)) z)) -> ('a1 : (= z (+ z (+ z z)))) -> (= z z)]",
        "problem_raw": "[('a0 : (= nat (+ z (s z)) z)) -> ('a1 : (= nat z (+ z (+ z z)))) -> (= nat z z)]",
        "proof": [
            "theorem t : [('a0 : (= (+ z (s z)) z)) -> ('a1 : (= z (+ z (+ z z)))) -> (= z z)] {",
            "intro x : (= (+ z (s z)) z).",
            "show (= z z) by rewrite.",
            "intro _ : [('a1 : (= z (+ z (+ z z)))) -> (= z z)].",
            "}"
        ],
        "logprob": -3.5165409762672417,
        "actions": [
            "intro.",
            "c rewrite",
            "=> (= z z).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= (+ (+ (+ z z) z) z) (+ z z))",
        "problem_raw": "(= nat (+ (+ (+ z z) z) z) (+ z z))",
        "proof": [
            "theorem t : (= (+ (+ (+ z z) z) z) (+ z z)) {",
            "show (= (+ (+ z z) z) (+ z z)) by +_z.",
            "show (= (+ z z) (+ (+ z z) z)) by eq_symm.",
            "show (= (+ (+ (+ z z) z) z) (+ z z)) by rewrite.",
            "}"
        ],
        "logprob": -5.615856567725259,
        "actions": [
            "c +_z",
            "=> (= (+ (+ z z) z) (+ z z)).",
            "c eq_symm",
            "=> (= (+ z z) (+ (+ z z) z)).",
            "c rewrite",
            "=> (= (+ (+ (+ z z) z) z) (+ z z))."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= (s z) (+ 'a1 z))) -> ('a3 : nat) -> (= 'a1 (+ 'a1 (+ 'a3 z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat (s z) (+ 'a1 z))) -> ('a3 : nat) -> (= nat 'a1 (+ 'a1 (+ 'a3 z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> (= 'a0 (s 'a0))]",
        "problem_raw": "[('a0 : nat) -> (= nat 'a0 (s 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : (= z (+ z (+ (s (+ (s (+ z (s z))) z)) (s z))))) -> ('a1 : (= z z)) -> (= (s z) (+ (+ (+ z z) z) (+ (+ (s z) z) z)))]",
        "problem_raw": "[('a0 : (= nat z (+ z (+ (s (+ (s (+ z (s z))) z)) (s z))))) -> ('a1 : (= nat z z)) -> (= nat (s z) (+ (+ (+ z z) z) (+ (+ (s z) z) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : (= (+ z (s (s (+ (s (+ (+ z z) z)) z)))) (+ (+ z (+ (+ z z) z)) z))) -> ('a1 : (= z (+ (+ z z) z))) -> ('a2 : nat) -> (= (+ 'a2 (+ (+ 'a2 'a2) z)) z)]",
        "problem_raw": "[('a0 : (= nat (+ z (s (s (+ (s (+ (+ z z) z)) z)))) (+ (+ z (+ (+ z z) z)) z))) -> ('a1 : (= nat z (+ (+ z z) z))) -> ('a2 : nat) -> (= nat (+ 'a2 (+ (+ 'a2 'a2) z)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= (+ z (+ z (+ z z))) (+ (s (s (+ (+ z z) (s (s (+ (+ (s (+ z (+ z z))) (+ z (+ z z))) z)))))) z))",
        "problem_raw": "(= nat (+ z (+ z (+ z z))) (+ (s (s (+ (+ z z) (s (s (+ (+ (s (+ z (+ z z))) (+ z (+ z z))) z)))))) z))",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> (= z (s z))]",
        "problem_raw": "[('a0 : nat) -> (= nat z (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z z)) -> ('a2 : nat) -> (= (+ 'a2 'a2) 'a2)]",
        "problem_raw": "[('a0 : (= nat z z)) -> ('a1 : (= nat z z)) -> ('a2 : nat) -> (= nat (+ 'a2 'a2) 'a2)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z z)) -> ('a2 : (= z (s z))) -> ('a3 : (= z z)) -> (= z z)]",
        "problem_raw": "[('a0 : (= nat z z)) -> ('a1 : (= nat z z)) -> ('a2 : (= nat z (s z))) -> ('a3 : (= nat z z)) -> (= nat z z)]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> ('a1 : (= z z)) -> ('a2 : (= z (s z))) -> ('a3 : (= z z)) -> (= z z)] {",
            "intro x : (= z z).",
            "intro x0 : (= z z).",
            "intro x1 : (= z (s z)).",
            "intro _ : [('a3 : (= z z)) -> (= z z)].",
            "}"
        ],
        "logprob": -3.140067555499509,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= z (+ z (+ z z)))",
        "problem_raw": "(= nat z (+ z (+ z z)))",
        "proof": [
            "theorem t : (= z (+ z (+ z z))) {",
            "show (= (+ z z) z) by +_z.",
            "show (= z (+ z z)) by eq_symm.",
            "show (= z (+ z (+ z z))) by rewrite.",
            "}"
        ],
        "logprob": -4.097882574171266,
        "actions": [
            "c +_z",
            "=> (= (+ z z) z).",
            "c eq_symm",
            "=> (= z (+ z z)).",
            "c rewrite",
            "=> (= z (+ z (+ z z)))."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= z (+ z (+ z 'a0)))) -> ('a3 : nat) -> (= 'a1 z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat z (+ z (+ z 'a0)))) -> ('a3 : nat) -> (= nat 'a1 z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= (+ (+ z (+ z (s z))) z) (+ (+ z (+ (+ (+ z z) z) (+ (+ z (+ z z)) (+ (+ z z) z)))) z))",
        "problem_raw": "(= nat (+ (+ z (+ z (s z))) z) (+ (+ z (+ (+ (+ z z) z) (+ (+ z (+ z z)) (+ (+ z z) z)))) z))",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> (= z z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> (= nat z z)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : nat) -> (= z z)] {",
            "intro x : nat.",
            "intro x0 : nat.",
            "show (= z z) by eq_refl.",
            "}"
        ],
        "logprob": -4.1785554821418085,
        "actions": [
            "intro.",
            "intro.",
            "c eq_refl",
            "=> (= z z)."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : (= (s z) z)) -> (= (+ z (+ (+ z z) (s (+ z z)))) z)]",
        "problem_raw": "[('a0 : (= nat (s z) z)) -> (= nat (+ z (+ (+ z z) (s (+ z z)))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= (s (+ z (s (+ z (s (+ z z)))))) (+ z (+ z z)))",
        "problem_raw": "(= nat (s (+ z (s (+ z (s (+ z z)))))) (+ z (+ z z)))",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> (= z 'a1)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> (= nat z 'a1)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : (= (s z) 'a0)) -> (= (s (s (s 'a0))) (s 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (s z) 'a0)) -> (= nat (s (s (s 'a0))) (s 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= (+ z (s z)) z)",
        "problem_raw": "(= nat (+ z (s z)) z)",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : (= (s z) (+ z z))) -> ('a1 : nat) -> (= (+ 'a1 (+ (+ z (+ (+ (+ z 'a1) 'a1) (+ z 'a1))) 'a1)) (+ z z))]",
        "problem_raw": "[('a0 : (= nat (s z) (+ z z))) -> ('a1 : nat) -> (= nat (+ 'a1 (+ (+ z (+ (+ (+ z 'a1) 'a1) (+ z 'a1))) 'a1)) (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= (+ (+ z (+ z z)) (s z)) z)",
        "problem_raw": "(= nat (+ (+ z (+ z z)) (s z)) z)",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> (= (+ (+ 'a0 z) z) z)]",
        "problem_raw": "[('a0 : nat) -> (= nat (+ (+ 'a0 z) z) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : (= (+ z z) (+ z z))) -> (= (+ (+ z z) z) z)]",
        "problem_raw": "[('a0 : (= nat (+ z z) (+ z z))) -> (= nat (+ (+ z z) z) z)]",
        "proof": [
            "theorem t : [('a0 : (= (+ z z) (+ z z))) -> (= (+ (+ z z) z) z)] {",
            "intro x : (= (+ z z) (+ z z)).",
            "show (= (+ (+ z z) z) (+ z z)) by +_z.",
            "show (= (+ z z) z) by +_z.",
            "show (= (+ (+ z z) z) z) by rewrite.",
            "}"
        ],
        "logprob": -5.195371789214585,
        "actions": [
            "intro.",
            "c +_z",
            "=> (= (+ (+ z z) z) (+ z z)).",
            "c +_z",
            "=> (= (+ z z) z).",
            "c rewrite",
            "=> (= (+ (+ z z) z) z)."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (+ (s z) (+ (+ (+ z (+ z z)) z) (s z))) z)) -> (= z (+ (+ (s (+ z z)) z) (+ z z)))]",
        "problem_raw": "[('a0 : (= nat z z)) -> ('a1 : (= nat (+ (s z) (+ (+ (+ z (+ z z)) z) (s z))) z)) -> (= nat z (+ (+ (s (+ z z)) z) (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : nat) -> ('a3 : (= 'a0 z)) -> (= 'a2 'a2)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : nat) -> ('a3 : (= nat 'a0 z)) -> (= nat 'a2 'a2)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : nat) -> ('a4 : (= z (+ 'a1 'a2))) -> ('a5 : (= 'a2 (+ (+ z (+ z (+ (s 'a1) z))) z))) -> (= 'a1 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : nat) -> ('a4 : (= nat z (+ 'a1 'a2))) -> ('a5 : (= nat 'a2 (+ (+ z (+ z (+ (s 'a1) z))) z))) -> (= nat 'a1 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> (= (s 'a0) (s 'a0))]",
        "problem_raw": "[('a0 : nat) -> (= nat (s 'a0) (s 'a0))]",
        "proof": [
            "theorem t : [('a0 : nat) -> (= (s 'a0) (s 'a0))] {",
            "intro x : nat.",
            "show (= (s x) (s x)) by eq_refl.",
            "}"
        ],
        "logprob": -3.0245723170061236,
        "actions": [
            "intro.",
            "c eq_refl",
            "=> (= (s x) (s x))."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= (+ (s z) z) z)",
        "problem_raw": "(= nat (+ (s z) z) z)",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : (= z z)) -> (= (+ z z) z)]",
        "problem_raw": "[('a0 : (= nat z z)) -> (= nat (+ z z) z)]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> (= (+ z z) z)] {",
            "intro x : (= z z).",
            "show (= (+ z z) z) by +_z.",
            "}"
        ],
        "logprob": -1.3133628398576187,
        "actions": [
            "intro.",
            "c +_z",
            "=> (= (+ z z) z)."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= (s 'a0) z)) -> ('a3 : nat) -> ('a4 : nat) -> (= (s (s z)) 'a4)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat (s 'a0) z)) -> ('a3 : nat) -> ('a4 : nat) -> (= nat (s (s z)) 'a4)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= (s (+ z z)) (s z))",
        "problem_raw": "(= nat (s (+ z z)) (s z))",
        "proof": [
            "theorem t : (= (s (+ z z)) (s z)) {",
            "show (= (s (+ z z)) (s (+ z z))) by eq_refl.",
            "show (= (+ z z) z) by +_z.",
            "show (= (s (+ z z)) (s z)) by rewrite.",
            "}"
        ],
        "logprob": -5.589978999175318,
        "actions": [
            "c eq_refl",
            "=> (= (s (+ z z)) (s (+ z z))).",
            "c +_z",
            "=> (= (+ z z) z).",
            "c rewrite",
            "=> (= (s (+ z z)) (s z))."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= (+ (+ (s z) z) z) (+ z (+ z z)))",
        "problem_raw": "(= nat (+ (+ (s z) z) z) (+ z (+ z z)))",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ 'a0 (+ 'a0 (+ 'a0 'a0))))) -> (= 'a0 (+ z 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ 'a0 (+ 'a0 (+ 'a0 'a0))))) -> (= nat 'a0 (+ z 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= (+ (+ (s (+ z (+ z z))) (s z)) z) z)",
        "problem_raw": "(= nat (+ (+ (s (+ z (+ z z))) (s z)) z) z)",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= z (s (+ (+ z (s (s (+ z z)))) z)))",
        "problem_raw": "(= nat z (s (+ (+ z (s (s (+ z z)))) z)))",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= (+ (s (+ (+ (+ z (s z)) z) z)) (+ (+ (+ (s z) (+ z (+ z (s z)))) z) z)) z)",
        "problem_raw": "(= nat (+ (s (+ (+ (+ z (s z)) z) z)) (+ (+ (+ (s z) (+ z (+ z (s z)))) z) z)) z)",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= z 'a0)) -> (= (s 'a1) 'a1)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= nat z 'a0)) -> (= nat (s 'a1) 'a1)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : (= (+ (+ 'a0 (s z)) z) 'a0)) -> ('a2 : (= z z)) -> ('a3 : nat) -> ('a4 : (= 'a3 z)) -> ('a5 : nat) -> (= 'a3 'a5)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (+ (+ 'a0 (s z)) z) 'a0)) -> ('a2 : (= nat z z)) -> ('a3 : nat) -> ('a4 : (= nat 'a3 z)) -> ('a5 : nat) -> (= nat 'a3 'a5)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : (= z z)) -> (= (s (s z)) (+ (+ z (s z)) (+ (s (s z)) (+ z (+ (s z) z)))))]",
        "problem_raw": "[('a0 : (= nat z z)) -> (= nat (s (s z)) (+ (+ z (s z)) (+ (s (s z)) (+ z (+ (s z) z)))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : (= z (+ z z))) -> ('a1 : (= (s (s (+ (s z) (s (+ z z))))) z)) -> ('a2 : (= z (+ z z))) -> (= z (+ z (+ z z)))]",
        "problem_raw": "[('a0 : (= nat z (+ z z))) -> ('a1 : (= nat (s (s (+ (s z) (s (+ z z))))) z)) -> ('a2 : (= nat z (+ z z))) -> (= nat z (+ z (+ z z)))]",
        "proof": [
            "theorem t : [('a0 : (= z (+ z z))) -> ('a1 : (= (s (s (+ (s z) (s (+ z z))))) z)) -> ('a2 : (= z (+ z z))) -> (= z (+ z (+ z z)))] {",
            "intro x : (= z (+ z z)).",
            "show (= z (+ z (+ z z))) by rewrite.",
            "intro x0 : (= (s (s (+ (s z) (s (+ z z))))) z).",
            "intro _ : [('a2 : (= z (+ z z))) -> (= z (+ z (+ z z)))].",
            "}"
        ],
        "logprob": -6.51122764736159,
        "actions": [
            "intro.",
            "c rewrite",
            "=> (= z (+ z (+ z z))).",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= (+ (+ z 'a2) (+ (+ z z) z)) z)) -> ('a4 : nat) -> (= (+ z 'a0) (s 'a2))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= nat (+ (+ z 'a2) (+ (+ z z) z)) z)) -> ('a4 : nat) -> (= nat (+ z 'a0) (s 'a2))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= z z)) -> ('a4 : (= 'a1 (+ 'a0 'a2))) -> ('a5 : nat) -> ('a6 : nat) -> (= 'a5 'a1)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= nat z z)) -> ('a4 : (= nat 'a1 (+ 'a0 'a2))) -> ('a5 : nat) -> ('a6 : nat) -> (= nat 'a5 'a1)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : (= (+ (+ z z) (+ z z)) (s z))) -> ('a1 : nat) -> (= 'a1 (+ (+ (+ 'a1 z) 'a1) 'a1))]",
        "problem_raw": "[('a0 : (= nat (+ (+ z z) (+ z z)) (s z))) -> ('a1 : nat) -> (= nat 'a1 (+ (+ (+ 'a1 z) 'a1) 'a1))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : (= (+ z 'a0) 'a0)) -> ('a2 : (= z (s 'a0))) -> ('a3 : nat) -> (= z 'a3)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (+ z 'a0) 'a0)) -> ('a2 : (= nat z (s 'a0))) -> ('a3 : nat) -> (= nat z 'a3)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= (+ (+ z z) z) (+ z z))",
        "problem_raw": "(= nat (+ (+ z z) z) (+ z z))",
        "proof": [
            "theorem t : (= (+ (+ z z) z) (+ z z)) {",
            "show (= (+ (+ z z) z) (+ z z)) by +_z.",
            "}"
        ],
        "logprob": -1.4475014148814371,
        "actions": [
            "c +_z",
            "=> (= (+ (+ z z) z) (+ z z))."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> (= 'a0 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> (= nat 'a0 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : nat) -> (= 'a0 'a0)] {",
            "intro x : nat.",
            "intro x0 : nat.",
            "show (= x x) by eq_refl.",
            "}"
        ],
        "logprob": -4.154675654445777,
        "actions": [
            "intro.",
            "intro.",
            "c eq_refl",
            "=> (= x x)."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= (+ z z) (+ (s z) z))",
        "problem_raw": "(= nat (+ z z) (+ (s z) z))",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= z (+ (s z) (+ (+ z z) z)))",
        "problem_raw": "(= nat z (+ (s z) (+ (+ z z) z)))",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : (= (+ z z) (+ z z))) -> ('a1 : (= z z)) -> ('a2 : (= z z)) -> ('a3 : (= z z)) -> (= z z)]",
        "problem_raw": "[('a0 : (= nat (+ z z) (+ z z))) -> ('a1 : (= nat z z)) -> ('a2 : (= nat z z)) -> ('a3 : (= nat z z)) -> (= nat z z)]",
        "proof": [
            "theorem t : [('a0 : (= (+ z z) (+ z z))) -> ('a1 : (= z z)) -> ('a2 : (= z z)) -> ('a3 : (= z z)) -> (= z z)] {",
            "intro x : (= (+ z z) (+ z z)).",
            "intro x0 : (= z z).",
            "intro x1 : (= z z).",
            "intro _ : [('a3 : (= z z)) -> (= z z)].",
            "}"
        ],
        "logprob": -3.6167360396713524,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> (= (+ z z) 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> (= nat (+ z z) 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= (+ z z) (+ (+ z z) z))",
        "problem_raw": "(= nat (+ z z) (+ (+ z z) z))",
        "proof": [
            "theorem t : (= (+ z z) (+ (+ z z) z)) {",
            "show (= (+ (+ z z) z) (+ z z)) by +_z.",
            "show (= (+ z z) (+ (+ z z) z)) by eq_symm.",
            "}"
        ],
        "logprob": -2.884785954249256,
        "actions": [
            "c +_z",
            "=> (= (+ (+ z z) z) (+ z z)).",
            "c eq_symm",
            "=> (= (+ z z) (+ (+ z z) z))."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> (= 'a0 z)]",
        "problem_raw": "[('a0 : nat) -> (= nat 'a0 z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= z (+ (+ z (+ (+ z (s (s (s z)))) z)) (+ z (s (+ z (+ z z))))))",
        "problem_raw": "(= nat z (+ (+ z (+ (+ z (s (s (s z)))) z)) (+ z (s (+ z (+ z z))))))",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= (s z) (s (+ (s (s (s (s z)))) (+ (+ z (+ z z)) (s z)))))",
        "problem_raw": "(= nat (s z) (s (+ (s (s (s (s z)))) (+ (+ z (+ z z)) (s z)))))",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> (= 'a1 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> (= nat 'a1 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= (+ (+ z z) z) z)) -> ('a3 : nat) -> ('a4 : nat) -> (= z (s (s 'a3)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat (+ (+ z z) z) z)) -> ('a3 : nat) -> ('a4 : nat) -> (= nat z (s (s 'a3)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= z (+ (+ z z) (+ z z)))",
        "problem_raw": "(= nat z (+ (+ z z) (+ z z)))",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : (= (+ (s z) z) (+ z z))) -> (= z (s (s (+ z z))))]",
        "problem_raw": "[('a0 : (= nat (+ (s z) z) (+ z z))) -> (= nat z (s (s (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= z 'a1)) -> ('a4 : nat) -> ('a5 : (= 'a1 (+ z (s (s z))))) -> ('a6 : (= z z)) -> ('a7 : (= 'a0 z)) -> ('a8 : (= 'a1 z)) -> (= 'a2 'a2)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= nat z 'a1)) -> ('a4 : nat) -> ('a5 : (= nat 'a1 (+ z (s (s z))))) -> ('a6 : (= nat z z)) -> ('a7 : (= nat 'a0 z)) -> ('a8 : (= nat 'a1 z)) -> (= nat 'a2 'a2)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> (= (s 'a0) (+ 'a0 z))]",
        "problem_raw": "[('a0 : nat) -> (= nat (s 'a0) (+ 'a0 z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> (= (+ (+ (+ z z) 'a1) 'a1) (s z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> (= nat (+ (+ (+ z z) 'a1) 'a1) (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> (= (+ (+ (+ 'a0 z) 'a0) 'a0) 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> (= nat (+ (+ (+ 'a0 z) 'a0) 'a0) 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= 'a1 'a1)) -> ('a3 : nat) -> ('a4 : (= z 'a0)) -> ('a5 : (= 'a3 'a3)) -> (= (+ z 'a1) 'a1)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat 'a1 'a1)) -> ('a3 : nat) -> ('a4 : (= nat z 'a0)) -> ('a5 : (= nat 'a3 'a3)) -> (= nat (+ z 'a1) 'a1)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : (= z (s z))) -> ('a1 : nat) -> (= 'a1 z)]",
        "problem_raw": "[('a0 : (= nat z (s z))) -> ('a1 : nat) -> (= nat 'a1 z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> (= (s (+ 'a0 'a0)) 'a0)]",
        "problem_raw": "[('a0 : nat) -> (= nat (s (+ 'a0 'a0)) 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> (= z (s (+ (+ (+ z (+ 'a0 'a0)) z) z)))]",
        "problem_raw": "[('a0 : nat) -> (= nat z (s (+ (+ (+ z (+ 'a0 'a0)) z) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : nat) -> (= z 'a2)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : nat) -> (= nat z 'a2)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : nat) -> (= 'a0 z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : nat) -> (= nat 'a0 z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : nat) -> ('a3 : nat) -> ('a4 : (= 'a2 (+ 'a3 z))) -> ('a5 : (= 'a3 'a0)) -> (= z 'a2)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : nat) -> ('a3 : nat) -> ('a4 : (= nat 'a2 (+ 'a3 z))) -> ('a5 : (= nat 'a3 'a0)) -> (= nat z 'a2)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : (= z (+ z z))) -> (= z (+ z (+ (s (s z)) (+ z (s (s z))))))]",
        "problem_raw": "[('a0 : (= nat z (+ z z))) -> (= nat z (+ z (+ (s (s z)) (+ z (s (s z))))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= (s (+ (+ (+ (s (+ z (s z))) (+ z z)) (s (s z))) (+ (s z) z))) (+ (+ z (+ z (+ (+ z (+ z (+ z z))) z))) (+ z (+ z z))))",
        "problem_raw": "(= nat (s (+ (+ (+ (s (+ z (s z))) (+ z z)) (s (s z))) (+ (s z) z))) (+ (+ z (+ z (+ (+ z (+ z (+ z z))) z))) (+ z (+ z z))))",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> (= (+ 'a0 'a0) z)]",
        "problem_raw": "[('a0 : nat) -> (= nat (+ 'a0 'a0) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= (+ (+ (s z) (+ z z)) (+ (+ (s (s z)) z) (s z))) z)",
        "problem_raw": "(= nat (+ (+ (s z) (+ z z)) (+ (+ (s (s z)) z) (s z))) z)",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : (= (+ (+ (+ z (+ z (s (s (+ (s z) z))))) z) z) z)) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= 'a1 'a2)) -> (= z z)]",
        "problem_raw": "[('a0 : (= nat (+ (+ (+ z (+ z (s (s (+ (s z) z))))) z) z) z)) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= nat 'a1 'a2)) -> (= nat z z)]",
        "proof": [
            "theorem t : [('a0 : (= (+ (+ (+ z (+ z (s (s (+ (s z) z))))) z) z) z)) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= 'a1 'a2)) -> (= z z)] {",
            "show (= z z) by eq_refl.",
            "intro x : (= (+ (+ (+ z (+ z (s (s (+ (s z) z))))) z) z) z).",
            "intro x0 : nat.",
            "intro x1 : nat.",
            "intro _ : [('a3 : (= x0 x1)) -> (= z z)].",
            "}"
        ],
        "logprob": -7.751737582806814,
        "actions": [
            "c eq_refl",
            "=> (= z z).",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= z (+ (+ z (s (+ z z))) z))",
        "problem_raw": "(= nat z (+ (+ z (s (+ z z))) z))",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> (= z 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> (= nat z 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> (= z (s z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> (= nat z (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= (+ z (+ (s (+ (+ (+ (+ z (+ (+ z z) z)) (+ (s z) (+ (+ (s z) (+ z z)) (+ (s z) z)))) z) z)) z)) z)",
        "problem_raw": "(= nat (+ z (+ (s (+ (+ (+ (+ z (+ (+ z z) z)) (+ (s z) (+ (+ (s z) (+ z z)) (+ (s z) z)))) z) z)) z)) z)",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= 'a0 z)) -> ('a3 : nat) -> ('a4 : nat) -> (= z 'a3)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat 'a0 z)) -> ('a3 : nat) -> ('a4 : nat) -> (= nat z 'a3)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= z (+ (+ z z) z))",
        "problem_raw": "(= nat z (+ (+ z z) z))",
        "proof": [
            "theorem t : (= z (+ (+ z z) z)) {",
            "show (= (+ z z) z) by +_z.",
            "show (= z (+ z z)) by eq_symm.",
            "show (= z (+ (+ z z) z)) by rewrite.",
            "}"
        ],
        "logprob": -5.5647123308968105,
        "actions": [
            "c +_z",
            "=> (= (+ z z) z).",
            "c eq_symm",
            "=> (= z (+ z z)).",
            "c rewrite",
            "=> (= z (+ (+ z z) z))."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : (= (s (s (s 'a0))) (s (s (+ z 'a0))))) -> ('a2 : (= (+ (+ 'a0 'a0) 'a0) 'a0)) -> (= (+ z (s 'a0)) 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (s (s (s 'a0))) (s (s (+ z 'a0))))) -> ('a2 : (= nat (+ (+ 'a0 'a0) 'a0) 'a0)) -> (= nat (+ z (s 'a0)) 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= z (s (+ z (s z))))",
        "problem_raw": "(= nat z (s (+ z (s z))))",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= 'a0 (+ (+ 'a0 (+ 'a0 (+ (+ (+ z 'a0) z) 'a0))) z))) -> ('a3 : nat) -> (= z 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat 'a0 (+ (+ 'a0 (+ 'a0 (+ (+ (+ z 'a0) z) 'a0))) z))) -> ('a3 : nat) -> (= nat z 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ (+ z (+ z z)) z))) -> (= z z)]",
        "problem_raw": "[('a0 : (= nat z z)) -> ('a1 : (= nat z (+ (+ z (+ z z)) z))) -> (= nat z z)]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> ('a1 : (= z (+ (+ z (+ z z)) z))) -> (= z z)] {",
            "intro x : (= z z).",
            "intro _ : [('a1 : (= z (+ (+ z (+ z z)) z))) -> (= z z)].",
            "}"
        ],
        "logprob": -1.2743717507774237,
        "actions": [
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : nat) -> (= 'a0 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : nat) -> (= nat 'a0 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : nat) -> ('a2 : nat) -> (= 'a0 'a0)] {",
            "intro x : nat.",
            "intro x0 : nat.",
            "show (= x x) by eq_refl.",
            "intro _ : [('a2 : nat) -> (= x x)].",
            "}"
        ],
        "logprob": -5.911926667552362,
        "actions": [
            "intro.",
            "intro.",
            "c eq_refl",
            "=> (= x x).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= z (+ (+ (s (s z)) z) (+ (s z) z)))",
        "problem_raw": "(= nat z (+ (+ (s (s z)) z) (+ (s z) z)))",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= z (+ (s z) (+ z (s (s (+ (s (+ z (s (+ z (+ z (+ (+ (s z) (+ z (s z))) (+ z z))))))) z))))))",
        "problem_raw": "(= nat z (+ (s z) (+ z (s (s (+ (s (+ z (s (+ z (+ z (+ (+ (s z) (+ z (s z))) (+ z z))))))) z))))))",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= (s (s (+ z z))) z)",
        "problem_raw": "(= nat (s (s (+ z z))) z)",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> (= (+ (s (s z)) 'a0) (+ z z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> (= nat (+ (s (s z)) 'a0) (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : (= z (s z))) -> (= 'a0 z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z (s z))) -> (= nat 'a0 z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= z (s (+ (s (s (+ z (s z)))) z)))",
        "problem_raw": "(= nat z (s (+ (s (s (+ z (s z)))) z)))",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> (= z (+ (s z) (s 'a0)))]",
        "problem_raw": "[('a0 : nat) -> (= nat z (+ (s z) (s 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= (+ z (+ z (+ z z))) (s (+ (s z) (s z))))",
        "problem_raw": "(= nat (+ z (+ z (+ z z))) (s (+ (s z) (s z))))",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= (+ (+ (s (+ z (s (+ (+ z (+ z (+ (+ (+ (s (+ (+ z (s z)) z)) (+ (+ z z) z)) z) z))) z)))) (+ z (+ z (+ z (+ z (+ z z)))))) z) z)",
        "problem_raw": "(= nat (+ (+ (s (+ z (s (+ (+ z (+ z (+ (+ (+ (s (+ (+ z (s z)) z)) (+ (+ z z) z)) z) z))) z)))) (+ z (+ z (+ z (+ z (+ z z)))))) z) z)",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= (s (+ (+ (+ (+ z (s (+ (s (s z)) z))) (s z)) z) z)) (+ (+ (+ z (s z)) (+ z (+ z z))) z))",
        "problem_raw": "(= nat (s (+ (+ (+ (+ z (s (+ (s (s z)) z))) (s z)) z) z)) (+ (+ (+ z (s z)) (+ z (+ z z))) z))",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= (+ 'a0 (s 'a2)) 'a1)) -> ('a4 : (= 'a2 'a2)) -> (= (s 'a0) (+ z z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= nat (+ 'a0 (s 'a2)) 'a1)) -> ('a4 : (= nat 'a2 'a2)) -> (= nat (s 'a0) (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= (+ (+ (+ (+ (+ (s z) z) (s (s (+ z z)))) (+ z (+ (s z) (s z)))) (+ z z)) z) (+ z (+ z (+ (+ z (+ z z)) (+ z z)))))",
        "problem_raw": "(= nat (+ (+ (+ (+ (+ (s z) z) (s (s (+ z z)))) (+ z (+ (s z) (s z)))) (+ z z)) z) (+ z (+ z (+ (+ z (+ z z)) (+ z z)))))",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= z (+ z (s (+ (+ z (+ z z)) (+ z (s (+ z z)))))))",
        "problem_raw": "(= nat z (+ z (s (+ (+ z (+ z z)) (+ z (s (+ z z)))))))",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : (= z (+ (s z) (+ z (s z))))) -> ('a1 : (= z z)) -> (= z (+ (+ (s (+ (s z) z)) z) (+ (+ z (s z)) z)))]",
        "problem_raw": "[('a0 : (= nat z (+ (s z) (+ z (s z))))) -> ('a1 : (= nat z z)) -> (= nat z (+ (+ (s (+ (s z) z)) z) (+ (+ z (s z)) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : (= (s z) (s (+ (s z) (+ (+ (+ z z) (+ z z)) z))))) -> (= z z)]",
        "problem_raw": "[('a0 : (= nat (s z) (s (+ (s z) (+ (+ (+ z z) (+ z z)) z))))) -> (= nat z z)]",
        "proof": [
            "theorem t : [('a0 : (= (s z) (s (+ (s z) (+ (+ (+ z z) (+ z z)) z))))) -> (= z z)] {",
            "show (= z z) by eq_refl.",
            "intro _ : [('a0 : (= (s z) (s (+ (s z) (+ (+ (+ z z) (+ z z)) z))))) -> (= z z)].",
            "}"
        ],
        "logprob": -2.838635623140223,
        "actions": [
            "c eq_refl",
            "=> (= z z).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= (+ (+ (+ z (+ z z)) (+ (+ z z) (+ z z))) (+ (+ z z) (+ z (+ z (+ (+ (+ z (+ z z)) (+ z z)) z))))) (+ z z))",
        "problem_raw": "(= nat (+ (+ (+ z (+ z z)) (+ (+ z z) (+ z z))) (+ (+ z z) (+ z (+ z (+ (+ (+ z (+ z z)) (+ z z)) z))))) (+ z z))",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> (= (s z) (+ (+ 'a1 z) (s z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> (= nat (s z) (+ (+ 'a1 z) (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : (= (+ 'a0 'a0) (s z))) -> ('a2 : nat) -> ('a3 : (= (+ 'a0 'a2) (s 'a2))) -> (= 'a2 z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (+ 'a0 'a0) (s z))) -> ('a2 : nat) -> ('a3 : (= nat (+ 'a0 'a2) (s 'a2))) -> (= nat 'a2 z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= z (+ (+ (+ (+ (+ (s z) z) z) (+ (s z) z)) z) z))",
        "problem_raw": "(= nat z (+ (+ (+ (+ (+ (s z) z) z) (+ (s z) z)) z) z))",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= z (s (+ z (+ z z))))",
        "problem_raw": "(= nat z (s (+ z (+ z z))))",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z z)) -> ('a2 : (= z z)) -> (= (+ z z) z)]",
        "problem_raw": "[('a0 : (= nat z z)) -> ('a1 : (= nat z z)) -> ('a2 : (= nat z z)) -> (= nat (+ z z) z)]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> ('a1 : (= z z)) -> ('a2 : (= z z)) -> (= (+ z z) z)] {",
            "intro x : (= z z).",
            "intro x0 : (= z z).",
            "intro x1 : (= z z).",
            "show (= (+ z z) z) by +_z.",
            "}"
        ],
        "logprob": -3.1474869412741238,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "c +_z",
            "=> (= (+ z z) z)."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= (+ z (+ z (+ (+ z z) z))) (s z))",
        "problem_raw": "(= nat (+ z (+ z (+ (+ z z) z))) (s z))",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= (+ (+ z (+ z z)) z) z)",
        "problem_raw": "(= nat (+ (+ z (+ z z)) z) z)",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : (= z (+ z z))) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= 'a1 (+ z 'a1))) -> (= z z)]",
        "problem_raw": "[('a0 : (= nat z (+ z z))) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= nat 'a1 (+ z 'a1))) -> (= nat z z)]",
        "proof": [
            "theorem t : [('a0 : (= z (+ z z))) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= 'a1 (+ z 'a1))) -> (= z z)] {",
            "show (= z z) by eq_refl.",
            "intro x : (= z (+ z z)).",
            "intro x0 : nat.",
            "intro x1 : nat.",
            "intro _ : [('a3 : (= x0 (+ z x0))) -> (= z z)].",
            "}"
        ],
        "logprob": -7.796970106106477,
        "actions": [
            "c eq_refl",
            "=> (= z z).",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= (+ (+ (s z) (+ z z)) z) (+ z (+ z (s z))))",
        "problem_raw": "(= nat (+ (+ (s z) (+ z z)) z) (+ z (+ z (s z))))",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= 'a1 z)) -> ('a3 : (= z z)) -> (= z 'a1)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat 'a1 z)) -> ('a3 : (= nat z z)) -> (= nat z 'a1)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : nat) -> ('a2 : (= 'a1 z)) -> ('a3 : (= z z)) -> (= z 'a1)] {",
            "intro x : nat.",
            "intro x0 : nat.",
            "intro x1 : (= x0 z).",
            "show (= z x0) by eq_symm.",
            "intro _ : [('a3 : (= z z)) -> (= z x0)].",
            "}"
        ],
        "logprob": -5.152130763592369,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "c eq_symm",
            "=> (= z x0).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : nat) -> (= (+ (+ z 'a0) 'a2) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : nat) -> (= nat (+ (+ z 'a0) 'a2) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (+ z z) z)) -> ('a2 : nat) -> ('a3 : (= 'a2 z)) -> (= z 'a2)]",
        "problem_raw": "[('a0 : (= nat z z)) -> ('a1 : (= nat (+ z z) z)) -> ('a2 : nat) -> ('a3 : (= nat 'a2 z)) -> (= nat z 'a2)]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> ('a1 : (= (+ z z) z)) -> ('a2 : nat) -> ('a3 : (= 'a2 z)) -> (= z 'a2)] {",
            "intro x : (= z z).",
            "intro x0 : (= (+ z z) z).",
            "intro x1 : nat.",
            "intro x2 : (= x1 z).",
            "show (= z x1) by eq_symm.",
            "}"
        ],
        "logprob": -5.186266556253838,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "c eq_symm",
            "=> (= z x1)."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : (= (s z) z)) -> ('a2 : nat) -> ('a3 : nat) -> ('a4 : (= z z)) -> ('a5 : nat) -> (= (+ (+ z 'a0) (s 'a0)) 'a2)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (s z) z)) -> ('a2 : nat) -> ('a3 : nat) -> ('a4 : (= nat z z)) -> ('a5 : nat) -> (= nat (+ (+ z 'a0) (s 'a0)) 'a2)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= z (s (+ z z)))",
        "problem_raw": "(= nat z (s (+ z z)))",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= (s (s (s (s (s (+ z z)))))) (s z))",
        "problem_raw": "(= nat (s (s (s (s (s (+ z z)))))) (s z))",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= (+ z (s (+ (s (s z)) z))) (+ z z))",
        "problem_raw": "(= nat (+ z (s (+ (s (s z)) z))) (+ z z))",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= (s z) (s (+ (+ z z) z)))",
        "problem_raw": "(= nat (s z) (s (+ (+ z z) z)))",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= z (+ (+ z (+ z z)) (+ z z)))",
        "problem_raw": "(= nat z (+ (+ z (+ z z)) (+ z z)))",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= (+ (s (+ 'a2 (s z))) (+ 'a2 (s z))) 'a2)) -> ('a4 : nat) -> ('a5 : nat) -> ('a6 : (= (s z) (s 'a1))) -> ('a7 : nat) -> (= (s z) 'a7)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= nat (+ (s (+ 'a2 (s z))) (+ 'a2 (s z))) 'a2)) -> ('a4 : nat) -> ('a5 : nat) -> ('a6 : (= nat (s z) (s 'a1))) -> ('a7 : nat) -> (= nat (s z) 'a7)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : (= (+ z z) z)) -> (= z z)]",
        "problem_raw": "[('a0 : (= nat (+ z z) z)) -> (= nat z z)]",
        "proof": [
            "theorem t : [('a0 : (= (+ z z) z)) -> (= z z)] {",
            "intro x : (= (+ z z) z).",
            "show (= z z) by eq_refl.",
            "}"
        ],
        "logprob": -3.73341777655044,
        "actions": [
            "intro.",
            "c eq_refl",
            "=> (= z z)."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : (= (+ z (+ (+ z z) (s z))) z)) -> ('a1 : nat) -> ('a2 : nat) -> (= 'a2 (+ 'a2 (s 'a1)))]",
        "problem_raw": "[('a0 : (= nat (+ z (+ (+ z z) (s z))) z)) -> ('a1 : nat) -> ('a2 : nat) -> (= nat 'a2 (+ 'a2 (s 'a1)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= z (+ z (+ z (+ z z))))",
        "problem_raw": "(= nat z (+ z (+ z (+ z z))))",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : nat) -> (= 'a0 z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : nat) -> (= nat 'a0 z)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : nat) -> (= 'a0 z)] {",
            "intro x : nat.",
            "intro x0 : (= z x).",
            "show (= x z) by eq_symm.",
            "intro x1 : (= x x).",
            "intro _ : [('a3 : nat) -> (= x z)].",
            "}"
        ],
        "logprob": -5.33305097038865,
        "actions": [
            "intro.",
            "intro.",
            "c eq_symm",
            "=> (= x z).",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= (s (+ z (+ z z))) (+ (+ z z) z))",
        "problem_raw": "(= nat (s (+ z (+ z z))) (+ (+ z z) z))",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> (= (+ 'a0 (s (+ (+ z 'a0) z))) 'a0)]",
        "problem_raw": "[('a0 : nat) -> (= nat (+ 'a0 (s (+ (+ z 'a0) z))) 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : (= (+ (+ 'a0 (s 'a0)) (+ 'a0 'a0)) (+ 'a0 (+ z 'a0)))) -> (= z (s z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (+ (+ 'a0 (s 'a0)) (+ 'a0 'a0)) (+ 'a0 (+ z 'a0)))) -> (= nat z (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= (+ z (s (s (+ z z)))) (+ z (s z)))",
        "problem_raw": "(= nat (+ z (s (s (+ z z)))) (+ z (s z)))",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "(= z (+ z (+ (+ z (+ z z)) z)))",
        "problem_raw": "(= nat z (+ z (+ (+ z (+ z z)) z)))",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : (= (s z) (+ z (s z)))) -> ('a1 : nat) -> (= z 'a1)]",
        "problem_raw": "[('a0 : (= nat (s z) (+ z (s z)))) -> ('a1 : nat) -> (= nat z 'a1)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= 'a1 'a0)) -> ('a3 : nat) -> (= (+ 'a3 (s 'a0)) 'a1)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat 'a1 'a0)) -> ('a3 : nat) -> (= nat (+ 'a3 (s 'a0)) 'a1)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> (= (s (+ (+ 'a0 'a1) 'a1)) (s 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> (= nat (s (+ (+ 'a0 'a1) 'a1)) (s 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 0,
        "problem": "[('a0 : (= z (+ z z))) -> (= z (s z))]",
        "problem_raw": "[('a0 : (= nat z (+ z z))) -> (= nat z (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= (+ z (+ z z)) z)) -> ('a1 : (= (s (+ z (+ z (+ z z)))) (s z))) -> (= z z)]",
        "problem_raw": "[ ('a0 :(= nat (+ z (+ z z)) z) ) -> ('a1 : (= nat (s (+ z (+ z (+ z z)))) (s z))) -> (= nat z z)]",
        "proof": [
            "theorem t : [('a0 : (= (+ z (+ z z)) z)) -> ('a1 : (= (s (+ z (+ z (+ z z)))) (s z))) -> (= z z)] {",
            "show (= z z) by c0032.",
            "intro x : (= (+ z (+ z z)) z).",
            "intro _ : [('a1 : (= (s (+ z (+ z (+ z z)))) (s z))) -> (= z z)].",
            "}"
        ],
        "logprob": -4.255988026138241,
        "actions": [
            "c c0032",
            "=> (= z z).",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (+ z z)) z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> (= (+ z z) (+ (+ z z) (+ z z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> (= nat (+ z z) (+ (+ z z) (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= z 'a0)) -> (= (+ (s z) 'a0) (+ z 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0))  -> (= nat (+ (s z) 'a0) (+ z 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> (= (+ 'a0 z) z)]",
        "problem_raw": "[('a0 : nat) -> (= nat (+ 'a0 z) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> (= 'a0 z)]",
        "problem_raw": "[('a0 : nat) -> (= nat 'a0 z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= z 'a0)) -> ('a3 : nat) -> ('a4 : (= 'a0 'a0)) -> ('a5 : nat) -> ('a6 : (= 'a0 z)) -> (= 'a0 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0))  -> ('a3 : nat) -> ('a4 : (= nat 'a0 'a0)) -> ('a5 : nat) -> ('a6 : (= nat 'a0 z)) -> (= nat 'a0 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= (+ 'a1 'a2) (+ z 'a0))) -> (= (+ 'a1 (+ z 'a0)) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= nat (+ 'a1 'a2) (+ z 'a0))) -> (= nat (+ 'a1 (+ z 'a0)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= (+ (+ z z) z) z)) -> ('a1 : (= (+ z z) z)) -> (= (+ z z) z)]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z z) z) z) ) -> ('a1 : (= nat (+ z z) z)) -> (= nat (+ z z) z)]",
        "proof": [
            "theorem t : [('a0 : (= (+ (+ z z) z) z)) -> ('a1 : (= (+ z z) z)) -> (= (+ z z) z)] {",
            "intro x : (= (+ (+ z z) z) z).",
            "intro _ : [('a1 : (= (+ z z) z)) -> (= (+ z z) z)].",
            "}"
        ],
        "logprob": -3.5792785159946936,
        "actions": [
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z z) z) z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (s z))) -> ('a2 : (= z (s z))) -> (= (+ (+ z (+ z (s z))) (+ (s z) (+ z (s z)))) z)]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z (s z))) -> ('a2 : (= nat z (s z))) -> (= nat (+ (+ z (+ z (s z))) (+ (s z) (+ z (s z)))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> (= z (+ (+ (+ z (+ (+ z z) z)) (s z)) z))]",
        "problem_raw": "[('a0 : nat) -> (= nat z (+ (+ (+ z (+ (+ z z) z)) (s z)) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= z z)) -> ('a1 : nat) -> (= (+ 'a1 z) z)]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : nat) -> (= nat (+ 'a1 z) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= (+ z z) (+ (s z) (+ (s z) (+ (s z) z))))) -> (= z (+ (+ (s z) (s z)) (+ z (s z))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat (+ z z) (+ (s z) (+ (s z) (+ (s z) z))))) -> (= nat z (+ (+ (s z) (s z)) (+ z (s z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> ('a1 : (= (s 'a0) (+ (+ (+ z z) z) (s z)))) -> (= z (+ z 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (s 'a0) (+ (+ (+ z z) z) (s z)))) -> (= nat z (+ z 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= (+ z z) (s z))) -> (= z (s z))]",
        "problem_raw": "[('a0 : (= nat (+ z z) (s z))) -> (= nat z (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= z z)) -> (= (+ z (s z)) (+ z (+ (+ z z) (+ (+ z (+ z z)) z))))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> (= nat (+ z (s z)) (+ z (+ (+ z z) (+ (+ z (+ z z)) z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= (+ (+ z z) z) (+ z z))) -> (= (+ (+ z z) z) (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z z) z) (+ z z)) ) -> (= nat (+ (+ z z) z) (+ z (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z z) z) (+ z z)) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= z z)) -> (= (s (+ (s z) z)) (+ (s (+ (s z) z)) z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> (= nat (s (+ (s z) z)) (+ (s (+ (s z) z)) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> (= (+ (+ z z) z) (+ (+ z z) z))]",
        "problem_raw": "[('a0 : nat) -> (= nat (+ (+ z z) z) (+ (+ z z) z))]",
        "proof": [
            "theorem t : [('a0 : nat) -> (= (+ (+ z z) z) (+ (+ z z) z))] {",
            "intro x : nat.",
            "apply c0032.",
            "}"
        ],
        "logprob": -4.81765307741019,
        "actions": [
            "intro.",
            "a c0032",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= z (+ z z))) -> ('a1 : (= (+ z (+ z (+ z (+ z z)))) z)) -> ('a2 : (= (+ z (+ (+ z z) (+ (+ z z) z))) z)) -> (= z z)]",
        "problem_raw": "[ ('a0 :(= nat z (+ z z)) ) -> ('a1 : (= nat (+ z (+ z (+ z (+ z z)))) z)) -> ('a2 : (= nat (+ z (+ (+ z z) (+ (+ z z) z))) z)) -> (= nat z z)]",
        "proof": [
            "theorem t : [('a0 : (= z (+ z z))) -> ('a1 : (= (+ z (+ z (+ z (+ z z)))) z)) -> ('a2 : (= (+ z (+ (+ z z) (+ (+ z z) z))) z)) -> (= z z)] {",
            "show (= z z) by c0026.",
            "intro x : (= z (+ z z)).",
            "intro x0 : (= (+ z (+ z (+ z (+ z z)))) z).",
            "intro _ : [('a2 : (= (+ z (+ (+ z z) (+ (+ z z) z))) z)) -> (= z z)].",
            "}"
        ],
        "logprob": -6.5872146518110455,
        "actions": [
            "c c0026",
            "=> (= z z).",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z z)) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= (+ z (s z)) (+ (+ z z) (+ (s (+ (+ z z) (+ z z))) z)))) -> (= z (+ (s (+ (+ (+ z (+ z z)) z) (s z))) (+ (s (+ z z)) z)))]",
        "problem_raw": "[('a0 : (= nat (+ z (s z)) (+ (+ z z) (+ (s (+ (+ z z) (+ z z))) z)))) -> (= nat z (+ (s (+ (+ (+ z (+ z z)) z) (s z))) (+ (s (+ z z)) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : nat) -> (= 'a0 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : nat) -> (= nat 'a0 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : nat) -> (= 'a0 'a0)] {",
            "intro x : nat.",
            "intro x0 : (= z x).",
            "show (= x x) by rewrite.",
            "intro _ : [('a2 : nat) -> (= x x)].",
            "}"
        ],
        "logprob": -7.66399847845632,
        "actions": [
            "intro.",
            "intro.",
            "c rewrite",
            "=> (= x x).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (+ (s z) z) (+ (s z) z))) -> (= (+ (s z) (s z)) (+ (s z) (+ (+ (s z) z) z)))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (+ (s z) z) (+ (s z) z))) -> (= nat (+ (s z) (s z)) (+ (s z) (+ (+ (s z) z) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> ('a1 : (= (+ 'a0 (+ z z)) z)) -> (= (+ (+ z z) (+ z z)) (+ z (+ z z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (+ 'a0 (+ z z)) z)) -> (= nat (+ (+ z z) (+ z z)) (+ z (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= z (+ (+ z z) z))) -> ('a1 : (= (+ z (+ z z)) z)) -> (= z (+ (+ z (+ z z)) (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z (+ (+ z z) z)) ) -> ('a1 : (= nat (+ z (+ z z)) z)) -> (= nat z (+ (+ z (+ z z)) (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ (+ z z) z)) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> (= (+ (+ z z) z) z)]",
        "problem_raw": "[('a0 : nat) -> (= nat (+ (+ z z) z) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= (+ z (+ z (s z))) z)) -> ('a1 : nat) -> (= (+ 'a1 (+ z (s z))) 'a1)]",
        "problem_raw": "[('a0 : (= nat (+ z (+ z (s z))) z)) -> ('a1 : nat) -> (= nat (+ 'a1 (+ z (s z))) 'a1)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= (+ 'a0 'a0) z)) -> ('a3 : nat) -> ('a4 : (= (+ (+ 'a0 'a0) (s 'a0)) 'a0)) -> (= (s (+ 'a0 'a0)) (+ 'a0 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat (+ 'a0 'a0) z)) -> ('a3 : nat) -> ('a4 : (= nat (+ (+ 'a0 'a0) (s 'a0)) 'a0)) -> (= nat (s (+ 'a0 'a0)) (+ 'a0 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> (= 'a0 (+ 'a0 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> (= nat 'a0 (+ 'a0 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= z 'a0)) -> ('a3 : (= z 'a0)) -> ('a4 : (= z (+ 'a0 'a0))) -> (= (+ (s 'a0) 'a0) (s 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0))  -> ('a3 : (= nat z 'a0)) -> ('a4 : (= nat z (+ 'a0 'a0))) -> (= nat (+ (s 'a0) 'a0) (s 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= z (+ (s (+ (s z) (+ (+ z z) (+ (+ z z) (+ z (+ (+ z z) z)))))) z))) -> (= z (+ (s (+ z z)) (+ (+ z (+ z (+ (+ z (+ z z)) z))) z)))]",
        "problem_raw": "[('a0 : (= nat z (+ (s (+ (s z) (+ (+ z z) (+ (+ z z) (+ z (+ (+ z z) z)))))) z))) -> (= nat z (+ (s (+ z z)) (+ (+ z (+ z (+ (+ z (+ z z)) z))) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= (+ (+ z (+ z (+ z (+ z (+ z (+ z z)))))) z) (s z))) -> (= (s z) (s z))]",
        "problem_raw": "[('a0 : (= nat (+ (+ z (+ z (+ z (+ z (+ z (+ z z)))))) z) (s z))) -> (= nat (s z) (s z))]",
        "proof": [
            "theorem t : [('a0 : (= (+ (+ z (+ z (+ z (+ z (+ z (+ z z)))))) z) (s z))) -> (= (s z) (s z))] {",
            "show (= (s z) (s z)) by c0021.",
            "intro _ : [('a0 : (= (+ (+ z (+ z (+ z (+ z (+ z (+ z z)))))) z) (s z))) -> (= (s z) (s z))].",
            "}"
        ],
        "logprob": -3.210416274069985,
        "actions": [
            "c c0021",
            "=> (= (s z) (s z)).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= (+ (s z) z) z)) -> (= (+ (+ z z) z) z)]",
        "problem_raw": "[('a0 : (= nat (+ (s z) z) z)) -> (= nat (+ (+ z z) z) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= z z)) -> (= (+ (+ z (s (+ (+ z (+ (s z) z)) z))) z) (+ z (s (+ z (s z)))))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> (= nat (+ (+ z (s (+ (+ z (+ (s z) z)) z))) z) (+ z (s (+ z (s z)))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= (+ (+ (+ z z) z) z) (+ z z))) -> ('a1 : (= (+ (+ z z) z) z)) -> (= z (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ (+ z z) z) z) (+ z z)) ) -> ('a1 : (= nat (+ (+ z z) z) z)) -> (= nat z (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ (+ z z) z) z) (+ z z)) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= (+ z z) (+ (+ z z) z))) -> (= (+ z (s z)) (s (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) (+ (+ z z) z)) ) -> (= nat (+ z (s z)) (s (+ z z)))]",
        "proof": [
            "theorem t : [('a0 : (= (+ z z) (+ (+ z z) z))) -> (= (+ z (s z)) (s (+ z z)))] {",
            "intro x : (= (+ z z) (+ (+ z z) z)).",
            "show (= (+ z (s z)) (s (+ z z))) by +_s.",
            "}"
        ],
        "logprob": -4.827780181880586,
        "actions": [
            "intro.",
            "c +_s",
            "=> (= (+ z (s z)) (s (+ z z)))."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) (+ (+ z z) z)) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= (+ z z) z)) -> ('a1 : (= (+ z z) (+ z z))) -> (= (+ z z) (+ z (+ z z)))]",
        "problem_raw": "[('a0 : (= nat (+ z z) z)) -> ('a1 : (= nat (+ z z) (+ z z))) -> (= nat (+ z z) (+ z (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= (+ (+ z z) z) z)) -> (= (+ (+ z (+ z z)) z) (+ (+ z z) z))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z z) z) z) ) -> (= nat (+ (+ z (+ z z)) z) (+ (+ z z) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z z) z) z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= (+ z z) z)) -> (= (+ z (s z)) (s (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) z) ) -> (= nat (+ z (s z)) (s (+ z z)))]",
        "proof": [
            "theorem t : [('a0 : (= (+ z z) z)) -> (= (+ z (s z)) (s (+ z z)))] {",
            "intro x : (= (+ z z) z).",
            "show (= (+ z (s z)) (s (+ z z))) by +_s.",
            "}"
        ],
        "logprob": -4.912539195296154,
        "actions": [
            "intro.",
            "c +_s",
            "=> (= (+ z (s z)) (s (+ z z)))."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z z)) -> ('a2 : nat) -> (= z 'a2)]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z z)) -> ('a2 : nat) -> (= nat z 'a2)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= z 'a0)) -> (= 'a0 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat z 'a0)) -> (= nat 'a0 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= (+ (s (s z)) z) (s z))) -> ('a1 : (= (+ (+ z (+ z (+ (+ z z) z))) (+ z (+ z z))) (s z))) -> (= (+ (+ z (+ (+ (+ z z) (+ z z)) z)) z) z)]",
        "problem_raw": "[('a0 : (= nat (+ (s (s z)) z) (s z))) -> ('a1 : (= nat (+ (+ z (+ z (+ (+ z z) z))) (+ z (+ z z))) (s z))) -> (= nat (+ (+ z (+ (+ (+ z z) (+ z z)) z)) z) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= 'a0 (+ 'a0 'a0))) -> ('a3 : (= 'a0 (+ 'a0 'a0))) -> ('a4 : (= 'a0 (+ 'a0 (+ 'a0 'a0)))) -> (= (+ (+ z 'a0) 'a0) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat 'a0 (+ 'a0 'a0))) -> ('a3 : (= nat 'a0 (+ 'a0 'a0))) -> ('a4 : (= nat 'a0 (+ 'a0 (+ 'a0 'a0)))) -> (= nat (+ (+ z 'a0) 'a0) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> (= (+ 'a0 'a0) (s 'a0))]",
        "problem_raw": "[('a0 : nat) -> (= nat (+ 'a0 'a0) (s 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (+ z (+ (s z) z)) z)) -> (= z z)]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (+ z (+ (s z) z)) z)) -> (= nat z z)]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> ('a1 : (= (+ z (+ (s z) z)) z)) -> (= z z)] {",
            "intro x : (= z z).",
            "intro _ : [('a1 : (= (+ z (+ (s z) z)) z)) -> (= z z)].",
            "}"
        ],
        "logprob": -2.6700776271538205,
        "actions": [
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 (s 'a0))) -> ('a3 : (= 'a0 (+ z z))) -> ('a4 : (= 'a0 (s 'a0))) -> ('a5 : (= 'a0 (+ z 'a0))) -> ('a6 : (= (+ z (s 'a0)) z)) -> (= 'a0 (+ z (s 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0))  -> ('a2 : (= nat 'a0 (s 'a0))) -> ('a3 : (= nat 'a0 (+ z z))) -> ('a4 : (= nat 'a0 (s 'a0))) -> ('a5 : (= nat 'a0 (+ z 'a0))) -> ('a6 : (= nat (+ z (s 'a0)) z)) -> (= nat 'a0 (+ z (s 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= (+ z (+ z z)) z)) -> (= z z)]",
        "problem_raw": "[ ('a0 :(= nat (+ z (+ z z)) z) ) -> (= nat z z)]",
        "proof": [
            "theorem t : [('a0 : (= (+ z (+ z z)) z)) -> (= z z)] {",
            "show (= z z) by c0032.",
            "intro _ : [('a0 : (= (+ z (+ z z)) z)) -> (= z z)].",
            "}"
        ],
        "logprob": -2.559166327467356,
        "actions": [
            "c c0032",
            "=> (= z z).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (+ z z)) z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= (s (s (+ (s z) (s z)))) z)) -> ('a1 : (= (s (+ (s z) (+ z (+ (s z) z)))) z)) -> (= z (+ (+ (s z) (+ (+ (s z) z) (s z))) z))]",
        "problem_raw": "[('a0 : (= nat (s (s (+ (s z) (s z)))) z)) -> ('a1 : (= nat (s (+ (s z) (+ z (+ (s z) z)))) z)) -> (= nat z (+ (+ (s z) (+ (+ (s z) z) (s z))) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 z)) -> ('a4 : (= 'a0 (+ (+ 'a0 'a0) (+ 'a0 'a0)))) -> ('a5 : (= 'a0 (+ 'a0 'a0))) -> (= 'a0 (+ 'a0 (+ 'a0 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 z))  -> ('a4 : (= nat 'a0 (+ (+ 'a0 'a0) (+ 'a0 'a0)))) -> ('a5 : (= nat 'a0 (+ 'a0 'a0))) -> (= nat 'a0 (+ 'a0 (+ 'a0 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 z)) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= z z)) -> (= (s z) z)]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> (= nat (s z) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> (= 'a0 (s (+ (+ (+ z z) (s z)) (+ z (s z)))))]",
        "problem_raw": "[('a0 : nat) -> (= nat 'a0 (s (+ (+ (+ z z) (s z)) (+ z (s z)))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= (+ z z) z)) -> ('a1 : nat) -> ('a2 : (= z (+ z 'a1))) -> (= (+ (+ z z) z) (+ 'a1 'a1))]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) z) ) -> ('a1 : nat) -> ('a2 : (= nat z (+ z 'a1))) -> (= nat (+ (+ z z) z) (+ 'a1 'a1))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= z (+ (+ z (+ (s z) (s (+ (s z) z)))) z))) -> (= z z)]",
        "problem_raw": "[('a0 : (= nat z (+ (+ z (+ (s z) (s (+ (s z) z)))) z))) -> (= nat z z)]",
        "proof": [
            "theorem t : [('a0 : (= z (+ (+ z (+ (s z) (s (+ (s z) z)))) z))) -> (= z z)] {",
            "show (= z z) by c0026.",
            "intro _ : [('a0 : (= z (+ (+ z (+ (s z) (s (+ (s z) z)))) z))) -> (= z z)].",
            "}"
        ],
        "logprob": -2.549561137220194,
        "actions": [
            "c c0026",
            "=> (= z z).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= (+ z (s z)) z)) -> ('a1 : (= z (s (+ z (s (+ z (+ z z))))))) -> (= z z)]",
        "problem_raw": "[('a0 : (= nat (+ z (s z)) z)) -> ('a1 : (= nat z (s (+ z (s (+ z (+ z z))))))) -> (= nat z z)]",
        "proof": [
            "theorem t : [('a0 : (= (+ z (s z)) z)) -> ('a1 : (= z (s (+ z (s (+ z (+ z z))))))) -> (= z z)] {",
            "show (= z z) by c0026.",
            "intro x : (= (+ z (s z)) z).",
            "intro _ : [('a1 : (= z (s (+ z (s (+ z (+ z z))))))) -> (= z z)].",
            "}"
        ],
        "logprob": -4.2272022991282885,
        "actions": [
            "c c0026",
            "=> (= z z).",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 z)) -> ('a4 : (= 'a0 'a0)) -> (= 'a0 z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 z))  -> ('a4 : (= nat 'a0 'a0)) -> (= nat 'a0 z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 z)) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= (+ (s (s (+ (+ z (s (+ z (+ z z)))) z))) z) z)) -> (= z (+ (s (s z)) z))]",
        "problem_raw": "[('a0 : (= nat (+ (s (s (+ (+ z (s (+ z (+ z z)))) z))) z) z)) -> (= nat z (+ (s (s z)) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> (= z 'a0)]",
        "problem_raw": "[('a0 : nat) -> (= nat z 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> (= (+ (+ 'a0 z) (s z)) 'a0)]",
        "problem_raw": "[('a0 : nat) -> (= nat (+ (+ 'a0 z) (s z)) 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> (= (+ 'a0 (s (+ (+ (s (s z)) (+ z z)) z))) z)]",
        "problem_raw": "[('a0 : nat) -> (= nat (+ 'a0 (s (+ (+ (s (s z)) (+ z z)) z))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= z z)) -> (= (+ (+ (+ z (+ z z)) (+ z (s z))) z) (+ (+ z (s z)) z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> (= nat (+ (+ (+ z (+ z z)) (+ z (s z))) z) (+ (+ z (s z)) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= (+ (s z) z) z)) -> (= (+ (s z) z) (+ (s z) z))]",
        "problem_raw": "[('a0 : (= nat (+ (s z) z) z)) -> (= nat (+ (s z) z) (+ (s z) z))]",
        "proof": [
            "theorem t : [('a0 : (= (+ (s z) z) z)) -> (= (+ (s z) z) (+ (s z) z))] {",
            "intro x : (= (+ (s z) z) z).",
            "apply c0032.",
            "}"
        ],
        "logprob": -4.839576131874104,
        "actions": [
            "intro.",
            "a c0032",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> (= 'a0 (+ (+ 'a0 'a0) (+ 'a0 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0))  -> (= nat 'a0 (+ (+ 'a0 'a0) (+ 'a0 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> (= (s (+ (+ (+ z z) 'a0) z)) (s (+ z (+ z z))))]",
        "problem_raw": "[('a0 : nat) -> (= nat (s (+ (+ (+ z z) 'a0) z)) (s (+ z (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= (+ z z) z)) -> (= (+ z z) (+ (+ (+ z z) z) z))]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) z) ) -> (= nat (+ z z) (+ (+ (+ z z) z) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> ('a1 : (= (+ 'a0 (s 'a0)) (s 'a0))) -> ('a2 : (= z (+ 'a0 (+ (+ z z) (+ z z))))) -> (= z (+ 'a0 (+ z (+ z z))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (+ 'a0 (s 'a0)) (s 'a0))) -> ('a2 : (= nat z (+ 'a0 (+ (+ z z) (+ z z))))) -> (= nat z (+ 'a0 (+ z (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> ('a1 : (= (s 'a0) (s 'a0))) -> ('a2 : (= (+ 'a0 (+ 'a0 'a0)) (s (+ 'a0 (+ 'a0 'a0))))) -> (= (+ 'a0 (+ 'a0 (+ 'a0 (s 'a0)))) 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (s 'a0) (s 'a0)))  -> ('a2 : (= nat (+ 'a0 (+ 'a0 'a0)) (s (+ 'a0 (+ 'a0 'a0))))) -> (= nat (+ 'a0 (+ 'a0 (+ 'a0 (s 'a0)))) 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat (s 'a0) (s 'a0))) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= z (+ (+ z z) z))) -> (= z z)]",
        "problem_raw": "[ ('a0 :(= nat z (+ (+ z z) z)) ) -> (= nat z z)]",
        "proof": [
            "theorem t : [('a0 : (= z (+ (+ z z) z))) -> (= z z)] {",
            "show (= z z) by c0032.",
            "intro _ : [('a0 : (= z (+ (+ z z) z))) -> (= z z)].",
            "}"
        ],
        "logprob": -2.5617783186024474,
        "actions": [
            "c c0032",
            "=> (= z z).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ (+ z z) z)) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 z)) -> ('a4 : (= z (s 'a0))) -> ('a5 : (= (+ (+ (+ z 'a0) 'a0) 'a0) (+ 'a0 'a0))) -> (= z 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 z))  -> ('a4 : (= nat z (s 'a0))) -> ('a5 : (= nat (+ (+ (+ z 'a0) 'a0) 'a0) (+ 'a0 'a0))) -> (= nat z 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 z)) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> (= (+ z (+ (+ z z) z)) (+ (+ z z) (+ z z)))]",
        "problem_raw": "[('a0 : nat) -> (= nat (+ z (+ (+ z z) z)) (+ (+ z z) (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= z (+ (+ z z) z))) -> (= z (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z (+ (+ z z) z)) ) -> (= nat z (+ z (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ (+ z z) z)) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (+ z z) z)) -> (= (+ (+ z z) (+ z z)) (+ (+ z z) (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (+ z z) z)) -> (= nat (+ (+ z z) (+ z z)) (+ (+ z z) (+ z z)))]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> ('a1 : (= (+ z z) z)) -> (= (+ (+ z z) (+ z z)) (+ (+ z z) (+ z z)))] {",
            "intro x : (= z z).",
            "intro x0 : (= (+ z z) z).",
            "apply c0026.",
            "}"
        ],
        "logprob": -5.809537451785685,
        "actions": [
            "intro.",
            "intro.",
            "a c0026",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (+ z z) (s (+ (+ z (+ (+ z (s (s z))) (s z))) (+ z (s z)))))) -> (= (s z) (s z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (+ z z) (s (+ (+ z (+ (+ z (s (s z))) (s z))) (+ z (s z)))))) -> (= nat (s z) (s z))]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> ('a1 : (= (+ z z) (s (+ (+ z (+ (+ z (s (s z))) (s z))) (+ z (s z)))))) -> (= (s z) (s z))] {",
            "intro x : (= z z).",
            "show (= (s z) (s z)) by c0021.",
            "intro _ : [('a1 : (= (+ z z) (s (+ (+ z (+ (+ z (s (s z))) (s z))) (+ z (s z)))))) -> (= (s z) (s z))].",
            "}"
        ],
        "logprob": -3.503576655161859,
        "actions": [
            "intro.",
            "c c0021",
            "=> (= (s z) (s z)).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> (= (+ (+ z z) (s (+ z (s z)))) (s (s (+ (+ z (s (+ (+ z (+ z z)) (+ z (s z))))) z))))]",
        "problem_raw": "[('a0 : nat) -> (= nat (+ (+ z z) (s (+ z (s z)))) (s (s (+ (+ z (s (+ (+ z (+ z z)) (+ z (s z))))) z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= z z)) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= z 'a1)) -> (= 'a1 (+ 'a1 z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= nat z 'a1)) -> (= nat 'a1 (+ 'a1 z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= z z)) -> ('a1 : nat) -> (= z z)]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : nat) -> (= nat z z)]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> ('a1 : nat) -> (= z z)] {",
            "intro x : (= z z).",
            "intro _ : [('a1 : nat) -> (= z z)].",
            "}"
        ],
        "logprob": -2.7645790188665114,
        "actions": [
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> ('a1 : (= z (+ (s z) z))) -> ('a2 : nat) -> (= z 'a2)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z (+ (s z) z))) -> ('a2 : nat) -> (= nat z 'a2)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ z 'a0) 'a0))) -> ('a2 : (= 'a0 z)) -> (= (+ z z) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ z 'a0) 'a0))) -> ('a2 : (= nat 'a0 z)) -> (= nat (+ z z) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= (+ (+ z z) z) z)) -> ('a1 : (= (+ (+ z z) z) z)) -> ('a2 : (= z z)) -> (= (s z) (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z z) z) z) ) -> ('a1 : (= nat (+ (+ z z) z) z)) -> ('a2 : (= nat z z)) -> (= nat (s z) (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z z) z) z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> ('a1 : (= z (+ (+ (s z) (+ (+ (+ z z) z) z)) z))) -> (= (+ z z) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z (+ (+ (s z) (+ (+ (+ z z) z) z)) z))) -> (= nat (+ z z) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= (+ (s z) (s z)) (+ (+ (s z) z) (+ z (+ (s z) z))))) -> (= (+ (s z) (+ (+ (s z) z) z)) (+ (s z) (+ z z)))]",
        "problem_raw": "[('a0 : (= nat (+ (s z) (s z)) (+ (+ (s z) z) (+ z (+ (s z) z))))) -> (= nat (+ (s z) (+ (+ (s z) z) z)) (+ (s z) (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> ('a1 : (= (s 'a0) (s 'a0))) -> ('a2 : (= (s 'a0) (+ (+ (+ z z) z) (s 'a0)))) -> ('a3 : (= z (+ (+ z z) 'a0))) -> (= (+ z (+ z z)) (s (+ z 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (s 'a0) (s 'a0)))  -> ('a2 : (= nat (s 'a0) (+ (+ (+ z z) z) (s 'a0)))) -> ('a3 : (= nat z (+ (+ z z) 'a0))) -> (= nat (+ z (+ z z)) (s (+ z 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat (s 'a0) (s 'a0))) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (s (+ (+ z (+ (+ (+ (s z) z) z) (+ (s z) z))) z)) (+ (+ z (+ (+ (s z) z) z)) z))) -> (= z z)]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (s (+ (+ z (+ (+ (+ (s z) z) z) (+ (s z) z))) z)) (+ (+ z (+ (+ (s z) z) z)) z))) -> (= nat z z)]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> ('a1 : (= (s (+ (+ z (+ (+ (+ (s z) z) z) (+ (s z) z))) z)) (+ (+ z (+ (+ (s z) z) z)) z))) -> (= z z)] {",
            "intro x : (= z z).",
            "intro _ : [('a1 : (= (s (+ (+ z (+ (+ (+ (s z) z) z) (+ (s z) z))) z)) (+ (+ z (+ (+ (s z) z) z)) z))) -> (= z z)].",
            "}"
        ],
        "logprob": -2.5678870866371457,
        "actions": [
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= (+ (+ z z) z) z)) -> ('a1 : (= (s (+ z (+ z z))) (s (s (+ z z))))) -> ('a2 : nat) -> ('a3 : (= (+ z 'a2) 'a2)) -> (= (+ (+ (+ z z) z) (s z)) z)]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z z) z) z) ) -> ('a1 : (= nat (s (+ z (+ z z))) (s (s (+ z z))))) -> ('a2 : nat) -> ('a3 : (= nat (+ z 'a2) 'a2)) -> (= nat (+ (+ (+ z z) z) (s z)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z z) z) z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= (s (+ (s z) z)) z)) -> (= (+ (s (+ (s z) z)) z) (+ (s z) (+ (s z) z)))]",
        "problem_raw": "[('a0 : (= nat (s (+ (s z) z)) z)) -> (= nat (+ (s (+ (s z) z)) z) (+ (s z) (+ (s z) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> (= 'a0 (+ (+ 'a0 'a0) z))]",
        "problem_raw": "[('a0 : nat) -> (= nat 'a0 (+ (+ 'a0 'a0) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ z z) z))) -> (= z (s (+ z (+ (+ z z) z))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ z z) z))) -> (= nat z (s (+ z (+ (+ z z) z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (+ (s z) z) (+ (+ (+ z z) z) z))) -> (= (+ (+ (+ z z) z) z) (+ (+ (+ z z) z) z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (+ (s z) z) (+ (+ (+ z z) z) z))) -> (= nat (+ (+ (+ z z) z) z) (+ (+ (+ z z) z) z))]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> ('a1 : (= (+ (s z) z) (+ (+ (+ z z) z) z))) -> (= (+ (+ (+ z z) z) z) (+ (+ (+ z z) z) z))] {",
            "intro x : (= z z).",
            "intro x0 : (= (+ (s z) z) (+ (+ (+ z z) z) z)).",
            "show (= (+ (+ (+ z z) z) z) (+ (+ (+ z z) z) z)) by rewrite.",
            "}"
        ],
        "logprob": -5.568542140101626,
        "actions": [
            "intro.",
            "intro.",
            "c rewrite",
            "=> (= (+ (+ (+ z z) z) z) (+ (+ (+ z z) z) z))."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> (= z (+ (+ z 'a0) (s (+ (+ z z) z))))]",
        "problem_raw": "[('a0 : nat) -> (= nat z (+ (+ z 'a0) (s (+ (+ z z) z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= (+ z z) z)) -> (= (+ (+ z (+ z (+ z z))) z) z)]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) z) ) -> (= nat (+ (+ z (+ z (+ z z))) z) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= z (+ z z))) -> ('a1 : (= (s (+ (+ z z) z)) z)) -> (= z z)]",
        "problem_raw": "[ ('a0 :(= nat z (+ z z)) ) -> ('a1 : (= nat (s (+ (+ z z) z)) z)) -> (= nat z z)]",
        "proof": [
            "theorem t : [('a0 : (= z (+ z z))) -> ('a1 : (= (s (+ (+ z z) z)) z)) -> (= z z)] {",
            "show (= z z) by c0026.",
            "intro x : (= z (+ z z)).",
            "intro _ : [('a1 : (= (s (+ (+ z z) z)) z)) -> (= z z)].",
            "}"
        ],
        "logprob": -4.275201022015818,
        "actions": [
            "c c0026",
            "=> (= z z).",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z z)) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= (s (+ z z)) (s z))) -> (= (+ z (s z)) (+ z (s z)))]",
        "problem_raw": "[ ('a0 :(= nat (s (+ z z)) (s z)) ) -> (= nat (+ z (s z)) (+ z (s z)))]",
        "proof": [
            "theorem t : [('a0 : (= (s (+ z z)) (s z))) -> (= (+ z (s z)) (+ z (s z)))] {",
            "intro x : (= (s (+ z z)) (s z)).",
            "apply c0026.",
            "}"
        ],
        "logprob": -5.184971252988742,
        "actions": [
            "intro.",
            "a c0026",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (s (+ z z)) (s z)) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> (= (+ (+ 'a0 z) z) (s (+ z (+ (+ z z) (+ (s z) z)))))]",
        "problem_raw": "[('a0 : nat) -> (= nat (+ (+ 'a0 z) z) (s (+ z (+ (+ z z) (+ (s z) z)))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= z (+ (s (+ (+ z z) (+ z z))) z))) -> (= (+ (+ z (+ z (+ z z))) z) z)]",
        "problem_raw": "[('a0 : (= nat z (+ (s (+ (+ z z) (+ z z))) z))) -> (= nat (+ (+ z (+ z (+ z z))) z) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> (= (+ (+ z (s z)) (s (+ z (s z)))) z)]",
        "problem_raw": "[('a0 : nat) -> (= nat (+ (+ z (s z)) (s (+ z (s z)))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= (+ z (+ z z)) z)) -> ('a1 : (= (+ z (+ z (+ z z))) (+ z z))) -> (= (+ z (+ z (+ z (+ z z)))) z)]",
        "problem_raw": "[ ('a0 :(= nat (+ z (+ z z)) z) ) -> ('a1 : (= nat (+ z (+ z (+ z z))) (+ z z))) -> (= nat (+ z (+ z (+ z (+ z z)))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (+ z z)) z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= z z)) -> (= (+ z (s z)) (+ (+ z z) (s z)))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> (= nat (+ z (s z)) (+ (+ z z) (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= z z)) -> (= (s (+ z (+ (s z) z))) (+ z (+ (+ z (s z)) z)))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> (= nat (s (+ z (+ (s z) z))) (+ z (+ (+ z (s z)) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= (+ z z) (+ z z))) -> (= (+ z z) z)]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) (+ z z)) ) -> (= nat (+ z z) z)]",
        "proof": [
            "theorem t : [('a0 : (= (+ z z) (+ z z))) -> (= (+ z z) z)] {",
            "intro x : (= (+ z z) (+ z z)).",
            "show (= (+ z z) z) by +_z.",
            "}"
        ],
        "logprob": -4.538732567602516,
        "actions": [
            "intro.",
            "c +_z",
            "=> (= (+ z z) z)."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) (+ z z)) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= z 'a0)) -> (= 'a0 (s (+ 'a0 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0))  -> (= nat 'a0 (s (+ 'a0 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> ('a1 : (= (+ 'a0 'a0) (s 'a0))) -> (= (+ (+ (+ z z) 'a0) (+ 'a0 'a0)) (+ (+ z 'a0) (+ 'a0 (s z))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (+ 'a0 'a0) (s 'a0))) -> (= nat (+ (+ (+ z z) 'a0) (+ 'a0 'a0)) (+ (+ z 'a0) (+ 'a0 (s z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> (= 'a1 z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> (= nat 'a1 z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> ('a1 : (= (+ z (s (+ z 'a0))) z)) -> (= (+ z z) (+ z z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (+ z (s (+ z 'a0))) z)) -> (= nat (+ z z) (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= z z)) -> (= (+ (+ z z) (+ z z)) (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> (= nat (+ (+ z z) (+ z z)) (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= (+ (+ (+ (+ z z) (+ (+ (+ z z) z) (+ z z))) z) z) z)) -> (= (+ (+ (+ z z) (+ (+ z z) z)) z) z)]",
        "problem_raw": "[('a0 : (= nat (+ (+ (+ (+ z z) (+ (+ (+ z z) z) (+ z z))) z) z) z)) -> (= nat (+ (+ (+ z z) (+ (+ z z) z)) z) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= (+ z z) (+ z z))) -> ('a1 : (= z (+ z (+ z z)))) -> (= z (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) (+ z z)) ) -> ('a1 : (= nat z (+ z (+ z z)))) -> (= nat z (+ z (+ z z)))]",
        "proof": [
            "theorem t : [('a0 : (= (+ z z) (+ z z))) -> ('a1 : (= z (+ z (+ z z)))) -> (= z (+ z (+ z z)))] {",
            "intro x : (= (+ z z) (+ z z)).",
            "intro _ : [('a1 : (= z (+ z (+ z z)))) -> (= z (+ z (+ z z)))].",
            "}"
        ],
        "logprob": -3.5695840987923377,
        "actions": [
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) (+ z z)) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= (+ (+ (+ z z) z) z) (+ z z))) -> ('a1 : (= z (+ (+ (+ z z) z) (+ z z)))) -> (= z (+ (+ (+ z z) z) z))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ (+ z z) z) z) (+ z z)) ) -> ('a1 : (= nat z (+ (+ (+ z z) z) (+ z z)))) -> (= nat z (+ (+ (+ z z) z) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ (+ z z) z) z) (+ z z)) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z z)) -> (= (+ (+ z z) (+ z z)) z)]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z z)) -> (= nat (+ (+ z z) (+ z z)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> (= (s (+ z (+ z z))) z)]",
        "problem_raw": "[('a0 : nat) -> (= nat (s (+ z (+ z z))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> (= (+ z z) z)]",
        "problem_raw": "[('a0 : nat) -> (= nat (+ z z) z)]",
        "proof": [
            "theorem t : [('a0 : nat) -> (= (+ z z) z)] {",
            "intro x : nat.",
            "show (= (+ z z) z) by +_z.",
            "}"
        ],
        "logprob": -4.613714390224694,
        "actions": [
            "intro.",
            "c +_z",
            "=> (= (+ z z) z)."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= z z)) -> (= (+ z (+ z (+ z (+ z z)))) (s z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> (= nat (+ z (+ z (+ z (+ z z)))) (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> ('a1 : (= (+ 'a0 (+ (+ (+ z z) z) z)) 'a0)) -> (= (+ 'a0 (+ (+ (+ z z) (+ z z)) z)) (+ 'a0 (+ (+ z z) z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (+ 'a0 (+ (+ (+ z z) z) z)) 'a0)) -> (= nat (+ 'a0 (+ (+ (+ z z) (+ z z)) z)) (+ 'a0 (+ (+ z z) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= (+ z z) z)) -> ('a1 : (= z (+ (+ z z) (+ z z)))) -> ('a2 : nat) -> (= z z)]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) z) ) -> ('a1 : (= nat z (+ (+ z z) (+ z z)))) -> ('a2 : nat) -> (= nat z z)]",
        "proof": [
            "theorem t : [('a0 : (= (+ z z) z)) -> ('a1 : (= z (+ (+ z z) (+ z z)))) -> ('a2 : nat) -> (= z z)] {",
            "show (= z z) by c0026.",
            "intro x : (= (+ z z) z).",
            "intro x0 : (= z (+ (+ z z) (+ z z))).",
            "intro _ : [('a2 : nat) -> (= z z)].",
            "}"
        ],
        "logprob": -6.339776323414853,
        "actions": [
            "c c0026",
            "=> (= z z).",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> (= (+ z (+ 'a0 z)) (+ z (s z)))]",
        "problem_raw": "[('a0 : nat) -> (= nat (+ z (+ 'a0 z)) (+ z (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= z (+ (+ (+ (+ z (+ z z)) z) (s z)) z))) -> (= (+ (+ z (+ (+ z z) (s z))) (+ (+ z z) z)) (s z))]",
        "problem_raw": "[('a0 : (= nat z (+ (+ (+ (+ z (+ z z)) z) (s z)) z))) -> (= nat (+ (+ z (+ (+ z z) (s z))) (+ (+ z z) z)) (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= z z)) -> ('a1 : nat) -> (= z (+ (+ z 'a1) z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : nat) -> (= nat z (+ (+ z 'a1) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z z)) -> (= (+ z z) (+ (+ z z) z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z z)) -> (= nat (+ z z) (+ (+ z z) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> (= 'a0 (s z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> (= nat 'a0 (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= z z)) -> (= (+ (+ (+ z z) z) (+ z z)) (+ z z))]",
        "problem_raw": "[('a0 : (= nat z z)) -> (= nat (+ (+ (+ z z) z) (+ z z)) (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= 'a0 'a0)) -> ('a3 : nat) -> (= 'a0 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : nat) -> (= nat 'a0 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : nat) -> ('a2 : (= 'a0 'a0)) -> ('a3 : nat) -> (= 'a0 'a0)] {",
            "intro x : nat.",
            "intro x0 : nat.",
            "intro x1 : (= x x).",
            "intro _ : [('a3 : nat) -> (= x x)].",
            "}"
        ],
        "logprob": -7.502081879233728,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> ('a1 : (= (+ (+ z 'a0) z) z)) -> (= (+ 'a0 z) 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (+ (+ z 'a0) z) z)) -> (= nat (+ 'a0 z) 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= z z)) -> (= z (+ (+ z z) z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> (= nat z (+ (+ z z) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (s z) (s (+ (s z) z)))) -> ('a2 : (= z (+ (s z) (+ (s z) (+ (s z) z))))) -> (= (+ z (s (+ z (s z)))) (s (s (+ z (+ (s z) z)))))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (s z) (s (+ (s z) z)))) -> ('a2 : (= nat z (+ (s z) (+ (s z) (+ (s z) z))))) -> (= nat (+ z (s (+ z (s z)))) (s (s (+ z (+ (s z) z)))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> (= (+ (+ (+ (+ z z) z) z) z) (+ (+ (+ z z) z) z))]",
        "problem_raw": "[('a0 : nat) -> (= nat (+ (+ (+ (+ z z) z) z) z) (+ (+ (+ z z) z) z))]",
        "proof": [
            "theorem t : [('a0 : nat) -> (= (+ (+ (+ (+ z z) z) z) z) (+ (+ (+ z z) z) z))] {",
            "apply nat_ind.",
            [
                "goal (= (+ (+ (+ (+ z z) z) z) z) (+ (+ (+ z z) z) z)) {",
                "show (= (+ (+ (+ (+ z z) z) z) z) (+ (+ (+ z z) z) z)) by +_z.",
                "}"
            ],
            [
                "goal [('n : nat) -> (= (+ (+ (+ (+ z z) z) z) z) (+ (+ (+ z z) z) z)) -> (= (+ (+ (+ (+ z z) z) z) z) (+ (+ (+ z z) z) z))] {",
                "intro x : nat.",
                "intro _ : [(= (+ (+ (+ (+ z z) z) z) z) (+ (+ (+ z z) z) z)) -> (= (+ (+ (+ (+ z z) z) z) z) (+ (+ (+ z z) z) z))].",
                "}"
            ],
            "}"
        ],
        "logprob": -8.087679445630341,
        "actions": [
            "a nat_ind",
            "=> (= (+ (+ (+ (+ z z) z) z) z) (+ (+ (+ z z) z) z)); [('n : nat) -> (= (+ (+ (+ (+ z z) z) z) z) (+ (+ (+ z z) z) z)) -> (= (+ (+ (+ (+ z z) z) z) z) (+ (+ (+ z z) z) z))].",
            "[c +_z, => (= (+ (+ (+ (+ z z) z) z) z) (+ (+ (+ z z) z) z)).]",
            "[intro., intro.]"
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= z (+ z z))) -> (= (+ z z) z)]",
        "problem_raw": "[ ('a0 :(= nat z (+ z z)) ) -> (= nat (+ z z) z)]",
        "proof": [
            "theorem t : [('a0 : (= z (+ z z))) -> (= (+ z z) z)] {",
            "intro x : (= z (+ z z)).",
            "show (= (+ z z) z) by eq_symm.",
            "}"
        ],
        "logprob": -4.745367743871974,
        "actions": [
            "intro.",
            "c eq_symm",
            "=> (= (+ z z) z)."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z z)) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= z z)) -> (= (+ z (s z)) (s (+ z (+ z z))))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> (= nat (+ z (s z)) (s (+ z (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= z 'a0)) -> (= (+ z 'a0) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat z 'a0)) -> (= nat (+ z 'a0) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : nat) -> ('a4 : (= z (+ 'a0 'a0))) -> ('a5 : nat) -> ('a6 : nat) -> ('a7 : (= (+ z (+ z z)) (s z))) -> ('a8 : nat) -> (= (+ z (+ z (+ z z))) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : nat) -> ('a4 : (= nat z (+ 'a0 'a0))) -> ('a5 : nat) -> ('a6 : nat) -> ('a7 : (= nat (+ z (+ z z)) (s z))) -> ('a8 : nat) -> (= nat (+ z (+ z (+ z z))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= (+ (+ z z) z) z)) -> (= z z)]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z z) z) z) ) -> (= nat z z)]",
        "proof": [
            "theorem t : [('a0 : (= (+ (+ z z) z) z)) -> (= z z)] {",
            "show (= z z) by c0032.",
            "intro _ : [('a0 : (= (+ (+ z z) z) z)) -> (= z z)].",
            "}"
        ],
        "logprob": -2.5608258494856644,
        "actions": [
            "c c0032",
            "=> (= z z).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z z) z) z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z z)) -> (= (+ z z) z)]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z z)) -> (= nat (+ z z) z)]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> ('a1 : (= z z)) -> (= (+ z z) z)] {",
            "intro x : (= z z).",
            "intro x0 : (= z z).",
            "show (= (+ z z) z) by +_z.",
            "}"
        ],
        "logprob": -5.2725641390534115,
        "actions": [
            "intro.",
            "intro.",
            "c +_z",
            "=> (= (+ z z) z)."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= z z)) -> ('a1 : nat) -> (= 'a1 'a1)]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : nat) -> (= nat 'a1 'a1)]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> ('a1 : nat) -> (= 'a1 'a1)] {",
            "intro x : (= z z).",
            "intro x0 : nat.",
            "apply c0032.",
            "}"
        ],
        "logprob": -5.792776103453713,
        "actions": [
            "intro.",
            "intro.",
            "a c0032",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (+ z (s z)) z)) -> (= (+ z (s (+ z (s z)))) (s z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (+ z (s z)) z)) -> (= nat (+ z (s (+ z (s z)))) (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> (= (+ 'a0 (s 'a0)) 'a0)]",
        "problem_raw": "[('a0 : nat) -> (= nat (+ 'a0 (s 'a0)) 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> (= (+ (+ z z) (+ z (+ z (+ z z)))) (+ z z))]",
        "problem_raw": "[('a0 : nat) -> (= nat (+ (+ z z) (+ z (+ z (+ z z)))) (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (+ (+ z (+ z (+ z z))) (s z)) (s z))) -> (= z z)]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (+ (+ z (+ z (+ z z))) (s z)) (s z))) -> (= nat z z)]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> ('a1 : (= (+ (+ z (+ z (+ z z))) (s z)) (s z))) -> (= z z)] {",
            "intro x : (= z z).",
            "intro _ : [('a1 : (= (+ (+ z (+ z (+ z z))) (s z)) (s z))) -> (= z z)].",
            "}"
        ],
        "logprob": -2.4928862347628984,
        "actions": [
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= z 'a0)) -> ('a3 : (= z z)) -> (= 'a0 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0))  -> ('a3 : (= nat z z)) -> (= nat 'a0 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= (+ z z) z)) -> (= (s z) (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) z) ) -> (= nat (s z) (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= (+ z z) z)) -> (= z (+ (+ z z) z))]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) z) ) -> (= nat z (+ (+ z z) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= (+ z (+ (s z) z)) z)) -> (= (+ (+ z (s (+ (+ z (+ z (+ z z))) z))) (s z)) z)]",
        "problem_raw": "[('a0 : (= nat (+ z (+ (s z) z)) z)) -> (= nat (+ (+ z (s (+ (+ z (+ z (+ z z))) z))) (s z)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (+ (+ (+ z (+ z z)) z) (s z)) (+ z (s z)))) -> (= (+ (+ (+ (+ z z) (+ z z)) z) (+ z (+ z z))) (+ (s z) z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (+ (+ (+ z (+ z z)) z) (s z)) (+ z (s z)))) -> (= nat (+ (+ (+ (+ z z) (+ z z)) z) (+ z (+ z z))) (+ (s z) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= z z)) -> (= (s z) (+ (+ z (+ z (+ z z))) z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> (= nat (s z) (+ (+ z (+ z (+ z z))) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> (= (+ z (s z)) (+ (+ z (+ z z)) z))]",
        "problem_raw": "[('a0 : nat) -> (= nat (+ z (s z)) (+ (+ z (+ z z)) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= z 'a0)) -> ('a3 : (= 'a0 'a0)) -> (= 'a0 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0))  -> ('a3 : (= nat 'a0 'a0)) -> (= nat 'a0 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= z 'a0)) -> ('a3 : (= 'a0 'a0)) -> (= 'a0 'a0)] {",
            "intro x : nat.",
            "intro x0 : (= x z).",
            "intro x1 : (= z x).",
            "intro _ : [('a3 : (= x x)) -> (= x x)].",
            "}"
        ],
        "logprob": -7.63429132996488,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= (+ z (+ (s (+ z z)) z)) (+ (+ (s (+ z (+ z z))) z) (+ z z)))) -> (= z (+ (s z) z))]",
        "problem_raw": "[('a0 : (= nat (+ z (+ (s (+ z z)) z)) (+ (+ (s (+ z (+ z z))) z) (+ z z)))) -> (= nat z (+ (s z) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> ('a1 : (= (s (+ z z)) z)) -> ('a2 : (= (s (+ z z)) z)) -> (= (+ z (s z)) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (s (+ z z)) z)) -> ('a2 : (= nat (s (+ z z)) z)) -> (= nat (+ z (s z)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= (+ z (+ (+ z z) (+ z (+ z z)))) z)) -> (= z (+ z (+ z z)))]",
        "problem_raw": "[('a0 : (= nat (+ z (+ (+ z z) (+ z (+ z z)))) z)) -> (= nat z (+ z (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> (= (+ (s z) (s z)) 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0))  -> (= nat (+ (s z) (s z)) 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= (s (+ z z)) (s z))) -> (= z (+ (s (+ (+ z z) z)) (+ (s z) (+ z z))))]",
        "problem_raw": "[ ('a0 :(= nat (s (+ z z)) (s z)) ) -> (= nat z (+ (s (+ (+ z z) z)) (+ (s z) (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (s (+ z z)) (s z)) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= z 'a0)) -> (= z 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0))  -> (= nat z 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= z 'a0)) -> (= z 'a0)] {",
            "intro x : nat.",
            "intro x0 : (= x z).",
            "intro _ : [('a2 : (= z x)) -> (= z x)].",
            "}"
        ],
        "logprob": -5.438072059648423,
        "actions": [
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= (+ z z) z)) -> (= z (s z))]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) z) ) -> (= nat z (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= (+ (+ (+ z z) z) z) (+ z z))) -> ('a1 : (= z (+ (+ z (+ (+ z (+ (+ z (+ z z)) z)) z)) z))) -> (= z (+ (+ z (+ z (+ z z))) z))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ (+ z z) z) z) (+ z z)) ) -> ('a1 : (= nat z (+ (+ z (+ (+ z (+ (+ z (+ z z)) z)) z)) z))) -> (= nat z (+ (+ z (+ z (+ z z))) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ (+ z z) z) z) (+ z z)) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= (s z) z)) -> (= z (s z))]",
        "problem_raw": "[('a0 : (= nat (s z) z)) -> (= nat z (s z))]",
        "proof": [
            "theorem t : [('a0 : (= (s z) z)) -> (= z (s z))] {",
            "intro x : (= (s z) z).",
            "show (= z (s z)) by eq_symm.",
            "}"
        ],
        "logprob": -4.572371594519973,
        "actions": [
            "intro.",
            "c eq_symm",
            "=> (= z (s z))."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (+ (+ z (+ z z)) z) z)) -> ('a2 : (= z (+ (+ z (+ z z)) (+ z z)))) -> ('a3 : nat) -> (= (+ z (+ z (+ z z))) z)]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (+ (+ z (+ z z)) z) z)) -> ('a2 : (= nat z (+ (+ z (+ z z)) (+ z z)))) -> ('a3 : nat) -> (= nat (+ z (+ z (+ z z))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= z z)) -> ('a3 : nat) -> (= z 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0))  -> ('a2 : (= nat z z)) -> ('a3 : nat) -> (= nat z 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= (+ z (+ z z)) z)) -> (= z (+ (+ (+ z z) z) z))]",
        "problem_raw": "[('a0 : (= nat (+ z (+ z z)) z)) -> (= nat z (+ (+ (+ z z) z) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z z)) -> ('a2 : (= z z)) -> ('a3 : (= (+ z z) (+ z (+ (+ (+ z z) z) z)))) -> (= (+ z (+ (+ z z) (+ z (+ z z)))) z)]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z z)) -> ('a2 : (= nat z z)) -> ('a3 : (= nat (+ z z) (+ z (+ (+ (+ z z) z) z)))) -> (= nat (+ z (+ (+ z z) (+ z (+ z z)))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> (= (s z) z)]",
        "problem_raw": "[('a0 : nat) -> (= nat (s z) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : nat) -> (= z 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0))  -> ('a2 : nat) -> (= nat z 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= z z)) -> (= (s (+ (+ (+ z z) z) z)) (+ (s z) z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> (= nat (s (+ (+ (+ z z) z) z)) (+ (s z) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= (+ z z) (+ z z))) -> (= (+ z (+ z z)) (+ (+ z z) z))]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) (+ z z)) ) -> (= nat (+ z (+ z z)) (+ (+ z z) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) (+ z z)) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= (+ z z) (+ (+ z z) z))) -> (= z z)]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) (+ (+ z z) z)) ) -> (= nat z z)]",
        "proof": [
            "theorem t : [('a0 : (= (+ z z) (+ (+ z z) z))) -> (= z z)] {",
            "show (= z z) by c0026.",
            "intro _ : [('a0 : (= (+ z z) (+ (+ z z) z))) -> (= z z)].",
            "}"
        ],
        "logprob": -2.574985466891115,
        "actions": [
            "c c0026",
            "=> (= z z).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) (+ (+ z z) z)) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> ('a1 : (= (+ 'a0 z) z)) -> (= z (+ (s (+ z z)) (s z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (+ 'a0 z) z)) -> (= nat z (+ (s (+ z z)) (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 z)) -> (= z (+ (+ (+ (+ z (+ z z)) z) z) z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 z))  -> (= nat z (+ (+ (+ (+ z (+ z z)) z) z) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 z)) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= z z)) -> ('a1 : nat) -> ('a2 : (= z (+ (+ z (+ z z)) (+ (+ z z) (+ (s z) z))))) -> ('a3 : (= z (+ (+ (+ z z) z) (+ z z)))) -> (= (+ (+ z (+ z z)) z) (s z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : nat) -> ('a2 : (= nat z (+ (+ z (+ z z)) (+ (+ z z) (+ (s z) z))))) -> ('a3 : (= nat z (+ (+ (+ z z) z) (+ z z)))) -> (= nat (+ (+ z (+ z z)) z) (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 z) 'a0))) -> (= z 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 z) 'a0))) -> (= nat z 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= z z)) -> (= (s z) (+ (+ (+ z z) (+ (+ z z) z)) z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> (= nat (s z) (+ (+ (+ z z) (+ (+ z z) z)) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= (+ z (s (+ (+ (s z) z) z))) z)) -> (= z z)]",
        "problem_raw": "[('a0 : (= nat (+ z (s (+ (+ (s z) z) z))) z)) -> (= nat z z)]",
        "proof": [
            "theorem t : [('a0 : (= (+ z (s (+ (+ (s z) z) z))) z)) -> (= z z)] {",
            "show (= z z) by c0032.",
            "intro _ : [('a0 : (= (+ z (s (+ (+ (s z) z) z))) z)) -> (= z z)].",
            "}"
        ],
        "logprob": -2.562226873362058,
        "actions": [
            "c c0032",
            "=> (= z z).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= z z)) -> (= (+ z (+ (+ (+ z (+ (+ z (s (+ z (+ (s z) z)))) z)) z) z)) (+ z (+ (+ z (s z)) z)))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> (= nat (+ z (+ (+ (+ z (+ (+ z (s (+ z (+ (s z) z)))) z)) z) z)) (+ z (+ (+ z (s z)) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= z z)) -> (= (+ z z) (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> (= nat (+ z z) (+ z z))]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> (= (+ z z) (+ z z))] {",
            "intro x : (= z z).",
            "apply c0032.",
            "}"
        ],
        "logprob": -4.52397658122694,
        "actions": [
            "intro.",
            "a c0032",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (s (+ (+ z z) z)) z)) -> ('a2 : nat) -> (= (+ (+ z z) 'a2) z)]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (s (+ (+ z z) z)) z)) -> ('a2 : nat) -> (= nat (+ (+ z z) 'a2) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= z z)) -> (= (+ (s z) (+ (+ z z) z)) z)]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> (= nat (+ (s z) (+ (+ z z) z)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= (+ z z) z)) -> (= (+ (+ z z) (+ z z)) z)]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) z) ) -> (= nat (+ (+ z z) (+ z z)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ (s (+ (s (+ (s z) (+ z z))) z)) z))) -> ('a2 : nat) -> ('a3 : (= z (s 'a2))) -> (= z (+ (s (+ (s z) (+ z z))) z))]",
        "problem_raw": "[('a0 : (= nat z z)) -> ('a1 : (= nat z (+ (s (+ (s (+ (s z) (+ z z))) z)) z))) -> ('a2 : nat) -> ('a3 : (= nat z (s 'a2))) -> (= nat z (+ (s (+ (s z) (+ z z))) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= z z)) -> (= (+ (+ z z) z) (+ (+ z z) z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> (= nat (+ (+ z z) z) (+ (+ z z) z))]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> (= (+ (+ z z) z) (+ (+ z z) z))] {",
            "intro x : (= z z).",
            "apply c0032.",
            "}"
        ],
        "logprob": -4.577089684493872,
        "actions": [
            "intro.",
            "a c0032",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> (= z 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0))  -> (= nat z 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= (+ (+ z 'a0) 'a0) 'a0)) -> (= 'a0 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0))  -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> (= nat 'a0 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= (+ (+ z 'a0) 'a0) 'a0)) -> (= 'a0 'a0)] {",
            "intro x : nat.",
            "intro x0 : (= x x).",
            "intro x1 : (= x x).",
            "intro _ : [('a3 : (= (+ (+ z x) x) x)) -> (= x x)].",
            "}"
        ],
        "logprob": -7.369260244077828,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= (+ z z) z)) -> (= (+ z (s (s (+ z (+ (s z) (+ z z)))))) (+ z z))]",
        "problem_raw": "[('a0 : (= nat (+ z z) z)) -> (= nat (+ z (s (s (+ z (+ (s z) (+ z z)))))) (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (+ (s z) z) (+ (+ z (+ z (+ z (+ z z)))) z))) -> (= (s z) z)]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (+ (s z) z) (+ (+ z (+ z (+ z (+ z z)))) z))) -> (= nat (s z) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= (+ (s (+ z (+ (s (+ z (s z))) z))) z) z)) -> (= (+ (s z) z) (+ z (+ (s (s (+ (+ z (s z)) (s z)))) z)))]",
        "problem_raw": "[('a0 : (= nat (+ (s (+ z (+ (s (+ z (s z))) z))) z) z)) -> (= nat (+ (s z) z) (+ z (+ (s (s (+ (+ z (s z)) (s z)))) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= (+ z (+ z (+ z z))) z)) -> ('a1 : nat) -> (= 'a1 (+ z (+ 'a1 (s z))))]",
        "problem_raw": "[('a0 : (= nat (+ z (+ z (+ z z))) z)) -> ('a1 : nat) -> (= nat 'a1 (+ z (+ 'a1 (s z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> (= (+ (+ z (s z)) (s 'a0)) (+ (+ z (s z)) (+ z (+ z (s z)))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0))  -> (= nat (+ (+ z (s z)) (s 'a0)) (+ (+ z (s z)) (+ z (+ z (s z)))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= 'a0 'a0)) -> (= 'a0 z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= nat 'a0 'a0)) -> (= nat 'a0 z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> (= 'a1 (s (+ 'a0 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> (= nat 'a1 (s (+ 'a0 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= z z)) -> (= (+ z z) (+ (+ z (s (+ (+ (s (+ (s z) z)) (+ (s (+ z z)) (+ z (s z)))) (s (s z))))) (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> (= nat (+ z z) (+ (+ z (s (+ (+ (s (+ (s z) z)) (+ (s (+ z z)) (+ z (s z)))) (s (s z))))) (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> ('a1 : (= (+ z (+ z z)) (s 'a0))) -> ('a2 : (= (+ 'a0 (+ z z)) z)) -> (= z (+ (+ z (+ z z)) z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (+ z (+ z z)) (s 'a0))) -> ('a2 : (= nat (+ 'a0 (+ z z)) z)) -> (= nat z (+ (+ z (+ z z)) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= (+ z z) (+ z z))) -> ('a1 : (= (+ (+ z (+ z (s (s (+ z (s (s z))))))) z) (+ z (+ z (s (+ (s z) z)))))) -> (= z z)]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) (+ z z)) ) -> ('a1 : (= nat (+ (+ z (+ z (s (s (+ z (s (s z))))))) z) (+ z (+ z (s (+ (s z) z)))))) -> (= nat z z)]",
        "proof": [
            "theorem t : [('a0 : (= (+ z z) (+ z z))) -> ('a1 : (= (+ (+ z (+ z (s (s (+ z (s (s z))))))) z) (+ z (+ z (s (+ (s z) z)))))) -> (= z z)] {",
            "show (= z z) by c0008.",
            "intro x : (= (+ z z) (+ z z)).",
            "intro _ : [('a1 : (= (+ (+ z (+ z (s (s (+ z (s (s z))))))) z) (+ z (+ z (s (+ (s z) z)))))) -> (= z z)].",
            "}"
        ],
        "logprob": -3.784686536489427,
        "actions": [
            "c c0008",
            "=> (= z z).",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) (+ z z)) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= z 'a0)) -> (= (+ 'a0 'a0) (s z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0))  -> (= nat (+ 'a0 'a0) (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= (+ (+ z z) z) z)) -> ('a1 : (= (+ (+ z z) (+ z z)) z)) -> (= z (+ (+ z z) z))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z z) z) z) ) -> ('a1 : (= nat (+ (+ z z) (+ z z)) z)) -> (= nat z (+ (+ z z) z))]",
        "proof": [
            "theorem t : [('a0 : (= (+ (+ z z) z) z)) -> ('a1 : (= (+ (+ z z) (+ z z)) z)) -> (= z (+ (+ z z) z))] {",
            "intro x : (= (+ (+ z z) z) z).",
            "show (= z (+ (+ z z) z)) by eq_symm.",
            "intro _ : [('a1 : (= (+ (+ z z) (+ z z)) z)) -> (= z (+ (+ z z) z))].",
            "}"
        ],
        "logprob": -5.632349806133693,
        "actions": [
            "intro.",
            "c eq_symm",
            "=> (= z (+ (+ z z) z)).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z z) z) z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= (+ 'a0 (s z)) (+ z (+ (s z) 'a0)))) -> ('a3 : nat) -> (= z (+ (s z) (+ z z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat (+ 'a0 (s z)) (+ z (+ (s z) 'a0)))) -> ('a3 : nat) -> (= nat z (+ (s z) (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (+ z z) (+ (+ z (+ (+ (+ z z) (+ z z)) z)) z))) -> (= z (+ (+ (+ (+ z z) z) (+ z (+ z z))) z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (+ z z) (+ (+ z (+ (+ (+ z z) (+ z z)) z)) z))) -> (= nat z (+ (+ (+ (+ z z) z) (+ z (+ z z))) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= (s z) 'a0)) -> (= 'a0 (+ (+ (+ z (s (+ (s z) z))) 'a0) 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat (s z) 'a0)) -> (= nat 'a0 (+ (+ (+ z (s (+ (s z) z))) 'a0) 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= z z)) -> (= (+ (+ (+ (+ z z) z) z) z) z)]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> (= nat (+ (+ (+ (+ z z) z) z) z) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= z z)) -> (= (s (+ (s z) (+ (s z) (+ (+ (+ z z) z) (+ (s z) z))))) (s z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> (= nat (s (+ (s z) (+ (s z) (+ (+ (+ z z) z) (+ (s z) z))))) (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= (+ z z) (+ (+ z z) z))) -> ('a1 : nat) -> (= 'a1 z)]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) (+ (+ z z) z)) ) -> ('a1 : nat) -> (= nat 'a1 z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) (+ (+ z z) z)) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> (= z (+ (+ z z) (+ z (+ z (+ z (+ z z))))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0))  -> (= nat z (+ (+ z z) (+ z (+ z (+ z (+ z z))))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= z z)) -> (= (+ (+ z (s z)) z) (+ (+ z (s z)) z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> (= nat (+ (+ z (s z)) z) (+ (+ z (s z)) z))]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> (= (+ (+ z (s z)) z) (+ (+ z (s z)) z))] {",
            "intro x : (= z z).",
            "apply c0026.",
            "}"
        ],
        "logprob": -4.624399216968551,
        "actions": [
            "intro.",
            "a c0026",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= z z)) -> (= (s z) (+ (s (+ z z)) (s (+ z (+ z z)))))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> (= nat (s z) (+ (s (+ z z)) (s (+ z (+ z z)))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 1,
        "problem": "(= z (+ (+ (+ z z) (s z)) (+ (+ z (+ z z)) (s z))))",
        "problem_raw": "(= nat z (+ (+ (+ z z) (s z)) (+ (+ z (+ z z)) (s z))))",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= (+ (+ (+ (+ z z) z) z) z) (+ (+ z z) z))) -> (= (+ (+ (+ (+ z z) z) z) (+ z z)) (s (+ z z)))]",
        "problem_raw": "[('a0 : (= nat (+ (+ (+ (+ z z) z) z) z) (+ (+ z z) z))) -> (= nat (+ (+ (+ (+ z z) z) z) (+ z z)) (s (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= (+ z z) z)) -> (= (+ (+ z z) (+ z z)) (+ (+ z z) z))]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) z) ) -> (= nat (+ (+ z z) (+ z z)) (+ (+ z z) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) z) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= (+ (+ (+ z z) z) z) (+ z z))) -> (= z (+ (+ (+ z z) z) z))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ (+ z z) z) z) (+ z z)) ) -> (= nat z (+ (+ (+ z z) z) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ (+ z z) z) z) (+ z z)) "
    },
    {
        "iteration": 1,
        "problem": "[('a0 : (= z (+ (+ z z) z))) -> ('a1 : (= (+ (+ (+ z z) z) (+ (+ z (+ z z)) z)) (+ z (+ z z)))) -> (= z (+ (+ (+ z z) (+ z z)) z))]",
        "problem_raw": "[('a0 : (= nat z (+ (+ z z) z))) -> ('a1 : (= nat (+ (+ (+ z z) z) (+ (+ z (+ z z)) z)) (+ z (+ z z)))) -> (= nat z (+ (+ (+ z z) (+ z z)) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (+ (+ z z) z) (+ (+ z z) z))) -> (= (+ (+ z z) z) (+ (+ z z) z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (+ (+ z z) z) (+ (+ z z) z))) -> (= nat (+ (+ z z) z) (+ (+ z z) z))]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> ('a1 : (= (+ (+ z z) z) (+ (+ z z) z))) -> (= (+ (+ z z) z) (+ (+ z z) z))] {",
            "intro x : (= z z).",
            "intro _ : [('a1 : (= (+ (+ z z) z) (+ (+ z z) z))) -> (= (+ (+ z z) z) (+ (+ z z) z))].",
            "}"
        ],
        "logprob": -1.8410376197334704,
        "actions": [
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= (+ (+ z z) (+ z (+ z z))) z)) -> (= (+ z (+ z (+ z z))) z)]",
        "problem_raw": "[('a0 : (= nat (+ (+ z z) (+ z (+ z z))) z)) -> (= nat (+ z (+ z (+ z z))) z)]",
        "proof": [
            "theorem t : [('a0 : (= (+ (+ z z) (+ z (+ z z))) z)) -> (= (+ z (+ z (+ z z))) z)] {",
            "intro x : (= (+ (+ z z) (+ z (+ z z))) z).",
            "show (= (+ z z) z) by +_z.",
            "show (= (+ z (+ z (+ z z))) z) by rewrite.",
            "}"
        ],
        "logprob": -5.279257270953347,
        "actions": [
            "intro.",
            "c +_z",
            "=> (= (+ z z) z).",
            "c rewrite",
            "=> (= (+ z (+ z (+ z z))) z)."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= (s (+ (+ (s z) z) z)) (+ z (s z)))) -> ('a3 : (= (+ (+ (s z) z) z) (s z))) -> (= (+ (s z) z) (s z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat (s (+ (+ (s z) z) z)) (+ z (s z)))) -> ('a3 : (= nat (+ (+ (s z) z) z) (s z))) -> (= nat (+ (s z) z) (s z))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= (s (+ (+ (s z) z) z)) (+ z (s z)))) -> ('a3 : (= (+ (+ (s z) z) z) (s z))) -> (= (+ (s z) z) (s z))] {",
            "intro x : nat.",
            "intro x0 : (= z x).",
            "intro x1 : (= (s (+ (+ (s z) z) z)) (+ z (s z))).",
            "intro x2 : (= (+ (+ (s z) z) z) (s z)).",
            "show (= (+ (s z) z) (s z)) by +_z.",
            "}"
        ],
        "logprob": -7.2789012790611896,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "c +_z",
            "=> (= (+ (s z) z) (s z))."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z (+ (+ z z) z))) -> ('a1 : (= z (+ (+ z (+ z (+ z z))) z))) -> (= z (+ (+ z (+ (+ (+ z z) z) (+ z z))) z))]",
        "problem_raw": "[('a0 : (= nat z (+ (+ z z) z))) -> ('a1 : (= nat z (+ (+ z (+ z (+ z z))) z))) -> (= nat z (+ (+ z (+ (+ (+ z z) z) (+ z z))) z))]",
        "proof": [
            "theorem t : [('a0 : (= z (+ (+ z z) z))) -> ('a1 : (= z (+ (+ z (+ z (+ z z))) z))) -> (= z (+ (+ z (+ (+ (+ z z) z) (+ z z))) z))] {",
            "intro x : (= z (+ (+ z z) z)).",
            "intro x0 : (= z (+ (+ z (+ z (+ z z))) z)).",
            "show (= z (+ (+ z (+ (+ (+ z z) z) (+ z z))) z)) by rewrite.",
            "}"
        ],
        "logprob": -5.376204994855572,
        "actions": [
            "intro.",
            "intro.",
            "c rewrite",
            "=> (= z (+ (+ z (+ (+ (+ z z) z) (+ z z))) z))."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> (= z (+ (+ (+ (+ z z) (+ z z)) (s z)) z))]",
        "problem_raw": "[('a0 : nat) -> (= nat z (+ (+ (+ (+ z z) (+ z z)) (s z)) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> (= z 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> (= nat z 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= z 'a0)) -> (= z 'a0)] {",
            "intro x : nat.",
            "intro _ : [('a1 : (= z x)) -> (= z x)].",
            "}"
        ],
        "logprob": -2.156659194462926,
        "actions": [
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> (= z (+ (+ 'a0 'a0) (s z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0))  -> (= nat z (+ (+ 'a0 'a0) (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : (= (+ z (+ z z)) (s (+ z (+ z z))))) -> (= (+ z (+ (+ (+ z z) (+ z z)) z)) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (+ z (+ z z)) (s (+ z (+ z z))))) -> (= nat (+ z (+ (+ (+ z z) (+ z z)) z)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : (= (+ (+ z z) z) (+ z z))) -> ('a2 : (= z (+ z z))) -> (= z (+ z 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (+ (+ z z) z) (+ z z))) -> ('a2 : (= nat z (+ z z))) -> (= nat z (+ z 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= (+ (+ z z) z) z)) -> (= (+ (+ z z) z) (+ z z))]",
        "problem_raw": "[('a0 : (= nat (+ (+ z z) z) z)) -> (= nat (+ (+ z z) z) (+ z z))]",
        "proof": [
            "theorem t : [('a0 : (= (+ (+ z z) z) z)) -> (= (+ (+ z z) z) (+ z z))] {",
            "intro x : (= (+ (+ z z) z) z).",
            "show (= (+ (+ z z) z) (+ z z)) by +_z.",
            "}"
        ],
        "logprob": -3.6420972564418648,
        "actions": [
            "intro.",
            "c +_z",
            "=> (= (+ (+ z z) z) (+ z z))."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= (s z) (s z))) -> (= z (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat (s z) (s z)) ) -> (= nat z (+ z z))]",
        "proof": [
            "theorem t : [('a0 : (= (s z) (s z))) -> (= z (+ z z))] {",
            "intro x : (= (s z) (s z)).",
            "show (= (+ z z) z) by +_z.",
            "show (= z (+ z z)) by eq_symm.",
            "}"
        ],
        "logprob": -4.607549879853466,
        "actions": [
            "intro.",
            "c +_z",
            "=> (= (+ z z) z).",
            "c eq_symm",
            "=> (= z (+ z z))."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (s z) (s z)) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= (+ (+ z (s z)) z) (+ (+ z (s z)) z))) -> (= (+ (+ (+ z (s z)) (s z)) (s z)) z)]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z (s z)) z) (+ (+ z (s z)) z)) ) -> (= nat (+ (+ (+ z (s z)) (s z)) (s z)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z (s z)) z) (+ (+ z (s z)) z)) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= (+ (+ z (+ z z)) z) z)) -> (= (+ z (+ z (+ z z))) (+ z z))]",
        "problem_raw": "[('a0 : (= nat (+ (+ z (+ z z)) z) z)) -> (= nat (+ z (+ z (+ z z))) (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= (+ z z) (+ z z))) -> ('a1 : (= z (+ (+ z z) z))) -> (= z (+ (+ z z) z))]",
        "problem_raw": "[('a0 : (= nat (+ z z) (+ z z))) -> ('a1 : (= nat z (+ (+ z z) z))) -> (= nat z (+ (+ z z) z))]",
        "proof": [
            "theorem t : [('a0 : (= (+ z z) (+ z z))) -> ('a1 : (= z (+ (+ z z) z))) -> (= z (+ (+ z z) z))] {",
            "intro x : (= (+ z z) (+ z z)).",
            "intro _ : [('a1 : (= z (+ (+ z z) z))) -> (= z (+ (+ z z) z))].",
            "}"
        ],
        "logprob": -2.555974561856727,
        "actions": [
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= z (+ (+ z z) (+ (s (+ z (+ z z))) z)))) -> (= (+ z (+ z (s (+ z z)))) (s z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat z (+ (+ z z) (+ (s (+ z (+ z z))) z)))) -> (= nat (+ z (+ z (s (+ z z)))) (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z (+ z (+ z z)))) -> ('a1 : (= (+ (+ z (+ z z)) (+ z z)) (+ z z))) -> (= (+ z (+ (+ z (+ z z)) z)) (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat z (+ z (+ z z))) ) -> ('a1 : (= nat (+ (+ z (+ z z)) (+ z z)) (+ z z))) -> (= nat (+ z (+ (+ z (+ z z)) z)) (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z (+ z z))) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> (= (+ 'a0 (s z)) (+ (+ z (s z)) (+ z (s z))))]",
        "problem_raw": "[('a0 : nat) -> (= nat (+ 'a0 (s z)) (+ (+ z (s z)) (+ z (s z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= z (+ (+ z 'a0) z))) -> ('a3 : (= (+ 'a0 (+ z z)) z)) -> (= z (+ z (+ z z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat z (+ (+ z 'a0) z))) -> ('a3 : (= nat (+ 'a0 (+ z z)) z)) -> (= nat z (+ z (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= (+ (+ z z) z) (+ (+ z z) z))) -> ('a1 : (= (+ (+ (+ z z) z) z) (+ z z))) -> (= (+ (+ (+ z z) z) z) (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z z) z) (+ (+ z z) z)) ) -> ('a1 : (= nat (+ (+ (+ z z) z) z) (+ z z))) -> (= nat (+ (+ (+ z z) z) z) (+ z z))]",
        "proof": [
            "theorem t : [('a0 : (= (+ (+ z z) z) (+ (+ z z) z))) -> ('a1 : (= (+ (+ (+ z z) z) z) (+ z z))) -> (= (+ (+ (+ z z) z) z) (+ z z))] {",
            "intro x : (= (+ (+ z z) z) (+ (+ z z) z)).",
            "intro _ : [('a1 : (= (+ (+ (+ z z) z) z) (+ z z))) -> (= (+ (+ (+ z z) z) z) (+ z z))].",
            "}"
        ],
        "logprob": -2.2946492697513743,
        "actions": [
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z z) z) (+ (+ z z) z)) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= (+ (+ z z) z) (+ (+ z z) z))) -> (= (+ z z) (+ z (+ z (+ z z))))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z z) z) (+ (+ z z) z)) ) -> (= nat (+ z z) (+ z (+ z (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z z) z) (+ (+ z z) z)) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (+ z (s z)) (+ (+ z (+ z z)) (+ z z)))) -> (= (+ (+ z z) (s z)) (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (+ z (s z)) (+ (+ z (+ z z)) (+ z z)))) -> (= nat (+ (+ z z) (s z)) (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ (s (+ (s z) (+ z z))) z))) -> (= (+ (s (+ (s z) z)) z) (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z (+ (s (+ (s z) (+ z z))) z))) -> (= nat (+ (s (+ (s z) z)) z) (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> (= (+ z (+ (+ (+ z z) z) (+ z z))) (+ (+ (+ z z) z) z))]",
        "problem_raw": "[('a0 : nat) -> (= nat (+ z (+ (+ (+ z z) z) (+ z z))) (+ (+ (+ z z) z) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= (s (+ 'a0 z)) z)) -> ('a3 : (= z (+ (+ z 'a0) z))) -> (= z (+ (+ z 'a0) z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat (s (+ 'a0 z)) z)) -> ('a3 : (= nat z (+ (+ z 'a0) z))) -> (= nat z (+ (+ z 'a0) z))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : nat) -> ('a2 : (= (s (+ 'a0 z)) z)) -> ('a3 : (= z (+ (+ z 'a0) z))) -> (= z (+ (+ z 'a0) z))] {",
            "intro x : nat.",
            "intro x0 : nat.",
            "intro x1 : (= (s (+ x z)) z).",
            "intro _ : [('a3 : (= z (+ (+ z x) z))) -> (= z (+ (+ z x) z))].",
            "}"
        ],
        "logprob": -4.287704499031213,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= (+ z (+ (+ z z) z)) z)) -> (= (+ (+ z (+ z z)) z) z)]",
        "problem_raw": "[('a0 : (= nat (+ z (+ (+ z z) z)) z)) -> (= nat (+ (+ z (+ z z)) z) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= (+ (+ z z) z) (+ (+ z z) z))) -> (= (+ (+ z z) z) (+ z (+ z z)))]",
        "problem_raw": "[('a0 : (= nat (+ (+ z z) z) (+ (+ z z) z))) -> (= nat (+ (+ z z) z) (+ z (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ z z) (s z)))) -> ('a2 : (= (+ (+ z (+ z z)) z) z)) -> ('a3 : nat) -> ('a4 : (= (+ z (+ z z)) z)) -> (= z (+ z z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ z z) (s z)))) -> ('a2 : (= nat (+ (+ z (+ z z)) z) z)) -> ('a3 : nat) -> ('a4 : (= nat (+ z (+ z z)) z)) -> (= nat z (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : nat) -> (= z z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : nat) -> (= nat z z)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : nat) -> ('a2 : nat) -> (= z z)] {",
            "intro x : nat.",
            "intro x0 : nat.",
            "intro x1 : nat.",
            "apply c0014.",
            "}"
        ],
        "logprob": -5.378394626956389,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "a c0014",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z z)) -> ('a2 : nat) -> (= (+ (+ z z) (+ z z)) (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z z)) -> ('a2 : nat) -> (= nat (+ (+ z z) (+ z z)) (+ z (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z (+ z (+ z z)))) -> ('a1 : nat) -> ('a2 : (= (+ z (+ z z)) z)) -> ('a3 : nat) -> (= (+ z (+ z z)) z)]",
        "problem_raw": "[ ('a0 :(= nat z (+ z (+ z z))) ) -> ('a1 : nat) -> ('a2 : (= nat (+ z (+ z z)) z)) -> ('a3 : nat) -> (= nat (+ z (+ z z)) z)]",
        "proof": [
            "theorem t : [('a0 : (= z (+ z (+ z z)))) -> ('a1 : nat) -> ('a2 : (= (+ z (+ z z)) z)) -> ('a3 : nat) -> (= (+ z (+ z z)) z)] {",
            "intro x : (= z (+ z (+ z z))).",
            "intro x0 : nat.",
            "intro x1 : (= (+ z (+ z z)) z).",
            "intro _ : [('a3 : nat) -> (= (+ z (+ z z)) z)].",
            "}"
        ],
        "logprob": -4.913951484279979,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z (+ z z))) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z z)) -> ('a1 : nat) -> (= z (+ (+ z 'a1) (+ (+ (+ z z) z) z)))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : nat) -> (= nat z (+ (+ z 'a1) (+ (+ (+ z z) z) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= (+ (+ z z) z) z)) -> ('a1 : (= (+ z (+ z z)) (+ z (+ (+ z (+ z z)) z)))) -> (= z (+ (+ z (+ (+ z z) z)) (+ z z)))]",
        "problem_raw": "[('a0 : (= nat (+ (+ z z) z) z)) -> ('a1 : (= nat (+ z (+ z z)) (+ z (+ (+ z (+ z z)) z)))) -> (= nat z (+ (+ z (+ (+ z z) z)) (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z z)) -> (= (+ z (s z)) (+ z (s z)))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> (= nat (+ z (s z)) (+ z (s z)))]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> (= (+ z (s z)) (+ z (s z)))] {",
            "intro x : (= z z).",
            "apply c0014.",
            "}"
        ],
        "logprob": -3.2522462521697433,
        "actions": [
            "intro.",
            "a c0014",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z z)) -> ('a2 : (= (s z) (+ (+ z z) z))) -> (= z (+ (+ (+ z z) z) z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z z)) -> ('a2 : (= nat (s z) (+ (+ z z) z))) -> (= nat z (+ (+ (+ z z) z) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> (= (+ (+ z z) (+ (s z) z)) (+ (s z) (+ (s z) (+ z z))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> (= nat (+ (+ z z) (+ (s z) z)) (+ (s z) (+ (s z) (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z z)) -> (= (+ z (+ z z)) z)]",
        "problem_raw": "[('a0 : (= nat z z)) -> (= nat (+ z (+ z z)) z)]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> (= (+ z (+ z z)) z)] {",
            "intro x : (= z z).",
            "show (= (+ z z) z) by +_z.",
            "show (= z (+ z z)) by eq_symm.",
            "show (= (+ z (+ z z)) z) by rewrite.",
            "}"
        ],
        "logprob": -5.502796321807852,
        "actions": [
            "intro.",
            "c +_z",
            "=> (= (+ z z) z).",
            "c eq_symm",
            "=> (= z (+ z z)).",
            "c rewrite",
            "=> (= (+ z (+ z z)) z)."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= z 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= 'a0 'a0)) -> (= z 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 'a0))  -> (= nat z 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= z 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= 'a0 'a0)) -> (= z 'a0)] {",
            "intro x : nat.",
            "intro x0 : (= x z).",
            "intro x1 : (= z x).",
            "intro x2 : (= x x).",
            "intro _ : [('a4 : (= x x)) -> (= z x)].",
            "}"
        ],
        "logprob": -5.216211151103826,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> (= z z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> (= nat z z)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 z)) -> (= z z)] {",
            "intro x : nat.",
            "intro x0 : (= x z).",
            "apply c0014.",
            "}"
        ],
        "logprob": -4.442913900213245,
        "actions": [
            "intro.",
            "intro.",
            "a c0014",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z (s z))) -> (= (s z) (s z))]",
        "problem_raw": "[ ('a0 :(= nat z (s z)) ) -> (= nat (s z) (s z))]",
        "proof": [
            "theorem t : [('a0 : (= z (s z))) -> (= (s z) (s z))] {",
            "intro x : (= z (s z)).",
            "apply c0044.",
            "}"
        ],
        "logprob": -3.1877864486385414,
        "actions": [
            "intro.",
            "a c0044",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (s z)) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z z)) -> (= (+ (+ z z) (+ z (+ z z))) z)]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z z)) -> (= nat (+ (+ z z) (+ z (+ z z))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= (+ z z) z)) -> (= z (+ (+ z z) z))]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) z) ) -> (= nat z (+ (+ z z) z))]",
        "proof": [
            "theorem t : [('a0 : (= (+ z z) z)) -> (= z (+ (+ z z) z))] {",
            "intro x : (= (+ z z) z).",
            "show (= z (+ z z)) by eq_symm.",
            "show (= z (+ (+ z z) z)) by rewrite.",
            "}"
        ],
        "logprob": -4.6938143762775,
        "actions": [
            "intro.",
            "c eq_symm",
            "=> (= z (+ z z)).",
            "c rewrite",
            "=> (= z (+ (+ z z) z))."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) z) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z z)) -> (= z (+ (s (+ (+ z z) (+ z z))) z))]",
        "problem_raw": "[('a0 : (= nat z z)) -> (= nat z (+ (s (+ (+ z z) (+ z z))) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> (= (s (+ z z)) (+ z (+ z z)))]",
        "problem_raw": "[('a0 : nat) -> (= nat (s (+ z z)) (+ z (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= (+ z (+ (+ z (+ (+ z (+ z z)) z)) z)) z)) -> (= (+ z (+ (+ (+ z (+ (+ (+ z z) z) z)) z) z)) z)]",
        "problem_raw": "[('a0 : (= nat (+ z (+ (+ z (+ (+ z (+ z z)) z)) z)) z)) -> (= nat (+ z (+ (+ (+ z (+ (+ (+ z z) z) z)) z) z)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (+ (+ z z) (+ z z)) z)) -> (= z (+ (+ z z) z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (+ (+ z z) (+ z z)) z)) -> (= nat z (+ (+ z z) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= (+ 'a0 'a0) z)) -> ('a3 : (= z (+ 'a0 'a0))) -> ('a4 : (= (+ z z) z)) -> (= z z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat (+ 'a0 'a0) z)) -> ('a3 : (= nat z (+ 'a0 'a0))) -> ('a4 : (= nat (+ z z) z)) -> (= nat z z)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= (+ 'a0 'a0) z)) -> ('a3 : (= z (+ 'a0 'a0))) -> ('a4 : (= (+ z z) z)) -> (= z z)] {",
            "intro x : nat.",
            "intro x0 : (= x x).",
            "intro x1 : (= (+ x x) z).",
            "intro x2 : (= z (+ x x)).",
            "show (= z z) by rewrite.",
            "intro _ : [('a4 : (= (+ z z) z)) -> (= z z)].",
            "}"
        ],
        "logprob": -6.471435929000549,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "c rewrite",
            "=> (= z z).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : (= (s 'a0) (s 'a0))) -> ('a2 : (= (+ (+ 'a0 z) (s z)) (+ (+ (s z) z) (s z)))) -> (= (+ (+ (s z) z) (s z)) (+ z z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (s 'a0) (s 'a0))) -> ('a2 : (= nat (+ (+ 'a0 z) (s z)) (+ (+ (s z) z) (s z)))) -> (= nat (+ (+ (s z) z) (s z)) (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= (s z) (+ (+ (+ z (+ z (+ (s z) z))) z) z))) -> (= (+ (+ (+ z z) z) z) (s (+ z (+ (s z) z))))]",
        "problem_raw": "[('a0 : (= nat (s z) (+ (+ (+ z (+ z (+ (s z) z))) z) z))) -> (= nat (+ (+ (+ z z) z) z) (s (+ z (+ (s z) z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (+ (+ z z) z) z)) -> (= (+ (+ z z) z) z)]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (+ (+ z z) z) z)) -> (= nat (+ (+ z z) z) z)]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> ('a1 : (= (+ (+ z z) z) z)) -> (= (+ (+ z z) z) z)] {",
            "intro x : (= z z).",
            "intro _ : [('a1 : (= (+ (+ z z) z) z)) -> (= (+ (+ z z) z) z)].",
            "}"
        ],
        "logprob": -2.004677373035806,
        "actions": [
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> (= (+ (+ z z) 'a0) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> (= nat (+ (+ z z) 'a0) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= (+ z z) (+ (+ z z) z))) -> (= (s (+ z z)) (s (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) (+ (+ z z) z)) ) -> (= nat (s (+ z z)) (s (+ z z)))]",
        "proof": [
            "theorem t : [('a0 : (= (+ z z) (+ (+ z z) z))) -> (= (s (+ z z)) (s (+ z z)))] {",
            "intro x : (= (+ z z) (+ (+ z z) z)).",
            "apply c0014.",
            "}"
        ],
        "logprob": -3.6373527537944925,
        "actions": [
            "intro.",
            "a c0014",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) (+ (+ z z) z)) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ z (s (+ (+ z z) (s z)))) z))) -> ('a2 : nat) -> (= z (+ 'a0 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ z (s (+ (+ z z) (s z)))) z))) -> ('a2 : nat) -> (= nat z (+ 'a0 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : (= (s 'a0) (s 'a0))) -> (= (+ z (+ z z)) (s (+ (+ z z) (+ z (s z)))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (s 'a0) (s 'a0)))  -> (= nat (+ z (+ z z)) (s (+ (+ z z) (+ z (s z)))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat (s 'a0) (s 'a0))) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= (+ z z) z)) -> (= (+ z (+ z (+ z (+ z z)))) (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) z) ) -> (= nat (+ z (+ z (+ z (+ z z)))) (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) z) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= (+ (+ z z) z) z)) -> ('a1 : (= z (+ (+ z z) z))) -> ('a2 : (= z (+ z z))) -> (= (+ z z) (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z z) z) z) ) -> ('a1 : (= nat z (+ (+ z z) z))) -> ('a2 : (= nat z (+ z z))) -> (= nat (+ z z) (+ z z))]",
        "proof": [
            "theorem t : [('a0 : (= (+ (+ z z) z) z)) -> ('a1 : (= z (+ (+ z z) z))) -> ('a2 : (= z (+ z z))) -> (= (+ z z) (+ z z))] {",
            "intro x : (= (+ (+ z z) z) z).",
            "intro x0 : (= z (+ (+ z z) z)).",
            "intro x1 : (= z (+ z z)).",
            "apply c0044.",
            "}"
        ],
        "logprob": -6.2355845067923745,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "a c0044",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z z) z) z) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= (+ (+ z 'a0) (+ 'a0 'a0)) 'a0)) -> (= (+ 'a0 (+ 'a0 'a0)) 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat (+ (+ z 'a0) (+ 'a0 'a0)) 'a0)) -> (= nat (+ 'a0 (+ 'a0 'a0)) 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= (+ z z) z)) -> (= (+ z z) (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) z) ) -> (= nat (+ z z) (+ z z))]",
        "proof": [
            "theorem t : [('a0 : (= (+ z z) z)) -> (= (+ z z) (+ z z))] {",
            "intro x : (= (+ z z) z).",
            "apply c0014.",
            "}"
        ],
        "logprob": -3.263191200882889,
        "actions": [
            "intro.",
            "a c0014",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) z) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z (+ (+ z z) z))) -> (= (+ (+ z z) (+ z z)) (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z (+ (+ z z) z)) ) -> (= nat (+ (+ z z) (+ z z)) (+ z (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ (+ z z) z)) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= (+ (+ z (+ z (s (+ z z)))) z) z)) -> (= (+ (+ z (+ z (s (+ z z)))) z) (+ z z))]",
        "problem_raw": "[('a0 : (= nat (+ (+ z (+ z (s (+ z z)))) z) z)) -> (= nat (+ (+ z (+ z (s (+ z z)))) z) (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : nat) -> (= (+ z (+ z 'a0)) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0))  -> ('a2 : nat) -> (= nat (+ z (+ z 'a0)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (+ (+ z z) z) (+ z (+ z z)))) -> (= (+ (+ z (+ z z)) z) (+ z (+ (+ z z) z)))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (+ (+ z z) z) (+ z (+ z z)))) -> (= nat (+ (+ z (+ z z)) z) (+ z (+ (+ z z) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> (= (+ (+ z 'a0) (+ (+ z z) z)) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> (= nat (+ (+ z 'a0) (+ (+ z z) z)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= (+ z (s z)) (+ z (s z)))) -> (= (+ z (s z)) (+ z (s z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (s z)) (+ z (s z))) ) -> (= nat (+ z (s z)) (+ z (s z)))]",
        "proof": [
            "theorem t : [('a0 : (= (+ z (s z)) (+ z (s z)))) -> (= (+ z (s z)) (+ z (s z)))] {",
            "intro _ : [('a0 : (= (+ z (s z)) (+ z (s z)))) -> (= (+ z (s z)) (+ z (s z)))].",
            "}"
        ],
        "logprob": -1.2352912932404647,
        "actions": [
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (s z)) (+ z (s z))) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= (s z) (s z))) -> (= (+ (+ z z) (+ z z)) (+ (+ z z) z))]",
        "problem_raw": "[ ('a0 :(= nat (s z) (s z)) ) -> (= nat (+ (+ z z) (+ z z)) (+ (+ z z) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (s z) (s z)) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z z)) -> (= (+ z (+ z z)) (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> (= nat (+ z (+ z z)) (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : (= (+ 'a0 z) z)) -> ('a2 : (= (+ z (+ z z)) (+ z z))) -> ('a3 : nat) -> (= (+ z (+ z z)) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (+ 'a0 z) z)) -> ('a2 : (= nat (+ z (+ z z)) (+ z z))) -> ('a3 : nat) -> (= nat (+ z (+ z z)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= (+ z (+ z z)) z)) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= z (+ z z))) -> ('a4 : (= (+ (+ z z) z) (+ (+ z z) z))) -> (= z (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (+ z z)) z) ) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= nat z (+ z z))) -> ('a4 : (= nat (+ (+ z z) z) (+ (+ z z) z))) -> (= nat z (+ z z))]",
        "proof": [
            "theorem t : [('a0 : (= (+ z (+ z z)) z)) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= z (+ z z))) -> ('a4 : (= (+ (+ z z) z) (+ (+ z z) z))) -> (= z (+ z z))] {",
            "intro x : (= (+ z (+ z z)) z).",
            "intro x0 : nat.",
            "intro x1 : nat.",
            "intro x2 : (= z (+ z z)).",
            "intro _ : [('a4 : (= (+ (+ z z) z) (+ (+ z z) z))) -> (= z (+ z z))].",
            "}"
        ],
        "logprob": -6.300189895369174,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (+ z z)) z) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : (= (+ z z) z)) -> (= (+ (+ z z) z) (+ z z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (+ z z) z)) -> (= nat (+ (+ z z) z) (+ z z))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= (+ z z) z)) -> (= (+ (+ z z) z) (+ z z))] {",
            "intro x : nat.",
            "intro x0 : (= (+ z z) z).",
            "show (= (+ (+ z z) z) (+ z z)) by +_z.",
            "}"
        ],
        "logprob": -4.841721717588973,
        "actions": [
            "intro.",
            "intro.",
            "c +_z",
            "=> (= (+ (+ z z) z) (+ z z))."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= (+ z z) z)) -> (= (+ (+ z z) z) z)]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) z) ) -> (= nat (+ (+ z z) z) z)]",
        "proof": [
            "theorem t : [('a0 : (= (+ z z) z)) -> (= (+ (+ z z) z) z)] {",
            "intro x : (= (+ z z) z).",
            "show (= z (+ z z)) by eq_symm.",
            "show (= (+ (+ z z) z) z) by rewrite.",
            "}"
        ],
        "logprob": -4.75978242311031,
        "actions": [
            "intro.",
            "c eq_symm",
            "=> (= z (+ z z)).",
            "c rewrite",
            "=> (= (+ (+ z z) z) z)."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) z) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= z 'a0)) -> ('a4 : (= (+ 'a0 'a0) 'a0)) -> (= (+ 'a0 'a0) (+ 'a0 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= nat z 'a0)) -> ('a4 : (= nat (+ 'a0 'a0) 'a0)) -> (= nat (+ 'a0 'a0) (+ 'a0 'a0))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= z 'a0)) -> ('a4 : (= (+ 'a0 'a0) 'a0)) -> (= (+ 'a0 'a0) (+ 'a0 'a0))] {",
            "intro x : nat.",
            "intro x0 : nat.",
            "intro x1 : nat.",
            "intro x2 : (= z x).",
            "intro x3 : (= (+ x x) x).",
            "apply c0014.",
            "}"
        ],
        "logprob": -7.492137547685587,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "a c0014",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z z)) -> (= (+ (s z) (s (+ (s z) z))) (+ z (s z)))]",
        "problem_raw": "[('a0 : (= nat z z)) -> (= nat (+ (s z) (s (+ (s z) z))) (+ z (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z (+ z (+ z z)))) -> ('a1 : (= z (+ z (+ (+ z (+ (+ z z) (+ z z))) z)))) -> (= (s z) (+ (+ (+ (+ z z) (+ z z)) z) z))]",
        "problem_raw": "[ ('a0 :(= nat z (+ z (+ z z))) ) -> ('a1 : (= nat z (+ z (+ (+ z (+ (+ z z) (+ z z))) z)))) -> (= nat (s z) (+ (+ (+ (+ z z) (+ z z)) z) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z (+ z z))) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> (= 'a0 (+ (+ z z) 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> (= nat 'a0 (+ (+ z z) 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (+ z z) (+ z (+ (+ z (+ z z)) (s z))))) -> (= (+ (+ z z) (+ (+ z (+ z z)) z)) z)]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (+ z z) (+ z (+ (+ z (+ z z)) (s z))))) -> (= nat (+ (+ z z) (+ (+ z (+ z z)) z)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= (+ z z) (+ (+ z z) z))) -> ('a1 : (= (+ z z) (+ z z))) -> (= (+ z z) z)]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) (+ (+ z z) z)) ) -> ('a1 : (= nat (+ z z) (+ z z))) -> (= nat (+ z z) z)]",
        "proof": [
            "theorem t : [('a0 : (= (+ z z) (+ (+ z z) z))) -> ('a1 : (= (+ z z) (+ z z))) -> (= (+ z z) z)] {",
            "intro x : (= (+ z z) (+ (+ z z) z)).",
            "show (= (+ z z) z) by +_z.",
            "intro _ : [('a1 : (= (+ z z) (+ z z))) -> (= (+ z z) z)].",
            "}"
        ],
        "logprob": -4.464259452316034,
        "actions": [
            "intro.",
            "c +_z",
            "=> (= (+ z z) z).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) (+ (+ z z) z)) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= (+ (+ z z) z) z)) -> ('a1 : nat) -> ('a2 : (= z (+ z 'a1))) -> (= (+ z (+ z z)) 'a1)]",
        "problem_raw": "[('a0 : (= nat (+ (+ z z) z) z)) -> ('a1 : nat) -> ('a2 : (= nat z (+ z 'a1))) -> (= nat (+ z (+ z z)) 'a1)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (s (+ (s 'a0) (s 'a0))))) -> ('a2 : (= z (+ (s 'a0) (+ z (+ (s (+ (+ z z) z)) z))))) -> (= z (+ (s z) (+ (+ (+ z z) z) (s z))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s (+ (s 'a0) (s 'a0))))) -> ('a2 : (= nat z (+ (s 'a0) (+ z (+ (s (+ (+ z z) z)) z))))) -> (= nat z (+ (s z) (+ (+ (+ z z) z) (s z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> (= (+ z (+ (+ z z) z)) z)]",
        "problem_raw": "[('a0 : nat) -> (= nat (+ z (+ (+ z z) z)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z (s z))) -> ('a1 : nat) -> ('a2 : (= z (+ (+ z 'a1) (s z)))) -> (= (+ (+ z (s z)) z) (+ z (s z)))]",
        "problem_raw": "[ ('a0 :(= nat z (s z)) ) -> ('a1 : nat) -> ('a2 : (= nat z (+ (+ z 'a1) (s z)))) -> (= nat (+ (+ z (s z)) z) (+ z (s z)))]",
        "proof": [
            "theorem t : [('a0 : (= z (s z))) -> ('a1 : nat) -> ('a2 : (= z (+ (+ z 'a1) (s z)))) -> (= (+ (+ z (s z)) z) (+ z (s z)))] {",
            "intro x : (= z (s z)).",
            "intro x0 : nat.",
            "intro x1 : (= z (+ (+ z x0) (s z))).",
            "show (= (+ (+ z (s z)) z) (+ z (s z))) by +_z.",
            "}"
        ],
        "logprob": -6.4484938026089935,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "c +_z",
            "=> (= (+ (+ z (s z)) z) (+ z (s z)))."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (s z)) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (+ z z) (+ (+ z z) z))) -> (= (+ z (+ z z)) (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (+ z z) (+ (+ z z) z))) -> (= nat (+ z (+ z z)) (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> (= 'a0 (+ z (+ (+ z 'a0) (+ 'a0 (s z)))))]",
        "problem_raw": "[('a0 : nat) -> (= nat 'a0 (+ z (+ (+ z 'a0) (+ 'a0 (s z)))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z (+ z z))) -> ('a1 : (= z (+ z (+ z z)))) -> ('a2 : (= z (+ z (+ z (+ z z))))) -> ('a3 : nat) -> (= z (+ z (+ z z)))]",
        "problem_raw": "[('a0 : (= nat z (+ z z))) -> ('a1 : (= nat z (+ z (+ z z)))) -> ('a2 : (= nat z (+ z (+ z (+ z z))))) -> ('a3 : nat) -> (= nat z (+ z (+ z z)))]",
        "proof": [
            "theorem t : [('a0 : (= z (+ z z))) -> ('a1 : (= z (+ z (+ z z)))) -> ('a2 : (= z (+ z (+ z (+ z z))))) -> ('a3 : nat) -> (= z (+ z (+ z z)))] {",
            "intro x : (= z (+ z z)).",
            "intro x0 : (= z (+ z (+ z z))).",
            "intro x1 : (= z (+ z (+ z (+ z z)))).",
            "intro _ : [('a3 : nat) -> (= z (+ z (+ z z)))].",
            "}"
        ],
        "logprob": -5.4963495160746465,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> (= (+ z z) (+ (+ (+ (+ z z) z) z) (+ z z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> (= nat (+ z z) (+ (+ (+ (+ z z) z) z) (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= z (+ (+ 'a0 'a0) z))) -> (= (+ z (+ 'a0 z)) (+ z z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat z (+ (+ 'a0 'a0) z))) -> (= nat (+ z (+ 'a0 z)) (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z z)) -> (= (+ (+ z z) (s z)) (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> (= nat (+ (+ z z) (s z)) (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : (= (+ z z) (+ (+ z z) z))) -> (= z (+ (+ z z) z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (+ z z) (+ (+ z z) z))) -> (= nat z (+ (+ z z) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= z 'a0)) -> ('a3 : (= z 'a0)) -> ('a4 : (= z (+ 'a0 'a0))) -> (= z (+ (s 'a0) (+ z 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0))  -> ('a3 : (= nat z 'a0)) -> ('a4 : (= nat z (+ 'a0 'a0))) -> (= nat z (+ (s 'a0) (+ z 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= z 'a0)) -> (= 'a0 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0))  -> (= nat 'a0 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= z 'a0)) -> (= 'a0 'a0)] {",
            "intro x : nat.",
            "intro x0 : (= x z).",
            "intro x1 : (= z x).",
            "apply c0044.",
            "}"
        ],
        "logprob": -5.294857486432738,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "a c0044",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= 'a0 z)) -> ('a4 : (= z (+ 'a0 'a0))) -> (= (+ (+ z 'a0) 'a0) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= nat 'a0 z)) -> ('a4 : (= nat z (+ 'a0 'a0))) -> (= nat (+ (+ z 'a0) 'a0) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ (+ z z) (+ z (+ (s (+ z (+ (+ z z) (s z)))) z))))) -> (= (+ z (+ (s (+ (+ z (+ z z)) (s z))) z)) z)]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z (+ (+ z z) (+ z (+ (s (+ z (+ (+ z z) (s z)))) z))))) -> (= nat (+ z (+ (s (+ (+ z (+ z z)) (s z))) z)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> (= (+ 'a0 (+ 'a0 'a0)) (+ 'a0 (+ 'a0 'a0)))]",
        "problem_raw": "[('a0 : nat) -> (= nat (+ 'a0 (+ 'a0 'a0)) (+ 'a0 (+ 'a0 'a0)))]",
        "proof": [
            "theorem t : [('a0 : nat) -> (= (+ 'a0 (+ 'a0 'a0)) (+ 'a0 (+ 'a0 'a0)))] {",
            "intro x : nat.",
            "apply c0014.",
            "}"
        ],
        "logprob": -3.2633119690650183,
        "actions": [
            "intro.",
            "a c0014",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z (s z))) -> (= (+ (+ z (s z)) z) (+ (+ z (s z)) (+ z (s z))))]",
        "problem_raw": "[ ('a0 :(= nat z (s z)) ) -> (= nat (+ (+ z (s z)) z) (+ (+ z (s z)) (+ z (s z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (s z)) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ (+ z z) (+ z (+ (+ z z) z))))) -> (= (+ z (+ z (+ z (+ z z)))) z)]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z (+ (+ z z) (+ z (+ (+ z z) z))))) -> (= nat (+ z (+ z (+ z (+ z z)))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : (= (+ (+ z (+ z z)) z) (+ z z))) -> (= (+ z (+ (+ (+ z z) z) (+ z z))) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (+ (+ z (+ z z)) z) (+ z z))) -> (= nat (+ z (+ (+ (+ z z) z) (+ z z))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= (+ z z) z)) -> ('a1 : (= z (+ z (+ (+ (+ (+ z z) z) z) z)))) -> (= z (+ (+ (+ (+ (+ (+ z z) z) z) z) z) z))]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) z) ) -> ('a1 : (= nat z (+ z (+ (+ (+ (+ z z) z) z) z)))) -> (= nat z (+ (+ (+ (+ (+ (+ z z) z) z) z) z) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) z) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> (= (+ (+ z (+ z z)) (+ z (+ (s (+ (+ (+ z z) z) z)) z))) (+ z (+ z (+ z (s z)))))]",
        "problem_raw": "[('a0 : nat) -> (= nat (+ (+ z (+ z z)) (+ z (+ (s (+ (+ (+ z z) z) z)) z))) (+ z (+ z (+ z (s z)))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (s 'a0) 'a0))) -> (= (+ (s 'a0) (s 'a0)) 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (s 'a0) 'a0))) -> (= nat (+ (s 'a0) (s 'a0)) 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (+ z (+ z z)) (s (+ z z)))) -> (= (+ (+ (+ z z) (+ (+ z z) z)) (s z)) (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (+ z (+ z z)) (s (+ z z)))) -> (= nat (+ (+ (+ z z) (+ (+ z z) z)) (s z)) (+ z (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (+ z (s z)) (s (+ z z)))) -> ('a2 : nat) -> ('a3 : (= (+ z (s z)) (+ z (s z)))) -> (= (+ z (s z)) z)]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (+ z (s z)) (s (+ z z)))) -> ('a2 : nat) -> ('a3 : (= nat (+ z (s z)) (+ z (s z)))) -> (= nat (+ z (s z)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z z)) -> (= (+ (+ z (+ z z)) (s (+ z z))) (s (+ z (+ z z))))]",
        "problem_raw": "[('a0 : (= nat z z)) -> (= nat (+ (+ z (+ z z)) (s (+ z z))) (s (+ z (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z z)) -> (= (+ z (+ z (+ z (+ z z)))) (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> (= nat (+ z (+ z (+ z (+ z z)))) (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z z)) -> ('a2 : (= z (+ (+ (+ (+ z z) z) z) z))) -> (= (+ (+ z z) (+ z z)) (s (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z z)) -> ('a2 : (= nat z (+ (+ (+ (+ z z) z) z) z))) -> (= nat (+ (+ z z) (+ z z)) (s (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : (= (+ z (+ z z)) (+ (+ (+ (+ z z) z) z) z))) -> (= (+ (+ z z) (+ z z)) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (+ z (+ z z)) (+ (+ (+ (+ z z) z) z) z))) -> (= nat (+ (+ z z) (+ z z)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z (+ (+ z z) z))) -> (= (+ z (+ z z)) (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z (+ (+ z z) z)) ) -> (= nat (+ z (+ z z)) (+ z (+ z z)))]",
        "proof": [
            "theorem t : [('a0 : (= z (+ (+ z z) z))) -> (= (+ z (+ z z)) (+ z (+ z z)))] {",
            "intro x : (= z (+ (+ z z) z)).",
            "apply c0014.",
            "}"
        ],
        "logprob": -3.64587921510355,
        "actions": [
            "intro.",
            "a c0014",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ (+ z z) z)) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z (+ (+ (+ z (+ (+ z z) z)) z) z))) -> (= (s z) (+ z (+ (+ (+ z z) z) (+ z z))))]",
        "problem_raw": "[('a0 : (= nat z (+ (+ (+ z (+ (+ z z) z)) z) z))) -> (= nat (s z) (+ z (+ (+ (+ z z) z) (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : (= (+ (+ z 'a0) z) (+ z z))) -> (= (+ z z) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (+ (+ z 'a0) z) (+ z z))) -> (= nat (+ z z) z)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= (+ (+ z 'a0) z) (+ z z))) -> (= (+ z z) z)] {",
            "intro x : nat.",
            "intro x0 : (= (+ (+ z x) z) (+ z z)).",
            "apply c0063.",
            "}"
        ],
        "logprob": -4.728600171824559,
        "actions": [
            "intro.",
            "intro.",
            "a c0063",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> (= (+ z (s z)) (+ z (s z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> (= nat (+ z (s z)) (+ z (s z)))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 z)) -> (= (+ z (s z)) (+ z (s z)))] {",
            "intro x : nat.",
            "intro x0 : (= x z).",
            "apply c0014.",
            "}"
        ],
        "logprob": -4.715910219853418,
        "actions": [
            "intro.",
            "intro.",
            "a c0014",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z z)) -> ('a2 : nat) -> (= (+ (+ z z) (+ z z)) z)]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z z)) -> ('a2 : nat) -> (= nat (+ (+ z z) (+ z z)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= (+ z (+ (+ z z) (+ z z))) (s (+ (+ (+ z z) z) z)))) -> (= (+ (+ (+ z z) z) z) (+ z z))]",
        "problem_raw": "[('a0 : (= nat (+ z (+ (+ z z) (+ z z))) (s (+ (+ (+ z z) z) z)))) -> (= nat (+ (+ (+ z z) z) z) (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z (+ z z))) -> (= (+ (+ z z) z) z)]",
        "problem_raw": "[ ('a0 :(= nat z (+ z z)) ) -> (= nat (+ (+ z z) z) z)]",
        "proof": [
            "theorem t : [('a0 : (= z (+ z z))) -> (= (+ (+ z z) z) z)] {",
            "intro x : (= z (+ z z)).",
            "show (= (+ z z) z) by eq_symm.",
            "show (= (+ (+ z z) z) z) by rewrite.",
            "}"
        ],
        "logprob": -5.009761514981814,
        "actions": [
            "intro.",
            "c eq_symm",
            "=> (= (+ z z) z).",
            "c rewrite",
            "=> (= (+ (+ z z) z) z)."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z z)) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (+ z (+ z (+ z z))) z)) -> (= (+ (+ (+ z z) z) z) z)]",
        "problem_raw": "[('a0 : (= nat z z)) -> ('a1 : (= nat (+ z (+ z (+ z z))) z)) -> (= nat (+ (+ (+ z z) z) z) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z z)) -> (= z (+ (+ (+ z z) z) z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> (= nat z (+ (+ (+ z z) z) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z (+ z (+ z z)))) -> ('a1 : nat) -> ('a2 : (= (+ z z) (+ (s (+ z z)) z))) -> ('a3 : nat) -> (= z (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat z (+ z (+ z z))) ) -> ('a1 : nat) -> ('a2 : (= nat (+ z z) (+ (s (+ z z)) z))) -> ('a3 : nat) -> (= nat z (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z (+ z z))) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z z)) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= z (+ z z))) -> ('a4 : (= (+ (+ z z) (+ z z)) z)) -> (= z (+ (+ z z) z))]",
        "problem_raw": "[('a0 : (= nat z z)) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= nat z (+ z z))) -> ('a4 : (= nat (+ (+ z z) (+ z z)) z)) -> (= nat z (+ (+ z z) z))]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= z (+ z z))) -> ('a4 : (= (+ (+ z z) (+ z z)) z)) -> (= z (+ (+ z z) z))] {",
            "intro x : (= z z).",
            "intro x0 : nat.",
            "intro x1 : nat.",
            "intro x2 : (= z (+ z z)).",
            "intro x3 : (= (+ (+ z z) (+ z z)) z).",
            "show (= z (+ (+ z z) z)) by rewrite.",
            "}"
        ],
        "logprob": -7.566256555412108,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "c rewrite",
            "=> (= z (+ (+ z z) z))."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : (= (+ 'a0 (s 'a0)) (s 'a0))) -> ('a2 : (= z (+ (+ z z) (s 'a0)))) -> (= (+ z (+ z z)) (s (+ z (+ z 'a0))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (+ 'a0 (s 'a0)) (s 'a0))) -> ('a2 : (= nat z (+ (+ z z) (s 'a0)))) -> (= nat (+ z (+ z z)) (s (+ z (+ z 'a0))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= (+ z z) (+ (+ z z) z))) -> (= (+ z (+ z z)) (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) (+ (+ z z) z)) ) -> (= nat (+ z (+ z z)) (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) (+ (+ z z) z)) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= (+ (s z) z) (+ (s z) z))) -> (= (+ (s z) (+ (s z) (+ z z))) (+ z (s (+ z z))))]",
        "problem_raw": "[('a0 : (= nat (+ (s z) z) (+ (s z) z))) -> (= nat (+ (s z) (+ (s z) (+ z z))) (+ z (s (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= z 'a0)) -> (= (+ (+ (+ z z) z) 'a0) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat z 'a0)) -> (= nat (+ (+ (+ z z) z) 'a0) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ z z))) -> ('a2 : (= z (+ (s z) (+ (s z) z)))) -> (= (+ (s z) (+ (s z) z)) (s (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z (+ z z))) -> ('a2 : (= nat z (+ (s z) (+ (s z) z)))) -> (= nat (+ (s z) (+ (s z) z)) (s (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= (+ (+ (+ z z) z) z) (+ (+ z z) z))) -> (= (+ (+ (+ z (+ z z)) z) (+ z z)) z)]",
        "problem_raw": "[('a0 : (= nat (+ (+ (+ z z) z) z) (+ (+ z z) z))) -> (= nat (+ (+ (+ z (+ z z)) z) (+ z z)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (+ z z) (+ (+ (+ z z) z) (+ z z)))) -> (= z (+ (+ (+ z z) z) (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (+ z z) (+ (+ (+ z z) z) (+ z z)))) -> (= nat z (+ (+ (+ z z) z) (+ z z)))]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> ('a1 : (= (+ z z) (+ (+ (+ z z) z) (+ z z)))) -> (= z (+ (+ (+ z z) z) (+ z z)))] {",
            "intro x : (= z z).",
            "intro x0 : (= (+ z z) (+ (+ (+ z z) z) (+ z z))).",
            "show (= (+ z z) z) by +_z.",
            "show (= z (+ (+ (+ z z) z) (+ z z))) by rewrite.",
            "}"
        ],
        "logprob": -6.155643320456722,
        "actions": [
            "intro.",
            "intro.",
            "c +_z",
            "=> (= (+ z z) z).",
            "c rewrite",
            "=> (= z (+ (+ (+ z z) z) (+ z z)))."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= (s z) (s z))) -> (= (+ (+ z z) (+ (+ z z) (s z))) z)]",
        "problem_raw": "[ ('a0 :(= nat (s z) (s z)) ) -> (= nat (+ (+ z z) (+ (+ z z) (s z))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (s z) (s z)) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= 'a0 'a0)) -> ('a3 : nat) -> ('a4 : (= (+ (+ 'a0 'a0) (+ 'a0 'a0)) 'a0)) -> (= (+ 'a0 (+ 'a0 'a0)) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : nat) -> ('a4 : (= nat (+ (+ 'a0 'a0) (+ 'a0 'a0)) 'a0)) -> (= nat (+ 'a0 (+ 'a0 'a0)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z (+ z (+ z z)))) -> ('a1 : (= (+ z (+ (+ z z) (+ (+ z z) (+ z z)))) (+ z z))) -> (= (+ z (+ z z)) (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat z (+ z (+ z z))) ) -> ('a1 : (= nat (+ z (+ (+ z z) (+ (+ z z) (+ z z)))) (+ z z))) -> (= nat (+ z (+ z z)) (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z (+ z z))) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : (= z (+ (+ z (+ (+ (+ z z) z) (s z))) z))) -> ('a2 : nat) -> ('a3 : (= z (+ z 'a0))) -> (= z (+ z (+ z (+ z z))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z (+ (+ z (+ (+ (+ z z) z) (s z))) z))) -> ('a2 : nat) -> ('a3 : (= nat z (+ z 'a0))) -> (= nat z (+ z (+ z (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> (= (+ (+ z 'a0) (+ 'a0 'a0)) (+ (+ 'a0 'a0) (s z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0))  -> (= nat (+ (+ z 'a0) (+ 'a0 'a0)) (+ (+ 'a0 'a0) (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= (+ z z) z)) -> (= (+ z (+ z z)) (+ (s z) z))]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) z) ) -> (= nat (+ z (+ z z)) (+ (s z) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) z) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z (+ z z))) -> ('a1 : (= (+ (+ z z) z) z)) -> (= (+ (+ z z) z) (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat z (+ z z)) ) -> ('a1 : (= nat (+ (+ z z) z) z)) -> (= nat (+ (+ z z) z) (+ z z))]",
        "proof": [
            "theorem t : [('a0 : (= z (+ z z))) -> ('a1 : (= (+ (+ z z) z) z)) -> (= (+ (+ z z) z) (+ z z))] {",
            "intro x : (= z (+ z z)).",
            "intro x0 : (= (+ (+ z z) z) z).",
            "show (= (+ (+ z z) z) (+ z z)) by +_z.",
            "}"
        ],
        "logprob": -5.3666198516327555,
        "actions": [
            "intro.",
            "intro.",
            "c +_z",
            "=> (= (+ (+ z z) z) (+ z z))."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z z)) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= (+ (+ z (s z)) (s z)) z)) -> (= z (s (+ z (s z))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat (+ (+ z (s z)) (s z)) z)) -> (= nat z (s (+ z (s z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= (+ z (s z)) (+ z (s z)))) -> (= (+ z (s z)) (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (s z)) (+ z (s z))) ) -> (= nat (+ z (s z)) (+ z (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (s z)) (+ z (s z))) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= (+ z z) z)) -> (= (+ (s z) (+ (s z) (+ (s z) z))) (+ (s z) z))]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) z) ) -> (= nat (+ (s z) (+ (s z) (+ (s z) z))) (+ (s z) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) z) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= z (+ (+ z z) z))) -> ('a3 : (= z (+ z z))) -> (= (+ (+ z z) z) (s z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat z (+ (+ z z) z))) -> ('a3 : (= nat z (+ z z))) -> (= nat (+ (+ z z) z) (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> (= 'a0 (+ (+ (+ (+ z z) 'a0) 'a0) (s z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> (= nat 'a0 (+ (+ (+ (+ z z) 'a0) 'a0) (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (+ (+ z (+ (+ (s z) z) z)) z) (+ z z))) -> ('a2 : nat) -> ('a3 : (= (+ 'a2 (+ z z)) z)) -> (= z (+ (+ (+ (s z) z) z) z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (+ (+ z (+ (+ (s z) z) z)) z) (+ z z))) -> ('a2 : nat) -> ('a3 : (= nat (+ 'a2 (+ z z)) z)) -> (= nat z (+ (+ (+ (s z) z) z) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ z 'a0))) -> (= z (+ (+ 'a0 'a0) z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ z 'a0))) -> (= nat z (+ (+ 'a0 'a0) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z z)) -> ('a2 : (= z (+ (+ z z) z))) -> (= (+ (+ z z) z) (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z z)) -> ('a2 : (= nat z (+ (+ z z) z))) -> (= nat (+ (+ z z) z) (+ z z))]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> ('a1 : (= z z)) -> ('a2 : (= z (+ (+ z z) z))) -> (= (+ (+ z z) z) (+ z z))] {",
            "intro x : (= z z).",
            "intro x0 : (= z z).",
            "intro x1 : (= z (+ (+ z z) z)).",
            "show (= (+ (+ z z) z) (+ z z)) by +_z.",
            "}"
        ],
        "logprob": -5.134659687622183,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "c +_z",
            "=> (= (+ (+ z z) z) (+ z z))."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> (= (+ (+ 'a0 (+ (+ 'a0 z) z)) (+ (s z) (+ z z))) (s (+ (+ z z) z)))]",
        "problem_raw": "[('a0 : nat) -> (= nat (+ (+ 'a0 (+ (+ 'a0 z) z)) (+ (s z) (+ z z))) (s (+ (+ z z) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= (+ (+ z 'a0) 'a0) 'a0)) -> ('a4 : (= 'a0 'a0)) -> (= z (+ 'a0 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> ('a4 : (= nat 'a0 'a0))  -> (= nat z (+ 'a0 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> ('a4 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z (s z))) -> ('a1 : (= (s (+ (+ z z) z)) (s (s z)))) -> (= (s (+ (+ z z) (s z))) (s (s (+ z z))))]",
        "problem_raw": "[ ('a0 :(= nat z (s z)) ) -> ('a1 : (= nat (s (+ (+ z z) z)) (s (s z)))) -> (= nat (s (+ (+ z z) (s z))) (s (s (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (s z)) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : nat) -> (= (+ z 'a1) (+ 'a1 z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : nat) -> (= nat (+ z 'a1) (+ 'a1 z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (+ z z) (+ (+ z (+ (+ z z) z)) (+ z z)))) -> (= (+ z (+ (+ z z) (+ z z))) z)]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (+ z z) (+ (+ z (+ (+ z z) z)) (+ z z)))) -> (= nat (+ z (+ (+ z z) (+ z z))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= (+ z 'a0) (s 'a0))) -> (= (+ (+ z z) (s (+ (+ (+ z z) z) z))) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat (+ z 'a0) (s 'a0))) -> (= nat (+ (+ z z) (s (+ (+ (+ z z) z) z))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= (+ (s (s z)) z) (s z))) -> ('a1 : (= (+ (s (+ (s z) (+ z z))) z) (+ (s (+ z z)) z))) -> (= (+ (s (+ z z)) z) (+ (s (+ z z)) z))]",
        "problem_raw": "[('a0 : (= nat (+ (s (s z)) z) (s z))) -> ('a1 : (= nat (+ (s (+ (s z) (+ z z))) z) (+ (s (+ z z)) z))) -> (= nat (+ (s (+ z z)) z) (+ (s (+ z z)) z))]",
        "proof": [
            "theorem t : [('a0 : (= (+ (s (s z)) z) (s z))) -> ('a1 : (= (+ (s (+ (s z) (+ z z))) z) (+ (s (+ z z)) z))) -> (= (+ (s (+ z z)) z) (+ (s (+ z z)) z))] {",
            "intro x : (= (+ (s (s z)) z) (s z)).",
            "intro x0 : (= (+ (s (+ (s z) (+ z z))) z) (+ (s (+ z z)) z)).",
            "apply c0014.",
            "}"
        ],
        "logprob": -4.605164867109932,
        "actions": [
            "intro.",
            "intro.",
            "a c0014",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z z)) -> (= (+ (+ z z) z) (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> (= nat (+ (+ z z) z) (+ z z))]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> (= (+ (+ z z) z) (+ z z))] {",
            "intro x : (= z z).",
            "show (= (+ (+ z z) z) (+ z z)) by +_z.",
            "}"
        ],
        "logprob": -2.9690965035725823,
        "actions": [
            "intro.",
            "c +_z",
            "=> (= (+ (+ z z) z) (+ z z))."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= (s z) (s z))) -> ('a1 : (= z (+ (+ (+ z z) z) z))) -> (= z (+ z (+ z (+ z z))))]",
        "problem_raw": "[ ('a0 :(= nat (s z) (s z)) ) -> ('a1 : (= nat z (+ (+ (+ z z) z) z))) -> (= nat z (+ z (+ z (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (s z) (s z)) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= (+ z (+ z z)) z)) -> ('a1 : nat) -> ('a2 : (= (+ z (+ z z)) z)) -> ('a3 : (= (+ z (+ z z)) z)) -> (= z (+ (+ (+ z z) (+ z z)) z))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (+ z z)) z) ) -> ('a1 : nat) -> ('a2 : (= nat (+ z (+ z z)) z)) -> ('a3 : (= nat (+ z (+ z z)) z)) -> (= nat z (+ (+ (+ z z) (+ z z)) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (+ z z)) z) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> (= z z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0))  -> (= nat z z)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> (= z z)] {",
            "intro x : nat.",
            "intro x0 : (= x x).",
            "intro x1 : (= x x).",
            "apply c0014.",
            "}"
        ],
        "logprob": -5.4307776995339685,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "a c0014",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z z)) -> (= (+ (+ z (+ z z)) z) (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> (= nat (+ (+ z (+ z z)) z) (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ z (+ z (+ (+ z z) (+ z z)))))) -> (= (+ z (+ z (+ z (+ z z)))) (s (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z (+ z (+ z (+ (+ z z) (+ z z)))))) -> (= nat (+ z (+ z (+ z (+ z z)))) (s (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (s (+ (s z) (+ z (+ (s z) z)))) z)) -> (= (+ (s z) (s z)) (+ (s z) z))]",
        "problem_raw": "[('a0 : (= nat z z)) -> ('a1 : (= nat (s (+ (s z) (+ z (+ (s z) z)))) z)) -> (= nat (+ (s z) (s z)) (+ (s z) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= z 'a0)) -> ('a3 : (= 'a0 'a0)) -> (= z z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0))  -> ('a3 : (= nat 'a0 'a0)) -> (= nat z z)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= z 'a0)) -> ('a3 : (= 'a0 'a0)) -> (= z z)] {",
            "intro x : nat.",
            "intro x0 : (= x z).",
            "intro x1 : (= z x).",
            "show (= z z) by rewrite.",
            "intro _ : [('a3 : (= x x)) -> (= z z)].",
            "}"
        ],
        "logprob": -6.31817880922466,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "c rewrite",
            "=> (= z z).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z (+ (+ (+ z (+ z z)) z) (+ (+ z z) (+ z z))))) -> ('a1 : nat) -> ('a2 : (= z (+ (+ z z) z))) -> (= (+ (+ z z) z) (+ z z))]",
        "problem_raw": "[('a0 : (= nat z (+ (+ (+ z (+ z z)) z) (+ (+ z z) (+ z z))))) -> ('a1 : nat) -> ('a2 : (= nat z (+ (+ z z) z))) -> (= nat (+ (+ z z) z) (+ z z))]",
        "proof": [
            "theorem t : [('a0 : (= z (+ (+ (+ z (+ z z)) z) (+ (+ z z) (+ z z))))) -> ('a1 : nat) -> ('a2 : (= z (+ (+ z z) z))) -> (= (+ (+ z z) z) (+ z z))] {",
            "intro x : (= z (+ (+ (+ z (+ z z)) z) (+ (+ z z) (+ z z)))).",
            "intro x0 : nat.",
            "intro x1 : (= z (+ (+ z z) z)).",
            "show (= (+ (+ z z) z) (+ z z)) by +_z.",
            "}"
        ],
        "logprob": -6.628785166891773,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "c +_z",
            "=> (= (+ (+ z z) z) (+ z z))."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z (+ z (+ z z)))) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= z (+ z 'a1))) -> (= (+ z (+ z z)) z)]",
        "problem_raw": "[ ('a0 :(= nat z (+ z (+ z z))) ) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= nat z (+ z 'a1))) -> (= nat (+ z (+ z z)) z)]",
        "proof": [
            "theorem t : [('a0 : (= z (+ z (+ z z)))) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= z (+ z 'a1))) -> (= (+ z (+ z z)) z)] {",
            "intro x : (= z (+ z (+ z z))).",
            "intro x0 : nat.",
            "intro x1 : nat.",
            "show (= (+ z (+ z z)) z) by eq_symm.",
            "intro _ : [('a3 : (= z (+ z x0))) -> (= (+ z (+ z z)) z)].",
            "}"
        ],
        "logprob": -5.94932759656795,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "c eq_symm",
            "=> (= (+ z (+ z z)) z).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z (+ z z))) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z z)) -> (= (+ z (+ z (+ z (+ z z)))) (+ z (+ z (+ z (+ z z)))))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> (= nat (+ z (+ z (+ z (+ z z)))) (+ z (+ z (+ z (+ z z)))))]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> (= (+ z (+ z (+ z (+ z z)))) (+ z (+ z (+ z (+ z z)))))] {",
            "intro x : (= z z).",
            "apply c0014.",
            "}"
        ],
        "logprob": -3.3631745848377683,
        "actions": [
            "intro.",
            "a c0014",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= z (+ z (+ z z)))) -> ('a3 : (= (+ (+ z z) (+ z (+ z z))) (+ z z))) -> (= z (+ z (+ z (+ (+ z z) z))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat z (+ z (+ z z)))) -> ('a3 : (= nat (+ (+ z z) (+ z (+ z z))) (+ z z))) -> (= nat z (+ z (+ z (+ (+ z z) z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> (= (+ (+ z z) (+ z z)) (+ z z))]",
        "problem_raw": "[('a0 : nat) -> (= nat (+ (+ z z) (+ z z)) (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= 'a0 'a0)) -> (= z (+ (+ (+ (+ z (s (s z))) z) z) z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> (= nat z (+ (+ (+ (+ z (s (s z))) z) z) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ (+ z (+ z (+ z (s z)))) z))) -> (= (+ (+ z (+ z (+ z (s (+ z z))))) z) z)]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z (+ (+ z (+ z (+ z (s z)))) z))) -> (= nat (+ (+ z (+ z (+ z (s (+ z z))))) z) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : (= (+ z (+ z z)) (s 'a0))) -> (= (+ z (+ z z)) (s (+ z z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (+ z (+ z z)) (s 'a0))) -> (= nat (+ z (+ z z)) (s (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= z 'a0)) -> (= (+ (+ z 'a0) 'a0) (+ (+ z 'a0) z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat z 'a0)) -> (= nat (+ (+ z 'a0) 'a0) (+ (+ z 'a0) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= (+ (s (+ (s z) (+ z z))) z) z)) -> (= (+ (s (+ z (+ z (+ (+ z (+ z z)) z)))) z) z)]",
        "problem_raw": "[('a0 : (= nat (+ (s (+ (s z) (+ z z))) z) z)) -> (= nat (+ (s (+ z (+ z (+ (+ z (+ z z)) z)))) z) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= (+ (s (+ z z)) z) (+ z z))) -> (= (+ z (s (+ z (+ z (+ (+ z z) z))))) (+ z z))]",
        "problem_raw": "[('a0 : (= nat (+ (s (+ z z)) z) (+ z z))) -> (= nat (+ z (s (+ z (+ z (+ (+ z z) z))))) (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z z)) -> ('a1 : nat) -> (= (+ 'a1 (+ 'a1 z)) z)]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : nat) -> (= nat (+ 'a1 (+ 'a1 z)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ z (+ z z)))) -> ('a2 : (= z z)) -> (= (+ z (+ (+ z z) (+ z z))) (s (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z (+ z (+ z z)))) -> ('a2 : (= nat z z)) -> (= nat (+ z (+ (+ z z) (+ z z))) (s (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= z (+ (+ z (+ z z)) (+ z z)))) -> (= (+ z (+ (+ (+ (+ z (s z)) z) z) z)) (+ z z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat z (+ (+ z (+ z z)) (+ z z)))) -> (= nat (+ z (+ (+ (+ (+ z (s z)) z) z) z)) (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> (= (+ z (+ z (+ (s z) z))) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> (= nat (+ z (+ z (+ (s z) z))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z z)) -> (= z (+ (+ z z) z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> (= nat z (+ (+ z z) z))]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> (= z (+ (+ z z) z))] {",
            "intro x : (= z z).",
            "show (= (+ z z) z) by +_z.",
            "show (= z (+ z z)) by eq_symm.",
            "show (= z (+ (+ z z) z)) by rewrite.",
            "}"
        ],
        "logprob": -6.2287036790722805,
        "actions": [
            "intro.",
            "c +_z",
            "=> (= (+ z z) z).",
            "c eq_symm",
            "=> (= z (+ z z)).",
            "c rewrite",
            "=> (= z (+ (+ z z) z))."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= (+ (+ z z) z) (+ z z))) -> (= (+ z (+ z (+ z z))) (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z z) z) (+ z z)) ) -> (= nat (+ z (+ z (+ z z))) (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z z) z) (+ z z)) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= (+ z (s z)) (s (+ z z)))) -> (= (+ z (+ z z)) (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (s z)) (s (+ z z))) ) -> (= nat (+ z (+ z z)) (+ z (+ z z)))]",
        "proof": [
            "theorem t : [('a0 : (= (+ z (s z)) (s (+ z z)))) -> (= (+ z (+ z z)) (+ z (+ z z)))] {",
            "intro x : (= (+ z (s z)) (s (+ z z))).",
            "apply c0014.",
            "}"
        ],
        "logprob": -3.5511649612766707,
        "actions": [
            "intro.",
            "a c0014",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (s z)) (s (+ z z))) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= (+ z (s z)) (s (+ z z)))) -> ('a1 : (= (s (+ z (s z))) (s z))) -> ('a2 : (= z (+ (+ (+ z z) (+ z z)) z))) -> ('a3 : nat) -> (= z (+ z (+ 'a3 z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (s z)) (s (+ z z))) ) -> ('a1 : (= nat (s (+ z (s z))) (s z))) -> ('a2 : (= nat z (+ (+ (+ z z) (+ z z)) z))) -> ('a3 : nat) -> (= nat z (+ z (+ 'a3 z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (s z)) (s (+ z z))) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= (+ z z) z)) -> ('a1 : (= (+ z z) z)) -> ('a2 : (= z z)) -> (= (+ (+ z z) z) (+ z z))]",
        "problem_raw": "[('a0 : (= nat (+ z z) z)) -> ('a1 : (= nat (+ z z) z)) -> ('a2 : (= nat z z)) -> (= nat (+ (+ z z) z) (+ z z))]",
        "proof": [
            "theorem t : [('a0 : (= (+ z z) z)) -> ('a1 : (= (+ z z) z)) -> ('a2 : (= z z)) -> (= (+ (+ z z) z) (+ z z))] {",
            "intro x : (= (+ z z) z).",
            "intro x0 : (= (+ z z) z).",
            "intro x1 : (= z z).",
            "show (= (+ (+ z z) z) (+ z z)) by +_z.",
            "}"
        ],
        "logprob": -6.217189593459628,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "c +_z",
            "=> (= (+ (+ z z) z) (+ z z))."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> (= z (+ (+ 'a0 'a0) z))]",
        "problem_raw": "[('a0 : nat) -> (= nat z (+ (+ 'a0 'a0) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> (= (+ (+ 'a0 'a0) 'a0) (+ 'a0 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> (= nat (+ (+ 'a0 'a0) 'a0) (+ 'a0 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= (+ z (+ (+ z z) z)) z)) -> (= (+ (+ z z) (+ z z)) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat (+ z (+ (+ z z) z)) z)) -> (= nat (+ (+ z z) (+ z z)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (s z) (+ (+ z z) z))) -> ('a2 : (= (s z) (+ (+ z z) z))) -> (= z (+ (+ (s z) z) z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (s z) (+ (+ z z) z))) -> ('a2 : (= nat (s z) (+ (+ z z) z))) -> (= nat z (+ (+ (s z) z) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ (+ z (+ z z)) z))) -> (= z (+ (+ z (+ z z)) (+ (+ z z) z)))]",
        "problem_raw": "[('a0 : (= nat z z)) -> ('a1 : (= nat z (+ (+ z (+ z z)) z))) -> (= nat z (+ (+ z (+ z z)) (+ (+ z z) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ (+ z (+ (+ z (+ (+ z z) z)) (+ z z))) z))) -> (= (+ (+ z (+ (+ (+ z z) z) z)) z) z)]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z (+ (+ z (+ (+ z (+ (+ z z) z)) (+ z z))) z))) -> (= nat (+ (+ z (+ (+ (+ z z) z) z)) z) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= (+ z (s z)) (s (+ z z)))) -> (= z (+ (s (+ z z)) (+ z (s z))))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (s z)) (s (+ z z))) ) -> (= nat z (+ (s (+ z z)) (+ z (s z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (s z)) (s (+ z z))) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : nat) -> (= 'a0 z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0))  -> ('a2 : nat) -> (= nat 'a0 z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (+ (+ (+ (+ z z) z) z) z) z)) -> (= (+ z z) (+ (+ z z) z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (+ (+ (+ (+ z z) z) z) z) z)) -> (= nat (+ z z) (+ (+ z z) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : nat) -> (= 'a0 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : nat) -> (= nat 'a0 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : nat) -> (= 'a0 'a0)] {",
            "intro x : nat.",
            "intro x0 : (= x z).",
            "intro x1 : nat.",
            "apply c0014.",
            "}"
        ],
        "logprob": -5.425171470039753,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "a c0014",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> (= 'a0 z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> (= nat 'a0 z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= (+ z z) z)) -> (= z (+ (+ z (+ z z)) z))]",
        "problem_raw": "[('a0 : (= nat (+ z z) z)) -> (= nat z (+ (+ z (+ z z)) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= z 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= 'a0 'a0)) -> (= z z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 'a0))  -> (= nat z z)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= z 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= 'a0 'a0)) -> (= z z)] {",
            "intro x : nat.",
            "intro x0 : (= x z).",
            "intro x1 : (= z x).",
            "intro x2 : (= x x).",
            "show (= z z) by rewrite.",
            "intro _ : [('a4 : (= x x)) -> (= z z)].",
            "}"
        ],
        "logprob": -6.395090477683053,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "c rewrite",
            "=> (= z z).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : (= z (+ (+ z z) z))) -> (= z (+ (+ z z) (+ z z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z (+ (+ z z) z))) -> (= nat z (+ (+ z z) (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> (= (+ z z) (+ (+ z z) (+ z z)))]",
        "problem_raw": "[('a0 : nat) -> (= nat (+ z z) (+ (+ z z) (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> (= (+ (s (+ (s z) (+ (s z) z))) z) (+ (s (+ (s z) z)) z))]",
        "problem_raw": "[('a0 : nat) -> (= nat (+ (s (+ (s z) (+ (s z) z))) z) (+ (s (+ (s z) z)) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> (= (+ (+ z z) (+ z z)) (+ (+ z z) z))]",
        "problem_raw": "[('a0 : nat) -> (= nat (+ (+ z z) (+ z z)) (+ (+ z z) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z z)) -> ('a1 : nat) -> ('a2 : (= (s z) (+ (+ (+ (+ z z) z) z) z))) -> ('a3 : (= z (+ (+ z (+ z z)) (+ z z)))) -> (= (+ (+ (+ (+ z (+ z z)) z) z) z) (s z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : nat) -> ('a2 : (= nat (s z) (+ (+ (+ (+ z z) z) z) z))) -> ('a3 : (= nat z (+ (+ z (+ z z)) (+ z z)))) -> (= nat (+ (+ (+ (+ z (+ z z)) z) z) z) (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (+ z z) z)) -> ('a2 : (= (+ z (+ z (+ z z))) z)) -> (= z (+ (+ z (+ (+ z z) z)) (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (+ z z) z)) -> ('a2 : (= nat (+ z (+ z (+ z z))) z)) -> (= nat z (+ (+ z (+ (+ z z) z)) (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> (= (+ 'a0 (+ (+ z z) (+ z z))) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> (= nat (+ 'a0 (+ (+ z z) (+ z z))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= (s z) (s z))) -> ('a1 : (= z (s z))) -> ('a2 : (= (s z) (s z))) -> (= (s z) (+ (s z) (+ (s z) z)))]",
        "problem_raw": "[ ('a0 :(= nat (s z) (s z)) ) -> ('a1 : (= nat z (s z))) -> ('a2 : (= nat (s z) (s z))) -> (= nat (s z) (+ (s z) (+ (s z) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (s z) (s z)) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ (+ z z) z))) -> ('a2 : (= (+ z (+ z z)) (+ z z))) -> (= (+ (+ z (+ z z)) z) (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z (+ (+ z z) z))) -> ('a2 : (= nat (+ z (+ z z)) (+ z z))) -> (= nat (+ (+ z (+ z z)) z) (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : (= (+ (+ z z) z) (+ (+ z z) z))) -> (= z (+ z z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (+ (+ z z) z) (+ (+ z z) z))) -> (= nat z (+ z z))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= (+ (+ z z) z) (+ (+ z z) z))) -> (= z (+ z z))] {",
            "intro x : nat.",
            "intro x0 : (= (+ (+ z z) z) (+ (+ z z) z)).",
            "show (= (+ z z) z) by +_z.",
            "show (= z (+ z z)) by eq_symm.",
            "}"
        ],
        "logprob": -6.569133050851968,
        "actions": [
            "intro.",
            "intro.",
            "c +_z",
            "=> (= (+ z z) z).",
            "c eq_symm",
            "=> (= z (+ z z))."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z z)) -> (= (+ z (+ (+ z z) z)) (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> (= nat (+ z (+ (+ z z) z)) (+ z (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (+ (+ (+ z z) z) z) (+ z z))) -> ('a2 : nat) -> (= (+ (+ z z) (+ z z)) (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (+ (+ (+ z z) z) z) (+ z z))) -> ('a2 : nat) -> (= nat (+ (+ z z) (+ z z)) (+ z (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= (+ z z) (+ (+ z z) z))) -> (= z (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) (+ (+ z z) z)) ) -> (= nat z (+ z (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) (+ (+ z z) z)) "
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> (= z 'a0)]",
        "problem_raw": "[('a0 : nat) -> (= nat z 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : nat) -> ('a1 : (= (s 'a0) (s 'a0))) -> ('a2 : (= (+ (+ 'a0 'a0) (s 'a0)) z)) -> (= z (+ 'a0 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (s 'a0) (s 'a0))) -> ('a2 : (= nat (+ (+ 'a0 'a0) (s 'a0)) z)) -> (= nat z (+ 'a0 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 2,
        "problem": "[('a0 : (= (s (+ z z)) (s z))) -> ('a1 : (= (s (+ z z)) (s (+ z (+ z z))))) -> ('a2 : (= z (+ z z))) -> (= (+ z (+ z (+ z z))) z)]",
        "problem_raw": "[ ('a0 :(= nat (s (+ z z)) (s z)) ) -> ('a1 : (= nat (s (+ z z)) (s (+ z (+ z z))))) -> ('a2 : (= nat z (+ z z))) -> (= nat (+ z (+ z (+ z z))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (s (+ z z)) (s z)) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 'a0)) -> (= 'a0 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat 'a0 'a0))  -> ('a3 : (= nat 'a0 'a0)) -> (= nat 'a0 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 'a0)) -> (= 'a0 'a0)] {",
            "intro x : nat.",
            "intro x0 : (= x z).",
            "intro x1 : (= x x).",
            "intro _ : [('a3 : (= x x)) -> (= x x)].",
            "}"
        ],
        "logprob": -6.6444489431477844,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> (= (+ (+ (+ 'a0 'a0) 'a0) 'a0) (+ (+ 'a0 'a0) 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> (= nat (+ (+ (+ 'a0 'a0) 'a0) 'a0) (+ (+ 'a0 'a0) 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= (+ (+ z 'a0) 'a0) 'a0)) -> (= (+ (+ z 'a0) (s 'a0)) 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> (= nat (+ (+ z 'a0) (s 'a0)) 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> (= (+ (+ z 'a0) (+ (s 'a0) (s z))) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> (= nat (+ (+ z 'a0) (+ (s 'a0) (s z))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= (+ z (s z)) (+ z (s z)))) -> (= (+ (+ z (+ z z)) (s z)) (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (s z)) (+ z (s z))) ) -> (= nat (+ (+ z (+ z z)) (s z)) (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (s z)) (+ z (s z))) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= (+ (+ z 'a0) 'a0) 'a0)) -> (= (+ 'a0 'a0) (+ 'a0 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> (= nat (+ 'a0 'a0) (+ 'a0 'a0))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : nat) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= (+ (+ z 'a0) 'a0) 'a0)) -> (= (+ 'a0 'a0) (+ 'a0 'a0))] {",
            "intro x : nat.",
            "intro x0 : nat.",
            "intro x1 : (= x x).",
            "intro x2 : (= (+ (+ z x) x) x).",
            "apply c0014.",
            "}"
        ],
        "logprob": -8.605818945069041,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "a c0014",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= (+ (+ z 'a0) 'a0) 'a0)) -> (= (+ 'a0 'a0) 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> (= nat (+ 'a0 'a0) 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ (+ z z) z))) -> ('a2 : nat) -> (= (+ (+ z (+ z z)) (+ z z)) z)]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z (+ (+ z z) z))) -> ('a2 : nat) -> (= nat (+ (+ z (+ z z)) (+ z z)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= (+ (s z) z) (s z))) -> ('a1 : (= (s (+ z z)) (s (+ z (s z))))) -> ('a2 : (= z (+ (s z) z))) -> ('a3 : (= (+ z z) (+ z z))) -> (= (+ z (s (+ z (s z)))) (s (+ z (+ z z))))]",
        "problem_raw": "[ ('a0 :(= nat (+ (s z) z) (s z)) ) -> ('a1 : (= nat (s (+ z z)) (s (+ z (s z))))) -> ('a2 : (= nat z (+ (s z) z))) -> ('a3 : (= nat (+ z z) (+ z z))) -> (= nat (+ z (s (+ z (s z)))) (s (+ z (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (s z) z) (s z)) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= (+ (+ z 'a0) 'a0) 'a0)) -> (= 'a0 (+ 'a0 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> (= nat 'a0 (+ 'a0 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ (+ (+ (+ z z) z) z) z))) -> ('a2 : (= z (+ (+ (+ (+ z z) z) z) z))) -> (= (+ (+ (+ (+ z z) z) z) z) (s z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z (+ (+ (+ (+ z z) z) z) z))) -> ('a2 : (= nat z (+ (+ (+ (+ z z) z) z) z))) -> (= nat (+ (+ (+ (+ z z) z) z) z) (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> (= (+ z (+ z z)) (+ z 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> (= nat (+ z (+ z z)) (+ z 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (+ z (+ z z)) (s (+ z z)))) -> (= (+ (+ z (+ z (+ z z))) z) (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (+ z (+ z z)) (s (+ z z)))) -> (= nat (+ (+ z (+ z (+ z z))) z) (+ z (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= (+ (+ (+ z z) z) z) (+ (+ (+ z z) z) z))) -> ('a1 : (= z (+ (+ z (+ (+ z z) z)) z))) -> (= z (+ (+ z (+ (+ z z) z)) (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ (+ z z) z) z) (+ (+ (+ z z) z) z)) ) -> ('a1 : (= nat z (+ (+ z (+ (+ z z) z)) z))) -> (= nat z (+ (+ z (+ (+ z z) z)) (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ (+ z z) z) z) (+ (+ (+ z z) z) z)) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= (s z) (s z))) -> ('a1 : nat) -> ('a2 : (= 'a1 'a1)) -> ('a3 : (= (+ z 'a1) (+ 'a1 'a1))) -> (= (+ 'a1 'a1) (+ 'a1 'a1))]",
        "problem_raw": "[ ('a0 :(= nat (s z) (s z)) ) -> ('a1 : nat) -> ('a2 : (= nat 'a1 'a1)) -> ('a3 : (= nat (+ z 'a1) (+ 'a1 'a1))) -> (= nat (+ 'a1 'a1) (+ 'a1 'a1))]",
        "proof": [
            "theorem t : [('a0 : (= (s z) (s z))) -> ('a1 : nat) -> ('a2 : (= 'a1 'a1)) -> ('a3 : (= (+ z 'a1) (+ 'a1 'a1))) -> (= (+ 'a1 'a1) (+ 'a1 'a1))] {",
            "intro x : (= (s z) (s z)).",
            "intro x0 : nat.",
            "intro x1 : (= x0 x0).",
            "intro x2 : (= (+ z x0) (+ x0 x0)).",
            "apply c0014.",
            "}"
        ],
        "logprob": -8.88824515106341,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "a c0014",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (s z) (s z)) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z (+ z z))) -> ('a1 : (= z (+ (+ z z) (+ z z)))) -> ('a2 : (= (+ z z) z)) -> ('a3 : (= (+ z z) (+ (+ (+ z z) z) z))) -> (= z (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat z (+ z z)) ) -> ('a1 : (= nat z (+ (+ z z) (+ z z)))) -> ('a2 : (= nat (+ z z) z)) -> ('a3 : (= nat (+ z z) (+ (+ (+ z z) z) z))) -> (= nat z (+ z z))]",
        "proof": [
            "theorem t : [('a0 : (= z (+ z z))) -> ('a1 : (= z (+ (+ z z) (+ z z)))) -> ('a2 : (= (+ z z) z)) -> ('a3 : (= (+ z z) (+ (+ (+ z z) z) z))) -> (= z (+ z z))] {",
            "intro x : (= z (+ z z)).",
            "intro x0 : (= z (+ (+ z z) (+ z z))).",
            "intro x1 : (= (+ z z) z).",
            "intro _ : [('a3 : (= (+ z z) (+ (+ (+ z z) z) z))) -> (= z (+ z z))].",
            "}"
        ],
        "logprob": -7.05814260930957,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z z)) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 'a0)) -> (= 'a0 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> (= nat 'a0 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 'a0)) -> (= 'a0 'a0)] {",
            "intro x : nat.",
            "intro x0 : (= x x).",
            "intro x1 : (= x x).",
            "intro _ : [('a3 : (= x x)) -> (= x x)].",
            "}"
        ],
        "logprob": -5.958643152083023,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (s (+ z (+ z (+ z z)))) z)) -> (= z (+ z (+ z (+ z (+ z z)))))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (s (+ z (+ z (+ z z)))) z)) -> (= nat z (+ z (+ z (+ z (+ z z)))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ z (s z)))) -> ('a2 : (= (+ (+ (+ z z) (s z)) z) (+ z (s z)))) -> (= (+ (+ z (s z)) (s z)) (+ (+ (+ z (s z)) z) (s z)))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z (+ z (s z)))) -> ('a2 : (= nat (+ (+ (+ z z) (s z)) z) (+ z (s z)))) -> (= nat (+ (+ z (s z)) (s z)) (+ (+ (+ z (s z)) z) (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (+ (+ z z) (+ z z)) (s z)) z))) -> (= z (+ 'a0 (+ (+ z z) (s z))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (+ (+ z z) (+ z z)) (s z)) z))) -> (= nat z (+ 'a0 (+ (+ z z) (s z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z (s z))) -> ('a1 : (= (s (+ z (s z))) (s z))) -> ('a2 : nat) -> ('a3 : (= z (+ (+ z 'a2) (+ z (+ z z))))) -> (= (+ (+ z 'a2) (+ z (+ z z))) (s z))]",
        "problem_raw": "[ ('a0 :(= nat z (s z)) ) -> ('a1 : (= nat (s (+ z (s z))) (s z))) -> ('a2 : nat) -> ('a3 : (= nat z (+ (+ z 'a2) (+ z (+ z z))))) -> (= nat (+ (+ z 'a2) (+ z (+ z z))) (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (s z)) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= z 'a0)) -> ('a3 : (= 'a0 'a0)) -> (= z (+ 'a0 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0))  -> (= nat z (+ 'a0 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ z (+ z (+ (+ z z) (+ z z)))))) -> (= (+ z (+ z (+ (+ z (+ z z)) z))) z)]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z (+ z (+ z (+ (+ z z) (+ z z)))))) -> (= nat (+ z (+ z (+ (+ z (+ z z)) z))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= (+ 'a0 'a0) 'a0)) -> ('a3 : (= (+ 'a0 'a0) (+ 'a0 'a0))) -> (= 'a0 (+ (+ 'a0 'a0) 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat (+ 'a0 'a0) 'a0)) -> ('a3 : (= nat (+ 'a0 'a0) (+ 'a0 'a0)))  -> (= nat 'a0 (+ (+ 'a0 'a0) 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat (+ 'a0 'a0) 'a0)) -> ('a3 : (= nat (+ 'a0 'a0) (+ 'a0 'a0))) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= (+ (+ z z) z) (+ z z))) -> ('a1 : (= (+ z z) (+ z (+ z z)))) -> ('a2 : nat) -> (= z (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z z) z) (+ z z)) ) -> ('a1 : (= nat (+ z z) (+ z (+ z z)))) -> ('a2 : nat) -> (= nat z (+ z (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z z) z) (+ z z)) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z z)) -> ('a1 : nat) -> ('a2 : (= (+ z 'a1) (+ (+ 'a1 z) z))) -> (= (+ z (+ z z)) (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : nat) -> ('a2 : (= nat (+ z 'a1) (+ (+ 'a1 z) z))) -> (= nat (+ z (+ z z)) (+ z (+ z z)))]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> ('a1 : nat) -> ('a2 : (= (+ z 'a1) (+ (+ 'a1 z) z))) -> (= (+ z (+ z z)) (+ z (+ z z)))] {",
            "intro x : (= z z).",
            "intro x0 : nat.",
            "intro x1 : (= (+ z x0) (+ (+ x0 z) z)).",
            "apply c0115.",
            "}"
        ],
        "logprob": -6.990466476228122,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "a c0115",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ 'a0 (s 'a0)))) -> (= z (+ (+ 'a0 (s 'a0)) 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ 'a0 (s 'a0)))) -> (= nat z (+ (+ 'a0 (s 'a0)) 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z (+ (+ z z) z))) -> ('a1 : (= z (+ (+ z (+ z z)) (+ z z)))) -> (= (+ z (+ (+ z z) z)) (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z (+ (+ z z) z)) ) -> ('a1 : (= nat z (+ (+ z (+ z z)) (+ z z)))) -> (= nat (+ z (+ (+ z z) z)) (+ z (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ (+ z z) z)) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= (+ (+ z 'a0) 'a0) 'a0)) -> (= (+ (+ z 'a0) 'a0) (+ (+ (+ (+ z 'a0) 'a0) 'a0) 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> (= nat (+ (+ z 'a0) 'a0) (+ (+ (+ (+ z 'a0) 'a0) 'a0) 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= z 'a0)) -> ('a3 : (= 'a0 'a0)) -> (= 'a0 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> (= nat 'a0 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : nat) -> ('a2 : (= z 'a0)) -> ('a3 : (= 'a0 'a0)) -> (= 'a0 'a0)] {",
            "intro x : nat.",
            "intro x0 : nat.",
            "intro x1 : (= z x).",
            "intro _ : [('a3 : (= x x)) -> (= x x)].",
            "}"
        ],
        "logprob": -6.280676436789737,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= (+ (+ z 'a0) 'a0) 'a0)) -> (= (+ (+ z 'a0) 'a0) 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0))  -> ('a3 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> (= nat (+ (+ z 'a0) 'a0) 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= (+ (+ z 'a0) 'a0) 'a0)) -> (= (+ (+ z 'a0) 'a0) 'a0)] {",
            "intro x : nat.",
            "intro x0 : (= z x).",
            "intro x1 : (= x x).",
            "intro _ : [('a3 : (= (+ (+ z x) x) x)) -> (= (+ (+ z x) x) x)].",
            "}"
        ],
        "logprob": -6.653394192114389,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z (+ (+ z (+ (+ (+ z z) z) (+ z z))) z))) -> (= z (+ (+ z (+ (+ (+ z z) z) z)) z))]",
        "problem_raw": "[ ('a0 :(= nat z (+ (+ z (+ (+ (+ z z) z) (+ z z))) z)) ) -> (= nat z (+ (+ z (+ (+ (+ z z) z) z)) z))]",
        "proof": [
            "theorem t : [('a0 : (= z (+ (+ z (+ (+ (+ z z) z) (+ z z))) z))) -> (= z (+ (+ z (+ (+ (+ z z) z) z)) z))] {",
            "intro x : (= z (+ (+ z (+ (+ (+ z z) z) (+ z z))) z)).",
            "show (= (+ z z) z) by +_z.",
            "show (= z (+ (+ z (+ (+ (+ z z) z) z)) z)) by rewrite.",
            "}"
        ],
        "logprob": -6.866638920510515,
        "actions": [
            "intro.",
            "c +_z",
            "=> (= (+ z z) z).",
            "c rewrite",
            "=> (= z (+ (+ z (+ (+ (+ z z) z) z)) z))."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ (+ z (+ (+ (+ z z) z) (+ z z))) z)) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= z 'a0)) -> ('a3 : (= 'a0 'a0)) -> (= 'a0 z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat z 'a0))  -> ('a3 : (= nat 'a0 'a0)) -> (= nat 'a0 z)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= z 'a0)) -> ('a3 : (= 'a0 'a0)) -> (= 'a0 z)] {",
            "intro x : nat.",
            "intro x0 : (= z x).",
            "intro x1 : (= z x).",
            "show (= x z) by eq_symm.",
            "intro _ : [('a3 : (= x x)) -> (= x z)].",
            "}"
        ],
        "logprob": -7.489191500935697,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "c eq_symm",
            "=> (= x z).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat z 'a0)) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (+ z (+ z z)) (s (s (+ z z)))) z))) -> (= (+ z (s (+ z z))) (s (+ z (+ z z))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (+ z (+ z z)) (s (s (+ z z)))) z))) -> (= nat (+ z (s (+ z z))) (s (+ z (+ z z))))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (+ z (+ z z)) (s (s (+ z z)))) z))) -> (= (+ z (s (+ z z))) (s (+ z (+ z z))))] {",
            "intro x : nat.",
            "intro x0 : (= x (+ (+ (+ z (+ z z)) (s (s (+ z z)))) z)).",
            "show (= (+ z (s (+ z z))) (s (+ z (+ z z)))) by +_s.",
            "}"
        ],
        "logprob": -5.551610923428077,
        "actions": [
            "intro.",
            "intro.",
            "c +_s",
            "=> (= (+ z (s (+ z z))) (s (+ z (+ z z))))."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= (s z) (s z))) -> ('a1 : (= z (+ (+ z z) (s z)))) -> ('a2 : (= (+ (+ z z) (+ (s z) z)) (+ (s (+ z z)) z))) -> (= z (+ (+ z z) (s z)))]",
        "problem_raw": "[ ('a0 :(= nat (s z) (s z)) ) -> ('a1 : (= nat z (+ (+ z z) (s z)))) -> ('a2 : (= nat (+ (+ z z) (+ (s z) z)) (+ (s (+ z z)) z))) -> (= nat z (+ (+ z z) (s z)))]",
        "proof": [
            "theorem t : [('a0 : (= (s z) (s z))) -> ('a1 : (= z (+ (+ z z) (s z)))) -> ('a2 : (= (+ (+ z z) (+ (s z) z)) (+ (s (+ z z)) z))) -> (= z (+ (+ z z) (s z)))] {",
            "intro x : (= (s z) (s z)).",
            "intro x0 : (= z (+ (+ z z) (s z))).",
            "intro _ : [('a2 : (= (+ (+ z z) (+ (s z) z)) (+ (s (+ z z)) z))) -> (= z (+ (+ z z) (s z)))].",
            "}"
        ],
        "logprob": -4.380776760966624,
        "actions": [
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (s z) (s z)) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> (= (+ 'a0 'a0) (s 'a0))]",
        "problem_raw": "[('a0 : nat) -> (= nat (+ 'a0 'a0) (s 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= z 'a0)) -> ('a3 : (= 'a0 'a0)) -> (= 'a0 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> (= nat 'a0 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= z 'a0)) -> ('a3 : (= 'a0 'a0)) -> (= 'a0 'a0)] {",
            "intro x : nat.",
            "intro x0 : (= x x).",
            "intro x1 : (= z x).",
            "intro _ : [('a3 : (= x x)) -> (= x x)].",
            "}"
        ],
        "logprob": -6.091402623474274,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= (+ (+ z 'a0) 'a0) z)) -> (= z (+ z 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat (+ (+ z 'a0) 'a0) z)) -> (= nat z (+ z 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ (+ z (+ (+ z (+ z z)) (s z))) z))) -> ('a2 : nat) -> ('a3 : (= (+ 'a2 (+ z z)) z)) -> (= z (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z (+ (+ z (+ (+ z (+ z z)) (s z))) z))) -> ('a2 : nat) -> ('a3 : (= nat (+ 'a2 (+ z z)) z)) -> (= nat z (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= (+ (+ z 'a0) 'a0) 'a0)) -> (= (+ (+ 'a0 'a0) 'a0) (+ 'a0 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> (= nat (+ (+ 'a0 'a0) 'a0) (+ 'a0 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= (+ z 'a0) (+ 'a0 z))) -> ('a3 : (= (+ z 'a0) z)) -> (= (+ (+ z 'a0) z) (+ 'a0 z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat (+ z 'a0) (+ 'a0 z))) -> ('a3 : (= nat (+ z 'a0) z)) -> (= nat (+ (+ z 'a0) z) (+ 'a0 z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 (s (+ (s z) (s z)))) 'a0))) -> (= (+ 'a0 (s z)) (s (+ (+ (s (+ (s z) (s z))) z) z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 (s (+ (s z) (s z)))) 'a0))) -> (= nat (+ 'a0 (s z)) (s (+ (+ (s (+ (s z) (s z))) z) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= (+ (+ z z) (+ (+ z z) z)) z)) -> (= (+ z (+ z z)) (+ z (+ z z)))]",
        "problem_raw": "[('a0 : (= nat (+ (+ z z) (+ (+ z z) z)) z)) -> (= nat (+ z (+ z z)) (+ z (+ z z)))]",
        "proof": [
            "theorem t : [('a0 : (= (+ (+ z z) (+ (+ z z) z)) z)) -> (= (+ z (+ z z)) (+ z (+ z z)))] {",
            "intro x : (= (+ (+ z z) (+ (+ z z) z)) z).",
            "apply c0115.",
            "}"
        ],
        "logprob": -4.0540874061618615,
        "actions": [
            "intro.",
            "a c0115",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 (s (+ (+ z (s z)) (s z)))) z))) -> (= (+ (+ 'a0 (s z)) 'a0) (+ (+ (s (+ (s (+ (s z) (s z))) (s z))) z) z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 (s (+ (+ z (s z)) (s z)))) z))) -> (= nat (+ (+ 'a0 (s z)) 'a0) (+ (+ (s (+ (s (+ (s z) (s z))) (s z))) z) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= (+ z z) (+ z z))) -> ('a1 : nat) -> ('a2 : (= z (+ (+ z (+ z (+ z (s z)))) (+ z z)))) -> ('a3 : nat) -> (= (+ z (+ z z)) (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) (+ z z)) ) -> ('a1 : nat) -> ('a2 : (= nat z (+ (+ z (+ z (+ z (s z)))) (+ z z)))) -> ('a3 : nat) -> (= nat (+ z (+ z z)) (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) (+ z z)) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ z (s (+ (+ z z) (s z)))) z))) -> (= (+ z (s (+ z z))) (s (+ z (+ z (s z)))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ z (s (+ (+ z z) (s z)))) z))) -> (= nat (+ z (s (+ z z))) (s (+ z (+ z (s z)))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= (+ z (s z)) (+ z (s z)))) -> ('a1 : (= (+ z (s z)) (+ (s z) (+ (s z) z)))) -> (= (s z) (+ (s z) z))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (s z)) (+ z (s z))) ) -> ('a1 : (= nat (+ z (s z)) (+ (s z) (+ (s z) z)))) -> (= nat (s z) (+ (s z) z))]",
        "proof": [
            "theorem t : [('a0 : (= (+ z (s z)) (+ z (s z)))) -> ('a1 : (= (+ z (s z)) (+ (s z) (+ (s z) z)))) -> (= (s z) (+ (s z) z))] {",
            "intro x : (= (+ z (s z)) (+ z (s z))).",
            "intro x0 : (= (+ z (s z)) (+ (s z) (+ (s z) z))).",
            "show (= (+ (s z) z) (s z)) by +_z.",
            "show (= (s z) (+ (s z) z)) by eq_symm.",
            "}"
        ],
        "logprob": -7.296995361308088,
        "actions": [
            "intro.",
            "intro.",
            "c +_z",
            "=> (= (+ (s z) z) (s z)).",
            "c eq_symm",
            "=> (= (s z) (+ (s z) z))."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (s z)) (+ z (s z))) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= z (+ 'a0 'a0))) -> (= z (+ (+ (+ z 'a0) 'a0) (+ 'a0 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z (+ 'a0 'a0))) -> (= nat z (+ (+ (+ z 'a0) 'a0) (+ 'a0 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (+ z (+ z z)) (+ (+ z (+ z z)) z))) -> (= (+ (+ z (+ z (+ z z))) (+ (+ z (+ z z)) z)) z)]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (+ z (+ z z)) (+ (+ z (+ z z)) z))) -> (= nat (+ (+ z (+ z (+ z z))) (+ (+ z (+ z z)) z)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> (= (+ 'a0 (+ 'a0 'a0)) (s 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> (= nat (+ 'a0 (+ 'a0 'a0)) (s 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= z (+ (+ (+ z 'a0) 'a0) 'a0))) -> (= (+ (+ 'a0 'a0) z) (+ z (+ z 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat z (+ (+ (+ z 'a0) 'a0) 'a0))) -> (= nat (+ (+ 'a0 'a0) z) (+ z (+ z 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= (+ (+ z z) z) (+ z z))) -> ('a1 : (= (+ z (+ z z)) (+ z z))) -> (= (+ (+ z (+ z z)) (+ z z)) z)]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z z) z) (+ z z)) ) -> ('a1 : (= nat (+ z (+ z z)) (+ z z))) -> (= nat (+ (+ z (+ z z)) (+ z z)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z z) z) (+ z z)) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z (+ (+ z (+ (+ (+ z z) z) (+ z z))) z))) -> (= z (+ (+ z (+ (+ z (+ z (+ (+ z z) (+ z z)))) z)) z))]",
        "problem_raw": "[ ('a0 :(= nat z (+ (+ z (+ (+ (+ z z) z) (+ z z))) z)) ) -> (= nat z (+ (+ z (+ (+ z (+ z (+ (+ z z) (+ z z)))) z)) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ (+ z (+ (+ (+ z z) z) (+ z z))) z)) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> (= (+ 'a0 (+ 'a0 (+ (s z) z))) 'a0)]",
        "problem_raw": "[('a0 : nat) -> (= nat (+ 'a0 (+ 'a0 (+ (s z) z))) 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= (+ (+ 'a0 'a0) 'a0) 'a0)) -> (= (+ (+ 'a0 'a0) (+ 'a0 'a0)) 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat (+ (+ 'a0 'a0) 'a0) 'a0)) -> (= nat (+ (+ 'a0 'a0) (+ 'a0 'a0)) 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= (+ (+ 'a0 'a0) 'a0) 'a0)) -> (= (+ 'a0 (+ 'a0 'a0)) 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat (+ (+ 'a0 'a0) 'a0) 'a0)) -> (= nat (+ 'a0 (+ 'a0 'a0)) 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ (+ z (+ z z)) (+ (s (+ z z)) z)))) -> (= (+ (+ (+ (+ z (+ z z)) (+ (s (+ z z)) z)) z) z) z)]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z (+ (+ z (+ z z)) (+ (s (+ z z)) z)))) -> (= nat (+ (+ (+ (+ z (+ z z)) (+ (s (+ z z)) z)) z) z) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= 'a0 z)) -> ('a3 : (= 'a0 z)) -> (= z 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat 'a0 z)) -> ('a3 : (= nat 'a0 z)) -> (= nat z 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : nat) -> ('a2 : (= 'a0 z)) -> ('a3 : (= 'a0 z)) -> (= z 'a0)] {",
            "intro x : nat.",
            "intro x0 : nat.",
            "intro x1 : (= x z).",
            "show (= z x) by eq_symm.",
            "intro _ : [('a3 : (= x z)) -> (= z x)].",
            "}"
        ],
        "logprob": -7.515824176912842,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "c eq_symm",
            "=> (= z x).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= 'a0 'a0)) -> (= (+ (+ 'a0 'a0) 'a0) (+ z 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat 'a0 'a0))  -> (= nat (+ (+ 'a0 'a0) 'a0) (+ z 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z z)) -> (= (+ (+ z (+ z (+ z z))) (+ z (+ z z))) (+ z (+ (+ z (+ z z)) (s z))))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> (= nat (+ (+ z (+ z (+ z z))) (+ z (+ z z))) (+ z (+ (+ z (+ z z)) (s z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= (s (+ z z)) (s z))) -> ('a1 : (= z (+ (+ z z) z))) -> ('a2 : nat) -> ('a3 : (= z (+ z z))) -> (= z (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat (s (+ z z)) (s z)) ) -> ('a1 : (= nat z (+ (+ z z) z))) -> ('a2 : nat) -> ('a3 : (= nat z (+ z z))) -> (= nat z (+ z z))]",
        "proof": [
            "theorem t : [('a0 : (= (s (+ z z)) (s z))) -> ('a1 : (= z (+ (+ z z) z))) -> ('a2 : nat) -> ('a3 : (= z (+ z z))) -> (= z (+ z z))] {",
            "intro x : (= (s (+ z z)) (s z)).",
            "intro x0 : (= z (+ (+ z z) z)).",
            "intro x1 : nat.",
            "intro _ : [('a3 : (= z (+ z z))) -> (= z (+ z z))].",
            "}"
        ],
        "logprob": -6.75728848613069,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (s (+ z z)) (s z)) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ (+ z (+ z z)) (s z)))) -> (= (+ (+ z (+ z z)) z) z)]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z (+ (+ z (+ z z)) (s z)))) -> (= nat (+ (+ z (+ z z)) z) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= 'a0 (+ (+ (+ z 'a0) 'a0) 'a0))) -> (= (+ z (+ (+ z 'a0) 'a0)) (+ z (+ z 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 (+ (+ (+ z 'a0) 'a0) 'a0))) -> (= nat (+ z (+ (+ z 'a0) 'a0)) (+ z (+ z 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (+ z z) (+ (+ z (+ (+ z z) z)) (+ z z)))) -> (= (+ z (+ z (+ z z))) z)]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (+ z z) (+ (+ z (+ (+ z z) z)) (+ z z)))) -> (= nat (+ z (+ z (+ z z))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 z)) -> ('a3 : (= z (+ 'a0 'a0))) -> (= z (+ 'a0 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 z)) -> ('a3 : (= nat z (+ 'a0 'a0))) -> (= nat z (+ 'a0 'a0))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 z)) -> ('a3 : (= z (+ 'a0 'a0))) -> (= z (+ 'a0 'a0))] {",
            "intro x : nat.",
            "intro x0 : (= x x).",
            "intro x1 : (= x z).",
            "intro _ : [('a3 : (= z (+ x x))) -> (= z (+ x x))].",
            "}"
        ],
        "logprob": -6.497548147503879,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (+ z (+ z z)) (s (+ z z)))) -> ('a2 : nat) -> ('a3 : (= (+ z z) z)) -> ('a4 : (= (s (+ z (+ z z))) z)) -> (= (s (+ z z)) (s z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (+ z (+ z z)) (s (+ z z)))) -> ('a2 : nat) -> ('a3 : (= nat (+ z z) z)) -> ('a4 : (= nat (s (+ z (+ z z))) z)) -> (= nat (s (+ z z)) (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ z z))) -> ('a2 : (= z (+ (s z) z))) -> (= (s (+ z (s z))) (s (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z (+ z z))) -> ('a2 : (= nat z (+ (s z) z))) -> (= nat (s (+ z (s z))) (s (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= (+ z (s z)) (+ z (s z)))) -> (= (+ (+ (+ (+ z z) z) (s z)) z) (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (s z)) (+ z (s z))) ) -> (= nat (+ (+ (+ (+ z z) z) (s z)) z) (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (s z)) (+ z (s z))) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z (+ (+ z z) z))) -> ('a1 : nat) -> (= (+ 'a1 (+ z z)) (+ 'a1 (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z (+ (+ z z) z)) ) -> ('a1 : nat) -> (= nat (+ 'a1 (+ z z)) (+ 'a1 (+ z z)))]",
        "proof": [
            "theorem t : [('a0 : (= z (+ (+ z z) z))) -> ('a1 : nat) -> (= (+ 'a1 (+ z z)) (+ 'a1 (+ z z)))] {",
            "intro x : (= z (+ (+ z z) z)).",
            "intro x0 : nat.",
            "apply c0014.",
            "}"
        ],
        "logprob": -6.0408589553777645,
        "actions": [
            "intro.",
            "intro.",
            "a c0014",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ (+ z z) z)) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= z (+ 'a0 'a0))) -> ('a3 : (= 'a0 (+ 'a0 'a0))) -> (= (+ (+ z 'a0) z) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat z (+ 'a0 'a0))) -> ('a3 : (= nat 'a0 (+ 'a0 'a0))) -> (= nat (+ (+ z 'a0) z) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= (+ z (+ z z)) (+ z (+ z z)))) -> (= z (+ (+ z (+ z z)) z))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (+ z z)) (+ z (+ z z))) ) -> (= nat z (+ (+ z (+ z z)) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (+ z z)) (+ z (+ z z))) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ (s (+ (s z) (+ z z))) z))) -> (= (+ (s z) (+ (s z) (+ z z))) z)]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z (+ (s (+ (s z) (+ z z))) z))) -> (= nat (+ (s z) (+ (s z) (+ z z))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (+ z (+ z (+ z z))) (+ z (+ z z)))) -> (= z (+ z (+ z (+ z (+ z z)))))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (+ z (+ z (+ z z))) (+ z (+ z z)))) -> (= nat z (+ z (+ z (+ z (+ z z)))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> (= (+ 'a0 (+ (+ 'a0 'a0) 'a0)) 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> (= nat (+ 'a0 (+ (+ 'a0 'a0) 'a0)) 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ z (+ z z)))) -> ('a2 : (= z (+ z (+ z z)))) -> (= (+ z (+ z z)) (s z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z (+ z (+ z z)))) -> ('a2 : (= nat z (+ z (+ z z)))) -> (= nat (+ z (+ z z)) (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z (+ (+ z z) z))) -> ('a1 : (= (+ z (+ z z)) z)) -> ('a2 : (= z z)) -> ('a3 : (= z (+ z z))) -> (= z (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat z (+ (+ z z) z)) ) -> ('a1 : (= nat (+ z (+ z z)) z)) -> ('a2 : (= nat z z)) -> ('a3 : (= nat z (+ z z))) -> (= nat z (+ z z))]",
        "proof": [
            "theorem t : [('a0 : (= z (+ (+ z z) z))) -> ('a1 : (= (+ z (+ z z)) z)) -> ('a2 : (= z z)) -> ('a3 : (= z (+ z z))) -> (= z (+ z z))] {",
            "intro x : (= z (+ (+ z z) z)).",
            "intro x0 : (= (+ z (+ z z)) z).",
            "intro x1 : (= z z).",
            "intro _ : [('a3 : (= z (+ z z))) -> (= z (+ z z))].",
            "}"
        ],
        "logprob": -7.231671316873925,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ (+ z z) z)) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (+ z 'a0) (+ (s (+ z z)) z)) z))) -> (= 'a0 (s (+ (+ (s (+ z z)) z) z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (+ z 'a0) (+ (s (+ z z)) z)) z))) -> (= nat 'a0 (s (+ (+ (s (+ z z)) z) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 'a0)) -> (= (+ (+ 'a0 'a0) 'a0) 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> (= nat (+ (+ 'a0 'a0) 'a0) 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (+ z (+ z z)) (+ z z))) -> ('a2 : nat) -> (= z (+ (+ z z) (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (+ z (+ z z)) (+ z z))) -> ('a2 : nat) -> (= nat z (+ (+ z z) (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ z (+ z z)) (+ (s (+ z z)) z)))) -> ('a2 : nat) -> (= z (+ z (+ z (s (+ z (+ z z))))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ z (+ z z)) (+ (s (+ z z)) z)))) -> ('a2 : nat) -> (= nat z (+ z (+ z (s (+ z (+ z z))))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= (+ (+ z 'a0) 'a0) 'a0)) -> (= z (+ (+ 'a0 'a0) 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> (= nat z (+ (+ 'a0 'a0) 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z (+ z z))) -> (= (+ z (+ z z)) (+ z z))]",
        "problem_raw": "[('a0 : (= nat z (+ z z))) -> (= nat (+ z (+ z z)) (+ z z))]",
        "proof": [
            "theorem t : [('a0 : (= z (+ z z))) -> (= (+ z (+ z z)) (+ z z))] {",
            "intro x : (= z (+ z z)).",
            "show (= (+ z z) (+ z z)) by c0044.",
            "show (= (+ z (+ z z)) (+ z z)) by rewrite.",
            "}"
        ],
        "logprob": -6.25647167045722,
        "actions": [
            "intro.",
            "c c0044",
            "=> (= (+ z z) (+ z z)).",
            "c rewrite",
            "=> (= (+ z (+ z z)) (+ z z))."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= z (+ 'a0 'a0))) -> ('a3 : (= z (+ 'a0 'a0))) -> ('a4 : (= (+ 'a0 'a0) (+ 'a0 'a0))) -> (= (+ 'a0 (+ 'a0 'a0)) (+ 'a0 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat z (+ 'a0 'a0))) -> ('a3 : (= nat z (+ 'a0 'a0))) -> ('a4 : (= nat (+ 'a0 'a0) (+ 'a0 'a0))) -> (= nat (+ 'a0 (+ 'a0 'a0)) (+ 'a0 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= (+ z (+ z (+ z z))) z)) -> (= z (+ z (+ (+ (+ z z) z) z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (+ z (+ z z))) z) ) -> (= nat z (+ z (+ (+ (+ z z) z) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (+ z (+ z z))) z) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= (+ (+ z z) z) (+ (+ z z) z))) -> ('a1 : nat) -> ('a2 : (= (+ z (+ z z)) z)) -> ('a3 : nat) -> (= z (+ z 'a1))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z z) z) (+ (+ z z) z)) ) -> ('a1 : nat) -> ('a2 : (= nat (+ z (+ z z)) z)) -> ('a3 : nat) -> (= nat z (+ z 'a1))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z z) z) (+ (+ z z) z)) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= z z)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= 'a0 'a0)) -> (= z (+ 'a0 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat z z)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 'a0)) -> (= nat z (+ 'a0 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z z)) -> ('a1 : nat) -> ('a2 : (= z z)) -> ('a3 : (= 'a1 'a1)) -> (= z (+ 'a1 'a1))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : nat) -> ('a2 : (= nat z z)) -> ('a3 : (= nat 'a1 'a1)) -> (= nat z (+ 'a1 'a1))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> (= z (+ 'a0 (+ 'a0 (s (+ (+ (+ z z) z) (s z))))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> (= nat z (+ 'a0 (+ 'a0 (s (+ (+ (+ z z) z) (s z))))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ (+ z (+ z z)) (s z)))) -> ('a2 : nat) -> (= z (+ (+ z (+ z z)) (s 'a2)))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z (+ (+ z (+ z z)) (s z)))) -> ('a2 : nat) -> (= nat z (+ (+ z (+ z z)) (s 'a2)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= (+ z (+ z z)) (+ z z))) -> (= 'a0 (+ z (+ z z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat (+ z (+ z z)) (+ z z))) -> (= nat 'a0 (+ z (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (+ z (+ (+ z z) z)) z)) -> ('a2 : nat) -> ('a3 : nat) -> ('a4 : (= (+ 'a2 (+ z z)) z)) -> (= z z)]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (+ z (+ (+ z z) z)) z)) -> ('a2 : nat) -> ('a3 : nat) -> ('a4 : (= nat (+ 'a2 (+ z z)) z)) -> (= nat z z)]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> ('a1 : (= (+ z (+ (+ z z) z)) z)) -> ('a2 : nat) -> ('a3 : nat) -> ('a4 : (= (+ 'a2 (+ z z)) z)) -> (= z z)] {",
            "intro x : (= z z).",
            "intro x0 : (= (+ z (+ (+ z z) z)) z).",
            "intro x1 : nat.",
            "intro x2 : nat.",
            "intro _ : [('a4 : (= (+ x1 (+ z z)) z)) -> (= z z)].",
            "}"
        ],
        "logprob": -7.92735808016238,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ (+ z z) z))) -> ('a2 : (= z (+ z (+ z (+ (s (+ z z)) z))))) -> (= (+ (+ z (+ (s (+ z z)) z)) (+ z (+ z z))) z)]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z (+ (+ z z) z))) -> ('a2 : (= nat z (+ z (+ z (+ (s (+ z z)) z))))) -> (= nat (+ (+ z (+ (s (+ z z)) z)) (+ z (+ z z))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (+ (s (+ (s z) (+ z z))) z) z)) -> (= z (+ z (+ z (+ (s (+ (s z) (+ z z))) z))))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (+ (s (+ (s z) (+ z z))) z) z)) -> (= nat z (+ z (+ z (+ (s (+ (s z) (+ z z))) z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 z) (+ z 'a0)))) -> (= (+ (+ 'a0 z) (+ z z)) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 z) (+ z 'a0)))) -> (= nat (+ (+ 'a0 z) (+ z z)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 (+ z (+ (+ z z) z))) z))) -> ('a2 : nat) -> ('a3 : (= (+ 'a0 (+ z z)) z)) -> (= z (+ (+ z z) (+ z z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 (+ z (+ (+ z z) z))) z))) -> ('a2 : nat) -> ('a3 : (= nat (+ 'a0 (+ z z)) z)) -> (= nat z (+ (+ z z) (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 (+ (+ z 'a0) 'a0))) -> (= (+ 'a0 (s 'a0)) (+ 'a0 (s 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 (+ (+ z 'a0) 'a0))) -> (= nat (+ 'a0 (s 'a0)) (+ 'a0 (s 'a0)))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 (+ (+ z 'a0) 'a0))) -> (= (+ 'a0 (s 'a0)) (+ 'a0 (s 'a0)))] {",
            "intro x : nat.",
            "intro x0 : (= x x).",
            "intro x1 : (= x (+ (+ z x) x)).",
            "apply c0014.",
            "}"
        ],
        "logprob": -7.039470628660434,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "a c0014",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= (+ (+ 'a0 'a0) (s 'a0)) 'a0)) -> (= (+ (+ 'a0 'a0) (s 'a0)) (+ (+ 'a0 'a0) (s 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat (+ (+ 'a0 'a0) (s 'a0)) 'a0)) -> (= nat (+ (+ 'a0 'a0) (s 'a0)) (+ (+ 'a0 'a0) (s 'a0)))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= (+ (+ 'a0 'a0) (s 'a0)) 'a0)) -> (= (+ (+ 'a0 'a0) (s 'a0)) (+ (+ 'a0 'a0) (s 'a0)))] {",
            "intro x : nat.",
            "intro x0 : (= x x).",
            "intro x1 : (= (+ (+ x x) (s x)) x).",
            "apply c0014.",
            "}"
        ],
        "logprob": -6.94985291682215,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "a c0014",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= (+ (+ z (s z)) z) (+ z (s z)))) -> (= (+ (+ z (s z)) (+ z z)) (s z))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z (s z)) z) (+ z (s z))) ) -> (= nat (+ (+ z (s z)) (+ z z)) (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z (s z)) z) (+ z (s z))) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (+ z z) (+ (s (+ z z)) z))) -> (= (+ z z) (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (+ z z) (+ (s (+ z z)) z))) -> (= nat (+ z z) (+ z (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= z (+ 'a0 'a0))) -> ('a4 : (= (+ 'a0 'a0) 'a0)) -> (= z (+ 'a0 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat z (+ 'a0 'a0))) -> ('a4 : (= nat (+ 'a0 'a0) 'a0)) -> (= nat z (+ 'a0 'a0))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= z (+ 'a0 'a0))) -> ('a4 : (= (+ 'a0 'a0) 'a0)) -> (= z (+ 'a0 'a0))] {",
            "intro x : nat.",
            "intro x0 : (= x x).",
            "intro x1 : (= x x).",
            "intro x2 : (= z (+ x x)).",
            "intro _ : [('a4 : (= (+ x x) x)) -> (= z (+ x x))].",
            "}"
        ],
        "logprob": -7.891891508681082,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> (= (+ z (+ 'a0 (+ z (s z)))) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> (= nat (+ z (+ 'a0 (+ z (s z)))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= (+ (+ (+ (+ z z) z) z) z) (+ (+ (+ z z) z) z))) -> ('a1 : nat) -> ('a2 : (= z (+ (+ z z) 'a1))) -> (= z (+ (+ z (+ z z)) z))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ (+ (+ z z) z) z) z) (+ (+ (+ z z) z) z)) ) -> ('a1 : nat) -> ('a2 : (= nat z (+ (+ z z) 'a1))) -> (= nat z (+ (+ z (+ z z)) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ (+ (+ z z) z) z) z) (+ (+ (+ z z) z) z)) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z (+ (+ z z) z))) -> (= (+ (+ z z) z) (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat z (+ (+ z z) z)) ) -> (= nat (+ (+ z z) z) (+ z z))]",
        "proof": [
            "theorem t : [('a0 : (= z (+ (+ z z) z))) -> (= (+ (+ z z) z) (+ z z))] {",
            "intro x : (= z (+ (+ z z) z)).",
            "show (= (+ (+ z z) z) (+ z z)) by +_z.",
            "}"
        ],
        "logprob": -4.4103566460578305,
        "actions": [
            "intro.",
            "c +_z",
            "=> (= (+ (+ z z) z) (+ z z))."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ (+ z z) z)) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= z (+ (+ 'a0 'a0) (s z)))) -> ('a3 : (= z (+ z z))) -> (= (+ z (+ z (+ (+ z 'a0) (s z)))) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat z (+ (+ 'a0 'a0) (s z)))) -> ('a3 : (= nat z (+ z z))) -> (= nat (+ z (+ z (+ (+ z 'a0) (s z)))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 'a0)) -> (= z z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> (= nat z z)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 'a0)) -> (= z z)] {",
            "intro x : nat.",
            "intro x0 : (= x x).",
            "intro x1 : (= x x).",
            "show (= z z) by c0126.",
            "intro _ : [('a3 : (= x x)) -> (= z z)].",
            "}"
        ],
        "logprob": -7.472554347090314,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "c c0126",
            "=> (= z z).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= z (+ (+ 'a0 'a0) 'a0))) -> ('a3 : (= (+ 'a0 'a0) (+ 'a0 'a0))) -> (= z (+ (+ 'a0 'a0) (+ 'a0 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat z (+ (+ 'a0 'a0) 'a0))) -> ('a3 : (= nat (+ 'a0 'a0) (+ 'a0 'a0))) -> (= nat z (+ (+ 'a0 'a0) (+ 'a0 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= (+ (+ 'a0 'a0) (s 'a0)) 'a0)) -> (= (+ (+ 'a0 'a0) (s 'a0)) (s 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat (+ (+ 'a0 'a0) (s 'a0)) 'a0)) -> (= nat (+ (+ 'a0 'a0) (s 'a0)) (s 'a0))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= (+ (+ 'a0 'a0) (s 'a0)) 'a0)) -> (= (+ (+ 'a0 'a0) (s 'a0)) (s 'a0))] {",
            "intro x : nat.",
            "intro x0 : (= x (s x)).",
            "intro x1 : (= (+ (+ x x) (s x)) x).",
            "show (= (+ (+ x x) (s x)) (s x)) by rewrite.",
            "}"
        ],
        "logprob": -8.345718041223794,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "c rewrite",
            "=> (= (+ (+ x x) (s x)) (s x))."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= z (+ 'a0 (+ (+ z z) z)))) -> (= (+ z (s z)) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat z (+ 'a0 (+ (+ z z) z)))) -> (= nat (+ z (s z)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= (+ (+ z 'a0) 'a0) 'a0)) -> (= (+ 'a0 'a0) (+ 'a0 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> (= nat (+ 'a0 'a0) (+ 'a0 'a0))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= (+ (+ z 'a0) 'a0) 'a0)) -> (= (+ 'a0 'a0) (+ 'a0 'a0))] {",
            "intro x : nat.",
            "intro x0 : (= x x).",
            "intro x1 : (= x x).",
            "intro x2 : (= (+ (+ z x) x) x).",
            "apply c0014.",
            "}"
        ],
        "logprob": -8.681486034396354,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "a c0014",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= z (+ 'a0 'a0))) -> ('a3 : (= (+ 'a0 'a0) 'a0)) -> (= (+ (+ 'a0 'a0) 'a0) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat z (+ 'a0 'a0))) -> ('a3 : (= nat (+ 'a0 'a0) 'a0)) -> (= nat (+ (+ 'a0 'a0) 'a0) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= (+ (+ z z) z) (+ z z))) -> ('a1 : (= z (+ z z))) -> (= z (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z z) z) (+ z z)) ) -> ('a1 : (= nat z (+ z z))) -> (= nat z (+ z (+ z z)))]",
        "proof": [
            "theorem t : [('a0 : (= (+ (+ z z) z) (+ z z))) -> ('a1 : (= z (+ z z))) -> (= z (+ z (+ z z)))] {",
            "intro x : (= (+ (+ z z) z) (+ z z)).",
            "intro x0 : (= z (+ z z)).",
            "show (= z (+ z (+ z z))) by rewrite.",
            "}"
        ],
        "logprob": -7.5166100390388495,
        "actions": [
            "intro.",
            "intro.",
            "c rewrite",
            "=> (= z (+ z (+ z z)))."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z z) z) (+ z z)) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (+ z (+ z z)) (+ (+ z z) z))) -> (= (+ z (+ z z)) (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (+ z (+ z z)) (+ (+ z z) z))) -> (= nat (+ z (+ z z)) (+ z (+ z z)))]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> ('a1 : (= (+ z (+ z z)) (+ (+ z z) z))) -> (= (+ z (+ z z)) (+ z (+ z z)))] {",
            "intro x : (= z z).",
            "intro x0 : (= (+ z (+ z z)) (+ (+ z z) z)).",
            "apply c0115.",
            "}"
        ],
        "logprob": -5.251063379335717,
        "actions": [
            "intro.",
            "intro.",
            "a c0115",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : nat) -> ('a3 : (= 'a0 'a0)) -> (= 'a0 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : nat) -> ('a3 : (= nat 'a0 'a0)) -> (= nat 'a0 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : nat) -> ('a3 : (= 'a0 'a0)) -> (= 'a0 'a0)] {",
            "intro x : nat.",
            "intro x0 : (= x x).",
            "intro x1 : nat.",
            "intro _ : [('a3 : (= x x)) -> (= x x)].",
            "}"
        ],
        "logprob": -6.1566448013680395,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ (+ z (+ z z)) (+ z z)))) -> (= (+ (+ z (+ z z)) (+ z z)) (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z (+ (+ z (+ z z)) (+ z z)))) -> (= nat (+ (+ z (+ z z)) (+ z z)) (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= z 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= 'a0 'a0)) -> ('a5 : (= z 'a0)) -> (= z (+ 'a0 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 'a0)) -> ('a5 : (= nat z 'a0))  -> (= nat z (+ 'a0 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 'a0)) -> ('a5 : (= nat z 'a0)) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= (+ (+ z z) z) (+ z z))) -> ('a1 : (= z (+ (+ z z) (+ (s (+ z z)) z)))) -> (= z (+ (+ z z) (s z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z z) z) (+ z z)) ) -> ('a1 : (= nat z (+ (+ z z) (+ (s (+ z z)) z)))) -> (= nat z (+ (+ z z) (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z z) z) (+ z z)) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= (+ (+ 'a0 z) z) (+ z z))) -> ('a2 : (= (+ z (+ z z)) z)) -> ('a3 : nat) -> ('a4 : (= (+ z (+ z z)) (+ z z))) -> (= z (+ (+ z z) z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (+ (+ 'a0 z) z) (+ z z))) -> ('a2 : (= nat (+ z (+ z z)) z)) -> ('a3 : nat) -> ('a4 : (= nat (+ z (+ z z)) (+ z z))) -> (= nat z (+ (+ z z) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= (+ z z) z)) -> (= (+ z z) (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) z) ) -> (= nat (+ z z) (+ z (+ z z)))]",
        "proof": [
            "theorem t : [('a0 : (= (+ z z) z)) -> (= (+ z z) (+ z (+ z z)))] {",
            "intro x : (= (+ z z) z).",
            "show (= (+ z (+ z z)) (+ z (+ z z))) by c0115.",
            "show (= (+ z z) (+ z (+ z z))) by rewrite.",
            "}"
        ],
        "logprob": -6.278853736352387,
        "actions": [
            "intro.",
            "c c0115",
            "=> (= (+ z (+ z z)) (+ z (+ z z))).",
            "c rewrite",
            "=> (= (+ z z) (+ z (+ z z)))."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) z) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= z (+ (+ 'a0 'a0) z))) -> (= z (+ z 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat z (+ (+ 'a0 'a0) z))) -> (= nat z (+ z 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= z 'a0)) -> (= z (+ 'a0 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) -> (= nat z (+ 'a0 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> (= (+ 'a0 'a0) (+ 'a0 (+ 'a0 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> (= nat (+ 'a0 'a0) (+ 'a0 (+ 'a0 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= 'a0 (+ (s 'a0) 'a0))) -> (= (+ (s 'a0) (+ 'a0 'a0)) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= nat 'a0 (+ (s 'a0) 'a0))) -> (= nat (+ (s 'a0) (+ 'a0 'a0)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 z)) -> (= (+ (+ z 'a0) (+ z z)) (s (+ z z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 z))  -> (= nat (+ (+ z 'a0) (+ z z)) (s (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 z)) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= (+ (+ z 'a0) 'a0) 'a0)) -> (= (+ (+ (+ 'a0 'a0) 'a0) 'a0) (s 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> (= nat (+ (+ (+ 'a0 'a0) 'a0) 'a0) (s 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= (+ (+ z z) z) (+ (+ z z) z))) -> ('a1 : nat) -> ('a2 : (= z (+ (+ z z) z))) -> ('a3 : (= (+ z z) z)) -> (= (+ (+ z (+ z z)) z) (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z z) z) (+ (+ z z) z)) ) -> ('a1 : nat) -> ('a2 : (= nat z (+ (+ z z) z))) -> ('a3 : (= nat (+ z z) z)) -> (= nat (+ (+ z (+ z z)) z) (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z z) z) (+ (+ z z) z)) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= (+ z (s z)) (+ z (s z)))) -> ('a1 : (= z (+ (+ z z) (s z)))) -> (= (+ (+ z z) (s z)) (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (s z)) (+ z (s z))) ) -> ('a1 : (= nat z (+ (+ z z) (s z)))) -> (= nat (+ (+ z z) (s z)) (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (s z)) (+ z (s z))) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z (+ z (+ z z)))) -> (= (+ z (+ z z)) (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat z (+ z (+ z z))) ) -> (= nat (+ z (+ z z)) (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z (+ z z))) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : nat) -> ('a3 : (= 'a0 'a0)) -> (= z z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : nat) -> ('a3 : (= nat 'a0 'a0)) -> (= nat z z)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : nat) -> ('a3 : (= 'a0 'a0)) -> (= z z)] {",
            "intro x : nat.",
            "intro x0 : (= x x).",
            "intro x1 : nat.",
            "show (= z z) by c0126.",
            "intro _ : [('a3 : (= x x)) -> (= z z)].",
            "}"
        ],
        "logprob": -7.620134738212184,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "c c0126",
            "=> (= z z).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z (+ (+ (+ z z) z) (+ z z)))) -> ('a1 : (= (+ (s (+ z (+ z z))) (+ (s (+ z (+ z z))) z)) z)) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> (= z (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z (+ (+ (+ z z) z) (+ z z))) ) -> ('a1 : (= nat (+ (s (+ z (+ z z))) (+ (s (+ z (+ z z))) z)) z)) -> ('a2 : nat) -> ('a3 : (= nat z (+ z (+ z z)))) -> (= nat z (+ z (+ z z)))]",
        "proof": [
            "theorem t : [('a0 : (= z (+ (+ (+ z z) z) (+ z z)))) -> ('a1 : (= (+ (s (+ z (+ z z))) (+ (s (+ z (+ z z))) z)) z)) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> (= z (+ z (+ z z)))] {",
            "intro x : (= z (+ (+ (+ z z) z) (+ z z))).",
            "intro x0 : (= (+ (s (+ z (+ z z))) (+ (s (+ z (+ z z))) z)) z).",
            "intro x1 : nat.",
            "intro _ : [('a3 : (= z (+ z (+ z z)))) -> (= z (+ z (+ z z)))].",
            "}"
        ],
        "logprob": -7.288138301187943,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ (+ (+ z z) z) (+ z z))) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : nat) -> ('a4 : (= (+ (+ 'a0 'a0) 'a0) 'a0)) -> (= (+ 'a0 'a0) (+ 'a0 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : nat) -> ('a4 : (= nat (+ (+ 'a0 'a0) 'a0) 'a0)) -> (= nat (+ 'a0 'a0) (+ 'a0 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= 'a1 'a2)) -> (= z z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= nat 'a1 'a2)) -> (= nat z z)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= 'a1 'a2)) -> (= z z)] {",
            "intro x : nat.",
            "intro x0 : nat.",
            "intro x1 : nat.",
            "show (= z z) by c0093.",
            "intro _ : [('a3 : (= x0 x1)) -> (= z z)].",
            "}"
        ],
        "logprob": -7.888366319939772,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "c c0093",
            "=> (= z z).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ (+ z z) (+ z (+ (+ z z) z))))) -> (= z (+ z (+ (+ z z) (+ (+ z z) (+ (+ z z) z)))))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z (+ (+ z z) (+ z (+ (+ z z) z))))) -> (= nat z (+ z (+ (+ z z) (+ (+ z z) (+ (+ z z) z)))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z (+ z (+ z z)))) -> ('a1 : nat) -> ('a2 : (= z (+ (+ z z) (+ z z)))) -> (= (+ (+ (+ z z) z) z) (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat z (+ z (+ z z))) ) -> ('a1 : nat) -> ('a2 : (= nat z (+ (+ z z) (+ z z)))) -> (= nat (+ (+ (+ z z) z) z) (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z (+ z z))) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (+ (+ z (+ z (+ z z))) z) z)) -> (= (+ (+ z (+ (+ z z) z)) (+ (+ z z) z)) (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (+ (+ z (+ z (+ z z))) z) z)) -> (= nat (+ (+ z (+ (+ z z) z)) (+ (+ z z) z)) (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= (+ (+ (+ z z) z) z) (+ z z))) -> ('a1 : nat) -> ('a2 : (= z (+ (+ z z) 'a1))) -> (= (+ z 'a1) (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ (+ z z) z) z) (+ z z)) ) -> ('a1 : nat) -> ('a2 : (= nat z (+ (+ z z) 'a1))) -> (= nat (+ z 'a1) (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ (+ z z) z) z) (+ z z)) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (+ (+ z z) z) z)) -> ('a2 : (= z (+ z z))) -> (= z (+ (+ z z) z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (+ (+ z z) z) z)) -> ('a2 : (= nat z (+ z z))) -> (= nat z (+ (+ z z) z))]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> ('a1 : (= (+ (+ z z) z) z)) -> ('a2 : (= z (+ z z))) -> (= z (+ (+ z z) z))] {",
            "intro x : (= z z).",
            "intro x0 : (= (+ (+ z z) z) z).",
            "show (= z (+ (+ z z) z)) by eq_symm.",
            "intro _ : [('a2 : (= z (+ z z))) -> (= z (+ (+ z z) z))].",
            "}"
        ],
        "logprob": -5.2938604300598,
        "actions": [
            "intro.",
            "intro.",
            "c eq_symm",
            "=> (= z (+ (+ z z) z)).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= 'a0 z)) -> (= (+ z 'a0) (+ z 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat 'a0 z)) -> (= nat (+ z 'a0) (+ z 'a0))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : nat) -> ('a2 : (= 'a0 z)) -> (= (+ z 'a0) (+ z 'a0))] {",
            "intro x : nat.",
            "intro x0 : nat.",
            "intro x1 : (= x z).",
            "apply c0014.",
            "}"
        ],
        "logprob": -7.363335594634842,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "a c0014",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= (+ (+ z (s z)) z) (+ (+ z (s z)) z))) -> (= z (+ (+ z (s z)) (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z (s z)) z) (+ (+ z (s z)) z)) ) -> (= nat z (+ (+ z (s z)) (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z (s z)) z) (+ (+ z (s z)) z)) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= (+ z (+ z z)) (+ z (+ z z)))) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= z (+ z z))) -> (= (+ z (+ z z)) (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (+ z z)) (+ z (+ z z))) ) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= nat z (+ z z))) -> (= nat (+ z (+ z z)) (+ z (+ z z)))]",
        "proof": [
            "theorem t : [('a0 : (= (+ z (+ z z)) (+ z (+ z z)))) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= z (+ z z))) -> (= (+ z (+ z z)) (+ z (+ z z)))] {",
            "intro x : (= (+ z (+ z z)) (+ z (+ z z))).",
            "intro x0 : nat.",
            "intro x1 : nat.",
            "intro _ : [('a3 : (= z (+ z z))) -> (= (+ z (+ z z)) (+ z (+ z z)))].",
            "}"
        ],
        "logprob": -6.53501735509335,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (+ z z)) (+ z (+ z z))) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= (+ z z) z)) -> ('a1 : (= (+ z (+ (+ z z) z)) z)) -> (= z (+ z (+ (+ z z) z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) z) ) -> ('a1 : (= nat (+ z (+ (+ z z) z)) z)) -> (= nat z (+ z (+ (+ z z) z)))]",
        "proof": [
            "theorem t : [('a0 : (= (+ z z) z)) -> ('a1 : (= (+ z (+ (+ z z) z)) z)) -> (= z (+ z (+ (+ z z) z)))] {",
            "intro x : (= (+ z z) z).",
            "intro x0 : (= (+ z (+ (+ z z) z)) z).",
            "show (= z (+ z (+ (+ z z) z))) by eq_symm.",
            "}"
        ],
        "logprob": -6.25419675503674,
        "actions": [
            "intro.",
            "intro.",
            "c eq_symm",
            "=> (= z (+ z (+ (+ z z) z)))."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) z) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 'a0)) -> (= (+ (+ z 'a0) (+ 'a0 'a0)) (s (+ (+ z 'a0) z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> (= nat (+ (+ z 'a0) (+ 'a0 'a0)) (s (+ (+ z 'a0) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= (+ 'a0 (+ (+ 'a0 z) (s z))) 'a0)) -> (= (+ 'a0 (+ z z)) (s (+ z z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (+ 'a0 (+ (+ 'a0 z) (s z))) 'a0)) -> (= nat (+ 'a0 (+ z z)) (s (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z (+ (+ z z) z))) -> ('a1 : (= z (+ (+ (+ z z) (+ z z)) z))) -> ('a2 : nat) -> (= (+ z (+ (+ z z) (+ (+ (+ z z) z) z))) z)]",
        "problem_raw": "[ ('a0 :(= nat z (+ (+ z z) z)) ) -> ('a1 : (= nat z (+ (+ (+ z z) (+ z z)) z))) -> ('a2 : nat) -> (= nat (+ z (+ (+ z z) (+ (+ (+ z z) z) z))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ (+ z z) z)) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= (+ (+ (+ (+ z z) z) z) z) (+ (+ (+ z z) z) z))) -> ('a1 : nat) -> ('a2 : (= z (+ z 'a1))) -> (= (+ (+ (+ z z) (+ z 'a1)) z) (+ 'a1 z))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ (+ (+ z z) z) z) z) (+ (+ (+ z z) z) z)) ) -> ('a1 : nat) -> ('a2 : (= nat z (+ z 'a1))) -> (= nat (+ (+ (+ z z) (+ z 'a1)) z) (+ 'a1 z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ (+ (+ z z) z) z) z) (+ (+ (+ z z) z) z)) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ (+ z (+ z z)) z))) -> ('a2 : nat) -> ('a3 : (= (+ z (+ z z)) z)) -> (= z (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z (+ (+ z (+ z z)) z))) -> ('a2 : nat) -> ('a3 : (= nat (+ z (+ z z)) z)) -> (= nat z (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ (+ (+ z z) z) z))) -> ('a2 : (= z (+ (+ z z) (+ (s (+ z (s z))) z)))) -> (= z (+ (+ z z) (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z (+ (+ (+ z z) z) z))) -> ('a2 : (= nat z (+ (+ z z) (+ (s (+ z (s z))) z)))) -> (= nat z (+ (+ z z) (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z z)) -> ('a1 : nat) -> ('a2 : (= z 'a1)) -> (= (+ 'a1 'a1) (+ 'a1 'a1))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : nat) -> ('a2 : (= nat z 'a1)) -> (= nat (+ 'a1 'a1) (+ 'a1 'a1))]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> ('a1 : nat) -> ('a2 : (= z 'a1)) -> (= (+ 'a1 'a1) (+ 'a1 'a1))] {",
            "intro x : (= z z).",
            "intro x0 : nat.",
            "intro x1 : (= z x0).",
            "apply c0014.",
            "}"
        ],
        "logprob": -7.121718436159205,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "a c0014",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ (+ z z) (+ z (+ (s (+ z (+ (+ z z) (s z)))) z))))) -> (= (+ z (+ z (+ (s (+ z (s (s z)))) z))) z)]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z (+ (+ z z) (+ z (+ (s (+ z (+ (+ z z) (s z)))) z))))) -> (= nat (+ z (+ z (+ (s (+ z (s (s z)))) z))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> (= (+ z z) (+ 'a0 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0))  -> (= nat (+ z z) (+ 'a0 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= (+ z z) z)) -> ('a1 : (= (+ z (+ z z)) (+ z (+ z z)))) -> (= (+ z (+ z (+ z z))) (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) z) ) -> ('a1 : (= nat (+ z (+ z z)) (+ z (+ z z)))) -> (= nat (+ z (+ z (+ z z))) (+ z (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) z) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= (s (+ z z)) (s z))) -> ('a1 : (= z (+ (s (+ z z)) (+ z z)))) -> (= (+ (s z) (+ z z)) z)]",
        "problem_raw": "[ ('a0 :(= nat (s (+ z z)) (s z)) ) -> ('a1 : (= nat z (+ (s (+ z z)) (+ z z)))) -> (= nat (+ (s z) (+ z z)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (s (+ z z)) (s z)) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= z (+ z (+ z z)))) -> ('a3 : (= (+ z (+ z z)) (+ z (+ z z)))) -> (= (+ z (+ z z)) (+ z (+ z z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat z (+ z (+ z z)))) -> ('a3 : (= nat (+ z (+ z z)) (+ z (+ z z)))) -> (= nat (+ z (+ z z)) (+ z (+ z z)))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : nat) -> ('a2 : (= z (+ z (+ z z)))) -> ('a3 : (= (+ z (+ z z)) (+ z (+ z z)))) -> (= (+ z (+ z z)) (+ z (+ z z)))] {",
            "intro x : nat.",
            "intro x0 : nat.",
            "intro x1 : (= z (+ z (+ z z))).",
            "intro _ : [('a3 : (= (+ z (+ z z)) (+ z (+ z z)))) -> (= (+ z (+ z z)) (+ z (+ z z)))].",
            "}"
        ],
        "logprob": -6.486463592339554,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z z)) -> ('a1 : nat) -> ('a2 : (= 'a1 z)) -> ('a3 : (= 'a1 'a1)) -> ('a4 : (= 'a1 'a1)) -> (= 'a1 'a1)]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : nat) -> ('a2 : (= nat 'a1 z)) -> ('a3 : (= nat 'a1 'a1)) -> ('a4 : (= nat 'a1 'a1)) -> (= nat 'a1 'a1)]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> ('a1 : nat) -> ('a2 : (= 'a1 z)) -> ('a3 : (= 'a1 'a1)) -> ('a4 : (= 'a1 'a1)) -> (= 'a1 'a1)] {",
            "intro x : (= z z).",
            "intro x0 : nat.",
            "intro x1 : (= x0 z).",
            "intro x2 : (= x0 x0).",
            "intro _ : [('a4 : (= x0 x0)) -> (= x0 x0)].",
            "}"
        ],
        "logprob": -7.687991789347359,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= (s (+ z z)) (s z))) -> ('a1 : nat) -> ('a2 : (= (s (+ z z)) z)) -> ('a3 : (= (+ (+ z 'a1) z) z)) -> (= z (+ 'a1 z))]",
        "problem_raw": "[ ('a0 :(= nat (s (+ z z)) (s z)) ) -> ('a1 : nat) -> ('a2 : (= nat (s (+ z z)) z)) -> ('a3 : (= nat (+ (+ z 'a1) z) z)) -> (= nat z (+ 'a1 z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (s (+ z z)) (s z)) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= (+ 'a0 (+ 'a0 z)) z)) -> ('a3 : (= (+ (+ z 'a0) (+ z z)) z)) -> (= z (+ z (s z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat (+ 'a0 (+ 'a0 z)) z)) -> ('a3 : (= nat (+ (+ z 'a0) (+ z z)) z)) -> (= nat z (+ z (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (+ z (+ z (s (+ z z)))) z) z))) -> ('a2 : nat) -> (= z (+ 'a0 z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (+ z (+ z (s (+ z z)))) z) z))) -> ('a2 : nat) -> (= nat z (+ 'a0 z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ (+ z (+ z z)) (+ z z)))) -> (= z (+ (+ z (+ (+ z z) (+ z z))) (+ z z)))]",
        "problem_raw": "[('a0 : (= nat z z)) -> ('a1 : (= nat z (+ (+ z (+ z z)) (+ z z)))) -> (= nat z (+ (+ z (+ (+ z z) (+ z z))) (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= (+ 'a0 'a0) (s 'a0))) -> (= (+ (+ 'a0 'a0) (s 'a0)) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= nat (+ 'a0 'a0) (s 'a0))) -> (= nat (+ (+ 'a0 'a0) (s 'a0)) z)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= (+ 'a0 'a0) (s 'a0))) -> (= (+ (+ 'a0 'a0) (s 'a0)) z)] {",
            "intro x : nat.",
            "intro x0 : (= x (s x)).",
            "intro x1 : (= z (+ (+ x x) (s x))).",
            "show (= (+ (+ x x) (s x)) z) by eq_symm.",
            "intro _ : [('a3 : (= (+ x x) (s x))) -> (= (+ (+ x x) (s x)) z)].",
            "}"
        ],
        "logprob": -7.954527153297611,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "c eq_symm",
            "=> (= (+ (+ x x) (s x)) z).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= z 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= 'a0 'a0)) -> ('a5 : (= z 'a0)) -> (= z 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 'a0)) -> ('a5 : (= nat z 'a0))  -> (= nat z 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= z 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= 'a0 'a0)) -> ('a5 : (= z 'a0)) -> (= z 'a0)] {",
            "intro x : nat.",
            "intro x0 : (= x z).",
            "intro x1 : (= z x).",
            "intro x2 : (= x x).",
            "intro x3 : (= x x).",
            "intro _ : [('a5 : (= z x)) -> (= z x)].",
            "}"
        ],
        "logprob": -9.712661813750085,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 'a0)) -> ('a5 : (= nat z 'a0)) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ z (+ (+ z z) (+ z z))))) -> ('a2 : (= (+ (+ z z) z) z)) -> (= (+ (+ z z) (+ (s (+ z z)) z)) (s z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ z (+ (+ z z) (+ z z))))) -> ('a2 : (= nat (+ (+ z z) z) z)) -> (= nat (+ (+ z z) (+ (s (+ z z)) z)) (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= z 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= 'a0 'a0)) -> ('a5 : (= z 'a0)) -> (= 'a0 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 'a0)) -> ('a5 : (= nat z 'a0))  -> (= nat 'a0 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= z 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= 'a0 'a0)) -> ('a5 : (= z 'a0)) -> (= 'a0 'a0)] {",
            "intro x : nat.",
            "intro x0 : (= x z).",
            "intro x1 : (= z x).",
            "intro x2 : (= x x).",
            "intro x3 : (= x x).",
            "intro _ : [('a5 : (= z x)) -> (= x x)].",
            "}"
        ],
        "logprob": -9.920634015980976,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 'a0)) -> ('a5 : (= nat z 'a0)) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= (+ (+ z z) z) z)) -> ('a1 : (= z (+ z (+ z z)))) -> ('a2 : (= z (+ z (+ z z)))) -> (= z (+ z (+ (+ z z) (+ z z))))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z z) z) z) ) -> ('a1 : (= nat z (+ z (+ z z)))) -> ('a2 : (= nat z (+ z (+ z z)))) -> (= nat z (+ z (+ (+ z z) (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z z) z) z) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= (+ z (s z)) (s (+ z z)))) -> ('a1 : (= (s z) (+ z (s z)))) -> ('a2 : (= z (+ (+ z (+ z z)) (s z)))) -> (= z (+ (+ (+ (+ z z) z) (s z)) (s z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (s z)) (s (+ z z))) ) -> ('a1 : (= nat (s z) (+ z (s z)))) -> ('a2 : (= nat z (+ (+ z (+ z z)) (s z)))) -> (= nat z (+ (+ (+ (+ z z) z) (s z)) (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (s z)) (s (+ z z))) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= (+ (+ z z) z) (+ z z))) -> ('a1 : (= (+ z z) (+ (+ z z) z))) -> (= z (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z z) z) (+ z z)) ) -> ('a1 : (= nat (+ z z) (+ (+ z z) z))) -> (= nat z (+ z z))]",
        "proof": [
            "theorem t : [('a0 : (= (+ (+ z z) z) (+ z z))) -> ('a1 : (= (+ z z) (+ (+ z z) z))) -> (= z (+ z z))] {",
            "intro x : (= (+ (+ z z) z) (+ z z)).",
            "show (= (+ z z) z) by +_z.",
            "intro x0 : (= (+ z z) (+ (+ z z) z)).",
            "show (= z (+ z z)) by eq_symm.",
            "}"
        ],
        "logprob": -6.465922272772242,
        "actions": [
            "intro.",
            "c +_z",
            "=> (= (+ z z) z).",
            "intro.",
            "c eq_symm",
            "=> (= z (+ z z))."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z z) z) (+ z z)) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= (+ z z) z)) -> ('a1 : (= z (+ z (+ z z)))) -> ('a2 : (= z (+ z (+ z z)))) -> (= (+ z (+ z (+ z z))) z)]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) z) ) -> ('a1 : (= nat z (+ z (+ z z)))) -> ('a2 : (= nat z (+ z (+ z z)))) -> (= nat (+ z (+ z (+ z z))) z)]",
        "proof": [
            "theorem t : [('a0 : (= (+ z z) z)) -> ('a1 : (= z (+ z (+ z z)))) -> ('a2 : (= z (+ z (+ z z)))) -> (= (+ z (+ z (+ z z))) z)] {",
            "intro x : (= (+ z z) z).",
            "intro x0 : (= z (+ z (+ z z))).",
            "show (= (+ z (+ z (+ z z))) z) by rewrite.",
            "intro _ : [('a2 : (= z (+ z (+ z z)))) -> (= (+ z (+ z (+ z z))) z)].",
            "}"
        ],
        "logprob": -8.396363275720777,
        "actions": [
            "intro.",
            "intro.",
            "c rewrite",
            "=> (= (+ z (+ z (+ z z))) z).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) z) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (+ (+ z z) (s z)) (+ (s (+ z z)) (+ z (s z))))) -> (= z (+ (s (+ z z)) (s z)))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (+ (+ z z) (s z)) (+ (s (+ z z)) (+ z (s z))))) -> (= nat z (+ (s (+ z z)) (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z (+ (+ z z) z))) -> (= (+ z (+ z (+ (+ z z) (+ z z)))) z)]",
        "problem_raw": "[ ('a0 :(= nat z (+ (+ z z) z)) ) -> (= nat (+ z (+ z (+ (+ z z) (+ z z)))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ (+ z z) z)) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z (+ (+ z z) z))) -> ('a1 : (= (+ z z) (+ z z))) -> (= z (+ (s (+ z z)) (s z)))]",
        "problem_raw": "[ ('a0 :(= nat z (+ (+ z z) z)) ) -> ('a1 : (= nat (+ z z) (+ z z))) -> (= nat z (+ (s (+ z z)) (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ (+ z z) z)) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (+ z z) (+ (+ z (+ z z)) (s (+ z z))))) -> (= (+ z (+ z z)) (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (+ z z) (+ (+ z (+ z z)) (s (+ z z))))) -> (= nat (+ z (+ z z)) (+ z (+ z z)))]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> ('a1 : (= (+ z z) (+ (+ z (+ z z)) (s (+ z z))))) -> (= (+ z (+ z z)) (+ z (+ z z)))] {",
            "intro x : (= z z).",
            "show (= (+ z (+ z z)) (+ z (+ z z))) by c0115.",
            "intro _ : [('a1 : (= (+ z z) (+ (+ z (+ z z)) (s (+ z z))))) -> (= (+ z (+ z z)) (+ z (+ z z)))].",
            "}"
        ],
        "logprob": -3.931400088919842,
        "actions": [
            "intro.",
            "c c0115",
            "=> (= (+ z (+ z z)) (+ z (+ z z))).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (+ z (+ z (+ z z))) (+ z (+ z z)))) -> (= (+ z (+ (+ z z) z)) (+ z (+ z (+ z z))))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (+ z (+ z (+ z z))) (+ z (+ z z)))) -> (= nat (+ z (+ (+ z z) z)) (+ z (+ z (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ z 'a0))) -> (= (+ z (+ z 'a0)) (+ (+ 'a0 'a0) z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ z 'a0))) -> (= nat (+ z (+ z 'a0)) (+ (+ 'a0 'a0) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 'a0)) -> (= (+ (+ z 'a0) 'a0) (+ 'a0 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> (= nat (+ (+ z 'a0) 'a0) (+ 'a0 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= (+ z (+ z z)) (+ z (+ z z)))) -> ('a1 : (= (+ (+ z z) (+ z z)) (+ z z))) -> (= (+ (+ z z) z) (+ z (+ z (+ z z))))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (+ z z)) (+ z (+ z z))) ) -> ('a1 : (= nat (+ (+ z z) (+ z z)) (+ z z))) -> (= nat (+ (+ z z) z) (+ z (+ z (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (+ z z)) (+ z (+ z z))) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= (+ (+ z 'a0) 'a0) 'a0)) -> (= (+ (+ z 'a0) 'a0) 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> (= nat (+ (+ z 'a0) 'a0) 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= (+ (+ z 'a0) 'a0) 'a0)) -> (= (+ (+ z 'a0) 'a0) 'a0)] {",
            "intro x : nat.",
            "intro x0 : (= x x).",
            "intro x1 : (= x x).",
            "intro _ : [('a3 : (= (+ (+ z x) x) x)) -> (= (+ (+ z x) x) x)].",
            "}"
        ],
        "logprob": -6.265386953335791,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z z)) -> (= (s (+ (+ z z) (+ (s z) z))) (+ (+ z z) (+ z z)))]",
        "problem_raw": "[('a0 : (= nat z z)) -> (= nat (s (+ (+ z z) (+ (s z) z))) (+ (+ z z) (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= (+ 'a0 'a0) 'a0)) -> ('a3 : (= (+ 'a0 'a0) 'a0)) -> (= (+ 'a0 'a0) 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat (+ 'a0 'a0) 'a0)) -> ('a3 : (= nat (+ 'a0 'a0) 'a0)) -> (= nat (+ 'a0 'a0) 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : nat) -> ('a2 : (= (+ 'a0 'a0) 'a0)) -> ('a3 : (= (+ 'a0 'a0) 'a0)) -> (= (+ 'a0 'a0) 'a0)] {",
            "intro x : nat.",
            "intro x0 : nat.",
            "intro x1 : (= (+ x x) x).",
            "intro _ : [('a3 : (= (+ x x) x)) -> (= (+ x x) x)].",
            "}"
        ],
        "logprob": -6.48786048839081,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= (+ (+ z z) z) z)) -> ('a1 : (= z (+ (+ z z) z))) -> (= (+ (+ (+ z z) z) (+ z z)) (+ (+ (+ z z) z) z))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z z) z) z) ) -> ('a1 : (= nat z (+ (+ z z) z))) -> (= nat (+ (+ (+ z z) z) (+ z z)) (+ (+ (+ z z) z) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z z) z) z) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= (s 'a0) (s 'a0))) -> ('a2 : (= (+ (+ 'a0 'a0) 'a0) (s 'a0))) -> ('a3 : (= (+ 'a0 'a0) (+ 'a0 (s 'a0)))) -> (= (+ 'a0 (s (+ (+ 'a0 'a0) (s 'a0)))) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (s 'a0) (s 'a0)))  -> ('a2 : (= nat (+ (+ 'a0 'a0) 'a0) (s 'a0))) -> ('a3 : (= nat (+ 'a0 'a0) (+ 'a0 (s 'a0)))) -> (= nat (+ 'a0 (s (+ (+ 'a0 'a0) (s 'a0)))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat (s 'a0) (s 'a0))) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z z)) -> ('a1 : nat) -> ('a2 : (= 'a1 (s 'a1))) -> ('a3 : nat) -> (= (+ (+ (+ 'a1 'a1) 'a1) 'a1) (s 'a1))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : nat) -> ('a2 : (= nat 'a1 (s 'a1))) -> ('a3 : nat) -> (= nat (+ (+ (+ 'a1 'a1) 'a1) 'a1) (s 'a1))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ (+ (+ (+ z z) z) z) (+ z z)))) -> ('a2 : nat) -> ('a3 : (= (+ 'a2 z) (+ z z))) -> (= (+ z (+ z z)) (+ (+ (+ (+ z z) z) z) z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z (+ (+ (+ (+ z z) z) z) (+ z z)))) -> ('a2 : nat) -> ('a3 : (= nat (+ 'a2 z) (+ z z))) -> (= nat (+ z (+ z z)) (+ (+ (+ (+ z z) z) z) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z (+ (+ z z) z))) -> ('a1 : (= (+ (+ z (+ z z)) (+ z z)) (+ z z))) -> (= (+ (+ z z) z) (+ z (s z)))]",
        "problem_raw": "[ ('a0 :(= nat z (+ (+ z z) z)) ) -> ('a1 : (= nat (+ (+ z (+ z z)) (+ z z)) (+ z z))) -> (= nat (+ (+ z z) z) (+ z (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ (+ z z) z)) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 z)) -> (= z 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 z))  -> (= nat z 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 z)) -> (= z 'a0)] {",
            "intro x : nat.",
            "intro x0 : (= z x).",
            "intro x1 : (= x x).",
            "intro _ : [('a3 : (= x z)) -> (= z x)].",
            "}"
        ],
        "logprob": -6.220786547003345,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 z)) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 'a0)) -> (= (+ (+ z 'a0) 'a0) (+ (+ z 'a0) 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> (= nat (+ (+ z 'a0) 'a0) (+ (+ z 'a0) 'a0))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 'a0)) -> (= (+ (+ z 'a0) 'a0) (+ (+ z 'a0) 'a0))] {",
            "intro x : nat.",
            "intro x0 : (= x x).",
            "intro x1 : (= x x).",
            "intro x2 : (= x x).",
            "apply c0014.",
            "}"
        ],
        "logprob": -8.500056468780762,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "a c0014",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> (= (+ (+ 'a0 'a0) 'a0) (+ 'a0 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> (= nat (+ (+ 'a0 'a0) 'a0) (+ 'a0 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z (+ z z))) -> ('a1 : (= (+ z (+ z (+ z z))) (+ (+ (+ z z) z) z))) -> (= z (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z (+ z z)) ) -> ('a1 : (= nat (+ z (+ z (+ z z))) (+ (+ (+ z z) z) z))) -> (= nat z (+ z (+ z z)))]",
        "proof": [
            "theorem t : [('a0 : (= z (+ z z))) -> ('a1 : (= (+ z (+ z (+ z z))) (+ (+ (+ z z) z) z))) -> (= z (+ z (+ z z)))] {",
            "intro x : (= z (+ z z)).",
            "show (= z (+ z (+ z z))) by rewrite.",
            "intro _ : [('a1 : (= (+ z (+ z (+ z z))) (+ (+ (+ z z) z) z))) -> (= z (+ z (+ z z)))].",
            "}"
        ],
        "logprob": -5.139874344331406,
        "actions": [
            "intro.",
            "c rewrite",
            "=> (= z (+ z (+ z z))).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z z)) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (+ (+ z (s z)) (s z)) (+ z z))) -> ('a2 : nat) -> ('a3 : (= z (+ (+ z (s z)) (s z)))) -> (= (+ (+ z (s z)) (s z)) z)]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (+ (+ z (s z)) (s z)) (+ z z))) -> ('a2 : nat) -> ('a3 : (= nat z (+ (+ z (s z)) (s z)))) -> (= nat (+ (+ z (s z)) (s z)) z)]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> ('a1 : (= (+ (+ z (s z)) (s z)) (+ z z))) -> ('a2 : nat) -> ('a3 : (= z (+ (+ z (s z)) (s z)))) -> (= (+ (+ z (s z)) (s z)) z)] {",
            "intro x : (= z z).",
            "intro x0 : (= (+ (+ z (s z)) (s z)) (+ z z)).",
            "intro x1 : nat.",
            "intro x2 : (= z (+ (+ z (s z)) (s z))).",
            "show (= (+ (+ z (s z)) (s z)) z) by eq_symm.",
            "}"
        ],
        "logprob": -8.935313982043324,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "c eq_symm",
            "=> (= (+ (+ z (s z)) (s z)) z)."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (+ z (+ z (+ z z))) (+ (+ z (+ z z)) z))) -> (= (+ z (+ z z)) (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (+ z (+ z (+ z z))) (+ (+ z (+ z z)) z))) -> (= nat (+ z (+ z z)) (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= (s (+ z z)) (s (+ z z)))) -> ('a1 : (= z (+ (s z) z))) -> ('a2 : (= z (+ (s z) (+ z (+ z z))))) -> ('a3 : nat) -> (= (+ (s z) (+ z (+ z z))) z)]",
        "problem_raw": "[ ('a0 :(= nat (s (+ z z)) (s (+ z z))) ) -> ('a1 : (= nat z (+ (s z) z))) -> ('a2 : (= nat z (+ (s z) (+ z (+ z z))))) -> ('a3 : nat) -> (= nat (+ (s z) (+ z (+ z z))) z)]",
        "proof": [
            "theorem t : [('a0 : (= (s (+ z z)) (s (+ z z)))) -> ('a1 : (= z (+ (s z) z))) -> ('a2 : (= z (+ (s z) (+ z (+ z z))))) -> ('a3 : nat) -> (= (+ (s z) (+ z (+ z z))) z)] {",
            "intro x : (= (s (+ z z)) (s (+ z z))).",
            "intro x0 : (= z (+ (s z) z)).",
            "intro x1 : (= z (+ (s z) (+ z (+ z z)))).",
            "show (= (+ (s z) (+ z (+ z z))) z) by eq_symm.",
            "intro _ : [('a3 : nat) -> (= (+ (s z) (+ z (+ z z))) z)].",
            "}"
        ],
        "logprob": -8.621793134734045,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "c eq_symm",
            "=> (= (+ (s z) (+ z (+ z z))) z).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (s (+ z z)) (s (+ z z))) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> (= 'a0 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> (= nat 'a0 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> (= 'a0 'a0)] {",
            "intro x : nat.",
            "intro x0 : (= x x).",
            "intro _ : [('a2 : (= x x)) -> (= x x)].",
            "}"
        ],
        "logprob": -4.629311568765683,
        "actions": [
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= z 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= 'a0 'a0)) -> (= 'a0 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 'a0))  -> (= nat 'a0 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= z 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= 'a0 'a0)) -> (= 'a0 'a0)] {",
            "intro x : nat.",
            "intro x0 : (= x z).",
            "intro x1 : (= z x).",
            "intro x2 : (= x x).",
            "intro _ : [('a4 : (= x x)) -> (= x x)].",
            "}"
        ],
        "logprob": -8.279109342125242,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z z)) -> (= (+ (+ z z) z) (+ (s z) z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> (= nat (+ (+ z z) z) (+ (s z) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (+ (+ (+ z (+ z z)) (+ z z)) z) z)) -> ('a2 : nat) -> (= (+ (+ z (+ z z)) (+ z z)) (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (+ (+ (+ z (+ z z)) (+ z z)) z) z)) -> ('a2 : nat) -> (= nat (+ (+ z (+ z z)) (+ z z)) (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= (+ z (+ z z)) z)) -> ('a1 : (= (+ z (+ z (+ z z))) z)) -> ('a2 : nat) -> (= z (+ 'a2 (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (+ z z)) z) ) -> ('a1 : (= nat (+ z (+ z (+ z z))) z)) -> ('a2 : nat) -> (= nat z (+ 'a2 (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (+ z z)) z) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> (= 'a0 (s (+ (s 'a0) 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> (= nat 'a0 (s (+ (s 'a0) 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= (+ (+ z 'a0) 'a0) 'a0)) -> ('a4 : (= 'a0 'a0)) -> (= z z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> ('a4 : (= nat 'a0 'a0))  -> (= nat z z)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= (+ (+ z 'a0) 'a0) 'a0)) -> ('a4 : (= 'a0 'a0)) -> (= z z)] {",
            "intro x : nat.",
            "intro x0 : (= x x).",
            "intro x1 : (= x x).",
            "intro x2 : (= (+ (+ z x) x) x).",
            "show (= z z) by c0126.",
            "intro _ : [('a4 : (= x x)) -> (= z z)].",
            "}"
        ],
        "logprob": -9.343952435591419,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "c c0126",
            "=> (= z z).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> ('a4 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= (+ 'a0 (+ 'a0 (+ 'a0 'a0))) z)) -> ('a3 : (= 'a0 (+ z (+ 'a0 'a0)))) -> (= (+ z z) (+ z (+ 'a0 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat (+ 'a0 (+ 'a0 (+ 'a0 'a0))) z)) -> ('a3 : (= nat 'a0 (+ z (+ 'a0 'a0)))) -> (= nat (+ z z) (+ z (+ 'a0 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z (+ z z))) -> ('a1 : nat) -> (= (+ z (+ z 'a1)) (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z (+ z z)) ) -> ('a1 : nat) -> (= nat (+ z (+ z 'a1)) (+ z (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z z)) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= (+ (+ z z) z) z)) -> ('a1 : (= (+ z (+ z z)) z)) -> (= z (+ z (+ (+ z (+ z z)) z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z z) z) z) ) -> ('a1 : (= nat (+ z (+ z z)) z)) -> (= nat z (+ z (+ (+ z (+ z z)) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z z) z) z) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ (+ z z) (+ z (+ (s (+ z z)) z))))) -> (= z (+ (+ z z) (s (+ z z))))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z (+ (+ z z) (+ z (+ (s (+ z z)) z))))) -> (= nat z (+ (+ z z) (s (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 3,
        "problem": "[('a0 : (= (+ z z) z)) -> ('a1 : (= z (+ z (+ (+ z (+ z z)) (s z))))) -> (= z (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) z) ) -> ('a1 : (= nat z (+ z (+ (+ z (+ z z)) (s z))))) -> (= nat z (+ z (+ z z)))]",
        "proof": [
            "theorem t : [('a0 : (= (+ z z) z)) -> ('a1 : (= z (+ z (+ (+ z (+ z z)) (s z))))) -> (= z (+ z (+ z z)))] {",
            "intro x : (= (+ z z) z).",
            "show (= z (+ z z)) by eq_symm.",
            "show (= z (+ z (+ z z))) by rewrite.",
            "intro _ : [('a1 : (= z (+ z (+ (+ z (+ z z)) (s z))))) -> (= z (+ z (+ z z)))].",
            "}"
        ],
        "logprob": -7.214069475421222,
        "actions": [
            "intro.",
            "c eq_symm",
            "=> (= z (+ z z)).",
            "c rewrite",
            "=> (= z (+ z (+ z z))).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) z) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= z 'a0)) -> ('a3 : (= z (+ (+ z 'a0) (s z)))) -> (= z (+ (+ z 'a0) (s z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat z (+ (+ z 'a0) (s z)))) -> (= nat z (+ (+ z 'a0) (s z)))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= z 'a0)) -> ('a3 : (= z (+ (+ z 'a0) (s z)))) -> (= z (+ (+ z 'a0) (s z)))] {",
            "intro x : nat.",
            "intro x0 : (= x x).",
            "intro x1 : (= z x).",
            "intro _ : [('a3 : (= z (+ (+ z x) (s z)))) -> (= z (+ (+ z x) (s z)))].",
            "}"
        ],
        "logprob": -6.722325113005637,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= (+ (+ z 'a0) 'a0) 'a0)) -> (= z (+ (+ z 'a0) 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> (= nat z (+ (+ z 'a0) 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= (+ (+ z 'a0) 'a0) 'a0)) -> (= (+ z 'a0) (+ 'a0 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> (= nat (+ z 'a0) (+ 'a0 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= (+ z (+ z z)) (+ z (+ z z)))) -> ('a1 : (= (+ z (+ z (+ z z))) (+ (+ z (+ z (+ z z))) z))) -> (= (+ z (+ z z)) (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (+ z z)) (+ z (+ z z))) ) -> ('a1 : (= nat (+ z (+ z (+ z z))) (+ (+ z (+ z (+ z z))) z))) -> (= nat (+ z (+ z z)) (+ z z))]",
        "proof": [
            "theorem t : [('a0 : (= (+ z (+ z z)) (+ z (+ z z)))) -> ('a1 : (= (+ z (+ z (+ z z))) (+ (+ z (+ z (+ z z))) z))) -> (= (+ z (+ z z)) (+ z z))] {",
            "intro x : (= (+ z (+ z z)) (+ z (+ z z))).",
            "show (= (+ z z) z) by +_z.",
            "intro x0 : (= (+ z (+ z (+ z z))) (+ (+ z (+ z (+ z z))) z)).",
            "show (= (+ z (+ z z)) (+ z z)) by rewrite.",
            "}"
        ],
        "logprob": -6.536376759144707,
        "actions": [
            "intro.",
            "c +_z",
            "=> (= (+ z z) z).",
            "intro.",
            "c rewrite",
            "=> (= (+ z (+ z z)) (+ z z))."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (+ z z)) (+ z (+ z z))) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z (+ (+ z z) z))))) -> (= z (+ z (+ z (+ z (+ z (+ z z))))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : nat) -> ('a3 : (= nat z (+ z (+ z (+ (+ z z) z))))) -> (= nat z (+ z (+ z (+ z (+ z (+ z z))))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 'a0)) -> (= 'a0 (+ (+ 'a0 'a0) 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> (= nat 'a0 (+ (+ 'a0 'a0) 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= (+ (+ z 'a0) 'a0) 'a0)) -> ('a4 : (= (+ (+ z 'a0) 'a0) 'a0)) -> (= (+ z (+ z 'a0)) (s (+ (+ z 'a0) z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> ('a4 : (= nat (+ (+ z 'a0) 'a0) 'a0))  -> (= nat (+ z (+ z 'a0)) (s (+ (+ z 'a0) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> ('a4 : (= nat (+ (+ z 'a0) 'a0) 'a0)) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= (+ (+ z 'a0) 'a0) 'a0)) -> (= z (+ (+ (+ (+ (+ (+ (s z) 'a0) 'a0) 'a0) 'a0) 'a0) 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> (= nat z (+ (+ (+ (+ (+ (+ (s z) 'a0) 'a0) 'a0) 'a0) 'a0) 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ z 'a0) (+ (s (+ z z)) z)))) -> (= 'a0 (+ 'a0 (s z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ z 'a0) (+ (s (+ z z)) z)))) -> (= nat 'a0 (+ 'a0 (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 z) (+ z 'a0)))) -> (= (s (+ (+ 'a0 (+ z 'a0)) z)) (s z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 z) (+ z 'a0)))) -> (= nat (s (+ (+ 'a0 (+ z 'a0)) z)) (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (s (+ z z)) (s (+ z z)))) -> ('a2 : (= z (+ (s z) z))) -> ('a3 : (= z (+ z (+ z z)))) -> (= (+ z (+ (s z) z)) (+ (s z) z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (s (+ z z)) (s (+ z z)))) -> ('a2 : (= nat z (+ (s z) z))) -> ('a3 : (= nat z (+ z (+ z z)))) -> (= nat (+ z (+ (s z) z)) (+ (s z) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= z (+ (s 'a0) 'a0))) -> ('a3 : (= (+ 'a0 'a0) (+ 'a0 'a0))) -> (= z (+ (s 'a0) 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat z (+ (s 'a0) 'a0))) -> ('a3 : (= nat (+ 'a0 'a0) (+ 'a0 'a0))) -> (= nat z (+ (s 'a0) 'a0))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= z (+ (s 'a0) 'a0))) -> ('a3 : (= (+ 'a0 'a0) (+ 'a0 'a0))) -> (= z (+ (s 'a0) 'a0))] {",
            "intro x : nat.",
            "intro x0 : (= x x).",
            "intro x1 : (= z (+ (s x) x)).",
            "intro _ : [('a3 : (= (+ x x) (+ x x))) -> (= z (+ (s x) x))].",
            "}"
        ],
        "logprob": -6.743354643400183,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= (s (+ (+ (s 'a0) 'a0) 'a0)) 'a0)) -> (= (s (+ z (+ (s 'a0) 'a0))) (s (+ z (+ (s 'a0) 'a0))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= nat (s (+ (+ (s 'a0) 'a0) 'a0)) 'a0)) -> (= nat (s (+ z (+ (s 'a0) 'a0))) (s (+ z (+ (s 'a0) 'a0))))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= (s (+ (+ (s 'a0) 'a0) 'a0)) 'a0)) -> (= (s (+ z (+ (s 'a0) 'a0))) (s (+ z (+ (s 'a0) 'a0))))] {",
            "intro x : nat.",
            "intro x0 : (= x (+ (+ (s x) x) x)).",
            "intro x1 : (= (s (+ (+ (s x) x) x)) x).",
            "apply c0032.",
            "}"
        ],
        "logprob": -7.009663048740329,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "a c0032",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (+ (+ z 'a0) (+ z z)) (s z)) z))) -> ('a2 : nat) -> ('a3 : (= (+ z 'a0) (+ (+ z 'a0) (s z)))) -> (= (+ (+ (s (+ z z)) z) z) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (+ (+ z 'a0) (+ z z)) (s z)) z))) -> ('a2 : nat) -> ('a3 : (= nat (+ z 'a0) (+ (+ z 'a0) (s z)))) -> (= nat (+ (+ (s (+ z z)) z) z) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= (+ (+ z 'a0) 'a0) 'a0)) -> (= z (+ 'a0 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> (= nat z (+ 'a0 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (+ (+ z 'a0) (+ z z)) z) z))) -> (= (+ 'a0 (s z)) (s (+ (s (+ z (s z))) z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (+ (+ z 'a0) (+ z z)) z) z))) -> (= nat (+ 'a0 (s z)) (s (+ (s (+ z (s z))) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= (+ (+ z 'a0) 'a0) 'a0)) -> (= z (+ (+ 'a0 'a0) (s z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> (= nat z (+ (+ 'a0 'a0) (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= z (+ (+ z z) z))) -> ('a1 : (= (+ (s (+ (s z) (+ z z))) z) (+ z z))) -> ('a2 : nat) -> ('a3 : (= (+ (+ (s z) (+ z z)) z) (+ z z))) -> (= z (+ (s (+ z (+ z z))) z))]",
        "problem_raw": "[ ('a0 :(= nat z (+ (+ z z) z)) ) -> ('a1 : (= nat (+ (s (+ (s z) (+ z z))) z) (+ z z))) -> ('a2 : nat) -> ('a3 : (= nat (+ (+ (s z) (+ z z)) z) (+ z z))) -> (= nat z (+ (s (+ z (+ z z))) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ (+ z z) z)) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ z (+ z z)) (+ z z)))) -> (= z (+ (+ z (+ z z)) (+ z z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ z (+ z z)) (+ z z)))) -> (= nat z (+ (+ z (+ z z)) (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= (+ (+ 'a0 'a0) (s 'a0)) 'a0)) -> ('a3 : (= (+ (+ 'a0 'a0) (s 'a0)) (+ (+ 'a0 'a0) (s 'a0)))) -> (= z (+ (+ 'a0 (s 'a0)) (s 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat (+ (+ 'a0 'a0) (s 'a0)) 'a0)) -> ('a3 : (= nat (+ (+ 'a0 'a0) (s 'a0)) (+ (+ 'a0 'a0) (s 'a0))))  -> (= nat z (+ (+ 'a0 (s 'a0)) (s 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat (+ (+ 'a0 'a0) (s 'a0)) 'a0)) -> ('a3 : (= nat (+ (+ 'a0 'a0) (s 'a0)) (+ (+ 'a0 'a0) (s 'a0)))) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 'a0) (+ z 'a0)))) -> (= z (+ (+ 'a0 'a0) (s (+ (s (+ 'a0 z)) z))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 'a0) (+ z 'a0)))) -> (= nat z (+ (+ 'a0 'a0) (s (+ (s (+ 'a0 z)) z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 z)) -> ('a3 : (= z (+ 'a0 'a0))) -> (= z (+ 'a0 (+ z (+ z 'a0))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 z)) -> ('a3 : (= nat z (+ 'a0 'a0))) -> (= nat z (+ 'a0 (+ z (+ z 'a0))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= (+ (+ z 'a0) 'a0) 'a0)) -> ('a4 : (= 'a0 'a0)) -> (= (+ 'a0 'a0) (+ 'a0 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> ('a4 : (= nat 'a0 'a0))  -> (= nat (+ 'a0 'a0) (+ 'a0 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> ('a4 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 z)) -> (= 'a0 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 z)) -> (= nat 'a0 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 z)) -> (= 'a0 'a0)] {",
            "intro x : nat.",
            "intro x0 : (= x z).",
            "intro x1 : (= x x).",
            "intro _ : [('a3 : (= x z)) -> (= x x)].",
            "}"
        ],
        "logprob": -7.430712340741175,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= (+ (+ z 'a0) 'a0) 'a0)) -> (= (+ (+ (+ 'a0 'a0) 'a0) 'a0) (+ (+ 'a0 'a0) 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> (= nat (+ (+ (+ 'a0 'a0) 'a0) 'a0) (+ (+ 'a0 'a0) 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= z (+ 'a0 'a0))) -> ('a4 : (= (+ 'a0 'a0) 'a0)) -> ('a5 : (= z (+ 'a0 'a0))) -> (= z (+ 'a0 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat z (+ 'a0 'a0))) -> ('a4 : (= nat (+ 'a0 'a0) 'a0)) -> ('a5 : (= nat z (+ 'a0 'a0)))  -> (= nat z (+ 'a0 'a0))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= z (+ 'a0 'a0))) -> ('a4 : (= (+ 'a0 'a0) 'a0)) -> ('a5 : (= z (+ 'a0 'a0))) -> (= z (+ 'a0 'a0))] {",
            "intro x : nat.",
            "intro x0 : (= x x).",
            "intro x1 : (= x x).",
            "intro x2 : (= z (+ x x)).",
            "intro x3 : (= (+ x x) x).",
            "intro _ : [('a5 : (= z (+ x x))) -> (= z (+ x x))].",
            "}"
        ],
        "logprob": -9.058094195062335,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat z (+ 'a0 'a0))) -> ('a4 : (= nat (+ 'a0 'a0) 'a0)) -> ('a5 : (= nat z (+ 'a0 'a0))) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 'a0)) -> (= (+ 'a0 (+ 'a0 'a0)) (+ 'a0 (+ 'a0 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> (= nat (+ 'a0 (+ 'a0 'a0)) (+ 'a0 (+ 'a0 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (+ z 'a0) (+ (s (s z)) z)) z))) -> (= 'a0 (+ (s (+ (+ z 'a0) z)) (+ (s (+ (s (+ (s z) z)) z)) z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (+ z 'a0) (+ (s (s z)) z)) z))) -> (= nat 'a0 (+ (s (+ (+ z 'a0) z)) (+ (s (+ (s (+ (s z) z)) z)) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= (s (+ 'a0 z)) z)) -> ('a3 : (= z (+ (+ z 'a0) z))) -> (= z (+ z (+ (+ z 'a0) z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat (s (+ 'a0 z)) z)) -> ('a3 : (= nat z (+ (+ z 'a0) z))) -> (= nat z (+ z (+ (+ z 'a0) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= z (+ z z))) -> ('a1 : (= (+ (+ (+ z (+ z z)) (+ z z)) (+ z z)) z)) -> (= (+ z z) (+ z (+ (+ (+ z (+ z z)) (+ z z)) z)))]",
        "problem_raw": "[ ('a0 :(= nat z (+ z z)) ) -> ('a1 : (= nat (+ (+ (+ z (+ z z)) (+ z z)) (+ z z)) z)) -> (= nat (+ z z) (+ z (+ (+ (+ z (+ z z)) (+ z z)) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z z)) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= (+ (+ 'a0 'a0) 'a0) 'a0)) -> (= (+ (+ 'a0 'a0) 'a0) 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat (+ (+ 'a0 'a0) 'a0) 'a0)) -> (= nat (+ (+ 'a0 'a0) 'a0) 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : nat) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= (+ (+ 'a0 'a0) 'a0) 'a0)) -> (= (+ (+ 'a0 'a0) 'a0) 'a0)] {",
            "intro x : nat.",
            "intro x0 : nat.",
            "intro x1 : (= x x).",
            "intro _ : [('a3 : (= (+ (+ x x) x) x)) -> (= (+ (+ x x) x) x)].",
            "}"
        ],
        "logprob": -6.870784584857036,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= (s (+ 'a0 z)) z)) -> ('a3 : (= z (+ (+ z 'a0) (+ z (+ z z))))) -> (= (s (+ 'a0 z)) (s (+ 'a0 z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat (s (+ 'a0 z)) z)) -> ('a3 : (= nat z (+ (+ z 'a0) (+ z (+ z z))))) -> (= nat (s (+ 'a0 z)) (s (+ 'a0 z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ z (s z)))) -> ('a2 : (= (+ (+ (+ z z) (s z)) z) (+ z (s z)))) -> (= (+ (+ z z) (s z)) (+ z (s z)))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z (+ z (s z)))) -> ('a2 : (= nat (+ (+ (+ z z) (s z)) z) (+ z (s z)))) -> (= nat (+ (+ z z) (s z)) (+ z (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= z (+ 'a0 (s z)))) -> ('a4 : (= (+ z (+ z (+ z z))) z)) -> (= (+ (+ z (+ z z)) (s (+ z z))) (s z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= nat z (+ 'a0 (s z)))) -> ('a4 : (= nat (+ z (+ z (+ z z))) z)) -> (= nat (+ (+ z (+ z z)) (s (+ z z))) (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= (+ (+ z z) z) (+ (+ z z) z))) -> ('a1 : (= (+ z (+ z (+ z z))) z)) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> (= (+ z (+ z z)) (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z z) z) (+ (+ z z) z)) ) -> ('a1 : (= nat (+ z (+ z (+ z z))) z)) -> ('a2 : nat) -> ('a3 : (= nat z (+ z (+ z z)))) -> (= nat (+ z (+ z z)) (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z z) z) (+ (+ z z) z)) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= z 'a0)) -> ('a4 : (= (+ 'a0 'a0) z)) -> (= (+ z (+ z z)) (+ 'a0 (+ z z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= nat z 'a0)) -> ('a4 : (= nat (+ 'a0 'a0) z)) -> (= nat (+ z (+ z z)) (+ 'a0 (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= 'a0 (+ 'a0 (+ (s (+ z z)) z)))) -> (= 'a0 (+ (+ 'a0 (+ (s (+ z z)) z)) z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat 'a0 (+ 'a0 (+ (s (+ z z)) z)))) -> (= nat 'a0 (+ (+ 'a0 (+ (s (+ z z)) z)) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (s (+ z (+ (s z) (+ z z)))) z)) -> (= (+ (+ (+ z z) z) z) (s z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (s (+ z (+ (s z) (+ z z)))) z)) -> (= nat (+ (+ (+ z z) z) z) (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (s (+ z (+ z (+ z z)))) (+ z (+ z (s (+ z z)))))) -> (= z (s (+ z (+ z (+ z z)))))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (s (+ z (+ z (+ z z)))) (+ z (+ z (s (+ z z)))))) -> (= nat z (s (+ z (+ z (+ z z)))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= (+ (+ (+ (+ z z) z) z) z) (+ (+ (+ z z) z) z))) -> ('a1 : nat) -> ('a2 : (= z (+ z (+ z (+ (s (+ z (s z))) z))))) -> (= (+ z (+ z (+ (s (+ z (s z))) z))) z)]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ (+ (+ z z) z) z) z) (+ (+ (+ z z) z) z)) ) -> ('a1 : nat) -> ('a2 : (= nat z (+ z (+ z (+ (s (+ z (s z))) z))))) -> (= nat (+ z (+ z (+ (s (+ z (s z))) z))) z)]",
        "proof": [
            "theorem t : [('a0 : (= (+ (+ (+ (+ z z) z) z) z) (+ (+ (+ z z) z) z))) -> ('a1 : nat) -> ('a2 : (= z (+ z (+ z (+ (s (+ z (s z))) z))))) -> (= (+ z (+ z (+ (s (+ z (s z))) z))) z)] {",
            "intro x : (= (+ (+ (+ (+ z z) z) z) z) (+ (+ (+ z z) z) z)).",
            "intro x0 : nat.",
            "intro x1 : (= z (+ z (+ z (+ (s (+ z (s z))) z)))).",
            "show (= (+ z (+ z (+ (s (+ z (s z))) z))) z) by eq_symm.",
            "}"
        ],
        "logprob": -7.614723844497222,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "c eq_symm",
            "=> (= (+ z (+ z (+ (s (+ z (s z))) z))) z)."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ (+ (+ z z) z) z) z) (+ (+ (+ z z) z) z)) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ (+ (+ z z) z) (+ z (+ (s (+ z z)) z))))) -> ('a2 : (= (+ (s z) z) (+ z z))) -> (= (+ z (+ z (+ (s z) z))) (s z))]",
        "problem_raw": "[('a0 : (= nat z z)) -> ('a1 : (= nat z (+ (+ (+ z z) z) (+ z (+ (s (+ z z)) z))))) -> ('a2 : (= nat (+ (s z) z) (+ z z))) -> (= nat (+ z (+ z (+ (s z) z))) (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ (+ z (+ z z)) (s z)))) -> (= (+ (+ z (+ z z)) (+ z z)) (+ z (+ (+ z z) (s z))))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z (+ (+ z (+ z z)) (s z)))) -> (= nat (+ (+ z (+ z z)) (+ z z)) (+ z (+ (+ z z) (s z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 z)) -> (= (+ (+ z 'a0) z) (+ (s (+ z z)) z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 z))  -> (= nat (+ (+ z 'a0) z) (+ (s (+ z z)) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 z)) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ z (+ z (+ (+ z z) (+ z z)))))) -> (= (s (+ z z)) (s z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z (+ z (+ z (+ (+ z z) (+ z z)))))) -> (= nat (s (+ z z)) (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ (+ z (+ z z)) (+ (s (+ z z)) z)))) -> (= (+ z (+ z z)) (s (+ z z)))]",
        "problem_raw": "[('a0 : (= nat z z)) -> ('a1 : (= nat z (+ (+ z (+ z z)) (+ (s (+ z z)) z)))) -> (= nat (+ z (+ z z)) (s (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= (+ (+ z z) z) (+ z z))) -> ('a1 : (= z (+ (+ z (+ z z)) (+ z z)))) -> (= (+ (+ z (+ z z)) (+ (s (+ z z)) z)) (s z))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z z) z) (+ z z)) ) -> ('a1 : (= nat z (+ (+ z (+ z z)) (+ z z)))) -> (= nat (+ (+ z (+ z z)) (+ (s (+ z z)) z)) (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z z) z) (+ z z)) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= (+ z z) z)) -> ('a1 : (= z (+ z (+ (+ z (+ z z)) (s z))))) -> (= (+ z z) (+ (+ (+ z (+ z z)) (s (+ z (+ z z)))) (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) z) ) -> ('a1 : (= nat z (+ z (+ (+ z (+ z z)) (s z))))) -> (= nat (+ z z) (+ (+ (+ z (+ z z)) (s (+ z (+ z z)))) (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) z) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= (+ 'a0 'a0) 'a0)) -> ('a3 : (= (+ 'a0 'a0) (+ 'a0 'a0))) -> (= z (+ 'a0 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat (+ 'a0 'a0) 'a0)) -> ('a3 : (= nat (+ 'a0 'a0) (+ 'a0 'a0)))  -> (= nat z (+ 'a0 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat (+ 'a0 'a0) 'a0)) -> ('a3 : (= nat (+ 'a0 'a0) (+ 'a0 'a0))) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (s (+ z (+ z (+ z z)))) z)) -> (= z (+ (+ z z) (+ z (+ z (s z)))))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (s (+ z (+ z (+ z z)))) z)) -> (= nat z (+ (+ z z) (+ z (+ z (s z)))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 (+ (+ z z) z)) z))) -> (= (+ 'a0 (+ (+ (+ 'a0 (+ (+ (+ z z) z) z)) z) z)) (+ 'a0 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 (+ (+ z z) z)) z))) -> (= nat (+ 'a0 (+ (+ (+ 'a0 (+ (+ (+ z z) z) z)) z) z)) (+ 'a0 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 (+ (+ 'a0 'a0) 'a0))) -> (= (+ z (s (+ (+ 'a0 'a0) (s z)))) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 (+ (+ 'a0 'a0) 'a0))) -> (= nat (+ z (s (+ (+ 'a0 'a0) (s z)))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= (+ (+ z 'a0) 'a0) 'a0)) -> (= 'a0 (+ (+ 'a0 'a0) 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> (= nat 'a0 (+ (+ 'a0 'a0) 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= (+ 'a0 (s 'a0)) (+ (+ (+ (+ z z) (s z)) z) (s z)))) -> (= (+ 'a0 (+ 'a0 z)) (s z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (+ 'a0 (s 'a0)) (+ (+ (+ (+ z z) (s z)) z) (s z)))) -> (= nat (+ 'a0 (+ 'a0 z)) (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (+ z 'a0) (+ (s (+ z z)) z)) z))) -> (= (+ (+ (s (+ z z)) z) z) (+ z (s z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (+ z 'a0) (+ (s (+ z z)) z)) z))) -> (= nat (+ (+ (s (+ z z)) z) z) (+ z (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= (+ z z) (+ z z))) -> ('a1 : (= z (+ (+ (+ z z) z) z))) -> ('a2 : (= z (+ z (+ z z)))) -> (= (+ (+ z (+ z (+ z (s z)))) (+ (s (+ z z)) z)) (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) (+ z z)) ) -> ('a1 : (= nat z (+ (+ (+ z z) z) z))) -> ('a2 : (= nat z (+ z (+ z z)))) -> (= nat (+ (+ z (+ z (+ z (s z)))) (+ (s (+ z z)) z)) (+ z (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) (+ z z)) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> (= (+ (+ 'a0 'a0) (+ (+ 'a0 'a0) z)) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> (= nat (+ (+ 'a0 'a0) (+ (+ 'a0 'a0) z)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= z (+ z z))) -> ('a1 : (= z (+ (+ (+ z z) (+ z z)) (+ z z)))) -> (= (+ (+ (+ (+ z z) (+ z z)) z) z) (+ (+ z z) (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z (+ z z)) ) -> ('a1 : (= nat z (+ (+ (+ z z) (+ z z)) (+ z z)))) -> (= nat (+ (+ (+ (+ z z) (+ z z)) z) z) (+ (+ z z) (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z z)) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= (+ (+ 'a0 z) z) (+ z z))) -> ('a2 : (= (+ z (+ z z)) (+ z (+ z z)))) -> ('a3 : nat) -> (= (+ z z) (+ z (+ z z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (+ (+ 'a0 z) z) (+ z z))) -> ('a2 : (= nat (+ z (+ z z)) (+ z (+ z z)))) -> ('a3 : nat) -> (= nat (+ z z) (+ z (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ z 'a0) (+ z (+ (s (+ z z)) z))))) -> ('a2 : (= (+ (+ z 'a0) z) z)) -> (= 'a0 (+ (+ z 'a0) (+ z (+ z (+ (s (+ z z)) z)))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ z 'a0) (+ z (+ (s (+ z z)) z))))) -> ('a2 : (= nat (+ (+ z 'a0) z) z)) -> (= nat 'a0 (+ (+ z 'a0) (+ z (+ z (+ (s (+ z z)) z)))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ (+ z (+ z (+ (+ z z) z))) z))) -> (= (s (+ (+ z (+ z z)) (+ z z))) (s z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z (+ (+ z (+ z (+ (+ z z) z))) z))) -> (= nat (s (+ (+ z (+ z z)) (+ z z))) (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= z (+ z (+ z z)))) -> ('a3 : (= (+ z (+ z z)) (+ z (+ z z)))) -> (= z (+ z (+ (+ z z) (+ z z))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat z (+ z (+ z z)))) -> ('a3 : (= nat (+ z (+ z z)) (+ z (+ z z)))) -> (= nat z (+ z (+ (+ z z) (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= (+ (+ z 'a0) 'a0) 'a0)) -> (= (+ 'a0 (+ 'a0 'a0)) (s (+ z z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> (= nat (+ 'a0 (+ 'a0 'a0)) (s (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= (+ z (s (+ z z))) (s (+ z (+ z z))))) -> ('a1 : (= (s z) (+ z (s z)))) -> ('a2 : (= z (+ (+ z (+ z z)) (s z)))) -> ('a3 : nat) -> (= (+ (+ (+ 'a3 z) (+ z z)) (s z)) (s z))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (s (+ z z))) (s (+ z (+ z z)))) ) -> ('a1 : (= nat (s z) (+ z (s z)))) -> ('a2 : (= nat z (+ (+ z (+ z z)) (s z)))) -> ('a3 : nat) -> (= nat (+ (+ (+ 'a3 z) (+ z z)) (s z)) (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (s (+ z z))) (s (+ z (+ z z)))) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= z 'a0)) -> ('a3 : (= z 'a0)) -> (= z (+ 'a0 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat z 'a0))  -> (= nat z (+ 'a0 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat z 'a0)) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= z (+ z (+ z z)))) -> ('a1 : nat) -> ('a2 : (= z (+ (+ z 'a1) (+ z z)))) -> (= z (+ z (+ z (+ z z))))]",
        "problem_raw": "[ ('a0 :(= nat z (+ z (+ z z))) ) -> ('a1 : nat) -> ('a2 : (= nat z (+ (+ z 'a1) (+ z z)))) -> (= nat z (+ z (+ z (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z (+ z z))) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= (+ z (s z)) (s (+ z z)))) -> ('a1 : (= (s z) (+ z (s z)))) -> ('a2 : (= z (+ (+ z (+ z z)) (s z)))) -> (= z (+ (+ (+ z (+ (+ (+ z (+ z z)) (s z)) z)) (s z)) z))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (s z)) (s (+ z z))) ) -> ('a1 : (= nat (s z) (+ z (s z)))) -> ('a2 : (= nat z (+ (+ z (+ z z)) (s z)))) -> (= nat z (+ (+ (+ z (+ (+ (+ z (+ z z)) (s z)) z)) (s z)) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (s z)) (s (+ z z))) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ z 'a0) (+ (s (+ z z)) z)))) -> (= z z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ z 'a0) (+ (s (+ z z)) z)))) -> (= nat z z)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 (+ (+ z 'a0) (+ (s (+ z z)) z)))) -> (= z z)] {",
            "intro x : nat.",
            "show (= z z) by c0093.",
            "intro _ : [('a1 : (= x (+ (+ z x) (+ (s (+ z z)) z)))) -> (= z z)].",
            "}"
        ],
        "logprob": -4.976771250179303,
        "actions": [
            "intro.",
            "c c0093",
            "=> (= z z).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (s 'a0) 'a0))) -> (= (+ (s 'a0) 'a0) (+ (s 'a0) (+ (s 'a0) 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (s 'a0) 'a0))) -> (= nat (+ (s 'a0) 'a0) (+ (s 'a0) (+ (s 'a0) 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= z (+ z z))) -> ('a1 : (= z (+ (+ z (+ z z)) (+ (s (+ z z)) z)))) -> (= z (+ (+ z z) (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z (+ z z)) ) -> ('a1 : (= nat z (+ (+ z (+ z z)) (+ (s (+ z z)) z)))) -> (= nat z (+ (+ z z) (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z z)) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ z 'a0) (+ z (s (+ z (s z))))))) -> (= (+ 'a0 (s z)) (+ z (s z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ z 'a0) (+ z (s (+ z (s z))))))) -> (= nat (+ 'a0 (s z)) (+ z (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= (+ 'a0 'a0) (+ 'a0 'a0))) -> (= (+ z (+ z (+ z z))) (s (+ z z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat (+ 'a0 'a0) (+ 'a0 'a0)))  -> (= nat (+ z (+ z (+ z z))) (s (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat (+ 'a0 'a0) (+ 'a0 'a0))) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= (+ (+ z z) z) (+ z z))) -> ('a1 : (= z (+ (+ z (+ (+ z z) z)) (+ z z)))) -> ('a2 : nat) -> (= (+ z (+ z (+ (+ z (+ (+ z z) z)) (+ z z)))) z)]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z z) z) (+ z z)) ) -> ('a1 : (= nat z (+ (+ z (+ (+ z z) z)) (+ z z)))) -> ('a2 : nat) -> (= nat (+ z (+ z (+ (+ z (+ (+ z z) z)) (+ z z)))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z z) z) (+ z z)) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= (+ (+ z z) z) (+ z z))) -> ('a1 : (= (+ z (+ z z)) (+ z (+ z (+ z z))))) -> (= (+ z (+ (+ z z) z)) (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z z) z) (+ z z)) ) -> ('a1 : (= nat (+ z (+ z z)) (+ z (+ z (+ z z))))) -> (= nat (+ z (+ (+ z z) z)) (+ z (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z z) z) (+ z z)) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= (+ z z) (+ z z))) -> ('a1 : (= z (+ (+ z (+ z z)) (+ z z)))) -> ('a2 : nat) -> (= 'a2 (+ (+ z (+ z z)) (+ z (+ (+ z (+ z z)) (s z)))))]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) (+ z z)) ) -> ('a1 : (= nat z (+ (+ z (+ z z)) (+ z z)))) -> ('a2 : nat) -> (= nat 'a2 (+ (+ z (+ z z)) (+ z (+ (+ z (+ z z)) (s z)))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) (+ z z)) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= (+ 'a0 'a0) 'a0)) -> (= (+ 'a0 'a0) (+ (+ 'a0 'a0) (+ 'a0 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat (+ 'a0 'a0) 'a0)) -> (= nat (+ 'a0 'a0) (+ (+ 'a0 'a0) (+ 'a0 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 (+ z (+ (+ z z) z))) z))) -> (= (+ 'a0 (+ (+ z (+ (+ z (+ z (+ z z))) z)) z)) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 (+ z (+ (+ z z) z))) z))) -> (= nat (+ 'a0 (+ (+ z (+ (+ z (+ z (+ z z))) z)) z)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= (s (+ z z)) (s (+ z z)))) -> ('a1 : (= z (+ (s z) (+ z (+ z z))))) -> ('a2 : (= z (+ (s z) (+ z (+ z z))))) -> (= (s (+ (s z) z)) z)]",
        "problem_raw": "[ ('a0 :(= nat (s (+ z z)) (s (+ z z))) ) -> ('a1 : (= nat z (+ (s z) (+ z (+ z z))))) -> ('a2 : (= nat z (+ (s z) (+ z (+ z z))))) -> (= nat (s (+ (s z) z)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (s (+ z z)) (s (+ z z))) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= z (+ (+ z 'a0) 'a0))) -> (= (+ (+ (+ 'a0 'a0) 'a0) 'a0) (+ (+ 'a0 'a0) 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat z (+ (+ z 'a0) 'a0))) -> (= nat (+ (+ (+ 'a0 'a0) 'a0) 'a0) (+ (+ 'a0 'a0) 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= (+ (+ 'a0 z) z) (+ z (+ (s (+ z z)) z)))) -> (= (+ z z) (+ z (+ (s (+ z z)) z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (+ (+ 'a0 z) z) (+ z (+ (s (+ z z)) z)))) -> (= nat (+ z z) (+ z (+ (s (+ z z)) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 z)) -> ('a3 : (= (+ (+ z 'a0) 'a0) 'a0)) -> (= z (+ (+ (s 'a0) 'a0) 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 z)) -> ('a3 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> (= nat z (+ (+ (s 'a0) 'a0) 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= 'a0 (+ (+ 'a0 'a0) (s z)))) -> ('a3 : (= (+ z (+ z z)) (+ z (s z)))) -> (= z (+ z (+ (+ 'a0 'a0) (s z))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat 'a0 (+ (+ 'a0 'a0) (s z)))) -> ('a3 : (= nat (+ z (+ z z)) (+ z (s z)))) -> (= nat z (+ z (+ (+ 'a0 'a0) (s z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= z (s z))) -> ('a1 : (= z (+ (+ z z) (s z)))) -> (= z (+ (+ (+ (+ z z) (s z)) z) (s z)))]",
        "problem_raw": "[ ('a0 :(= nat z (s z)) ) -> ('a1 : (= nat z (+ (+ z z) (s z)))) -> (= nat z (+ (+ (+ (+ z z) (s z)) z) (s z)))]",
        "proof": [
            "theorem t : [('a0 : (= z (s z))) -> ('a1 : (= z (+ (+ z z) (s z)))) -> (= z (+ (+ (+ (+ z z) (s z)) z) (s z)))] {",
            "intro x : (= z (s z)).",
            "intro x0 : (= z (+ (+ z z) (s z))).",
            "show (= z (+ (+ (+ (+ z z) (s z)) z) (s z))) by rewrite.",
            "}"
        ],
        "logprob": -8.372785918396527,
        "actions": [
            "intro.",
            "intro.",
            "c rewrite",
            "=> (= z (+ (+ (+ (+ z z) (s z)) z) (s z)))."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (s z)) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= z (+ 'a0 (+ z (+ z z))))) -> ('a3 : nat) -> (= (+ z (+ z z)) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat z (+ 'a0 (+ z (+ z z))))) -> ('a3 : nat) -> (= nat (+ z (+ z z)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= z (+ (+ z z) z))) -> ('a1 : (= z (+ (+ (+ z z) (+ z z)) z))) -> (= z (+ (+ (+ z z) (+ z (+ (+ z (+ (+ z z) (s z))) z))) z))]",
        "problem_raw": "[ ('a0 :(= nat z (+ (+ z z) z)) ) -> ('a1 : (= nat z (+ (+ (+ z z) (+ z z)) z))) -> (= nat z (+ (+ (+ z z) (+ z (+ (+ z (+ (+ z z) (s z))) z))) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ (+ z z) z)) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= (+ z z) z)) -> ('a1 : (= z (+ z (+ (+ z (+ z z)) (s z))))) -> (= (+ z (+ z (+ (+ z (+ z z)) (s z)))) z)]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) z) ) -> ('a1 : (= nat z (+ z (+ (+ z (+ z z)) (s z))))) -> (= nat (+ z (+ z (+ (+ z (+ z z)) (s z)))) z)]",
        "proof": [
            "theorem t : [('a0 : (= (+ z z) z)) -> ('a1 : (= z (+ z (+ (+ z (+ z z)) (s z))))) -> (= (+ z (+ z (+ (+ z (+ z z)) (s z)))) z)] {",
            "intro x : (= (+ z z) z).",
            "intro x0 : (= z (+ z (+ (+ z (+ z z)) (s z)))).",
            "show (= (+ z (+ z (+ (+ z (+ z z)) (s z)))) z) by rewrite.",
            "}"
        ],
        "logprob": -8.251791274574188,
        "actions": [
            "intro.",
            "intro.",
            "c rewrite",
            "=> (= (+ z (+ z (+ (+ z (+ z z)) (s z)))) z)."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) z) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= (+ (+ z z) z) (+ z z))) -> ('a1 : (= z (+ (+ z z) (+ (s (+ z z)) z)))) -> (= (+ z z) (+ z (+ (s (+ z (+ (+ z z) (s z)))) z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z z) z) (+ z z)) ) -> ('a1 : (= nat z (+ (+ z z) (+ (s (+ z z)) z)))) -> (= nat (+ z z) (+ z (+ (s (+ z (+ (+ z z) (s z)))) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z z) z) (+ z z)) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= z (+ (+ 'a0 'a0) (s z)))) -> (= (+ z (+ (+ 'a0 'a0) (s z))) (s (+ z (+ (+ 'a0 'a0) (s z)))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat z (+ (+ 'a0 'a0) (s z)))) -> (= nat (+ z (+ (+ 'a0 'a0) (s z))) (s (+ z (+ (+ 'a0 'a0) (s z)))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= (+ (+ z 'a0) 'a0) 'a0)) -> (= (+ 'a0 'a0) (+ (s (+ z (s z))) (+ z (s z))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> (= nat (+ 'a0 'a0) (+ (s (+ z (s z))) (+ z (s z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 (+ (+ z 'a0) (s z)))) -> (= (+ 'a0 (s z)) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat 'a0 'a0))  -> ('a3 : (= nat 'a0 (+ (+ z 'a0) (s z)))) -> (= nat (+ 'a0 (s z)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= (s (+ z z)) (s z))) -> ('a1 : (= (s (+ z (+ z (+ z z)))) z)) -> ('a2 : nat) -> ('a3 : (= (+ z (+ z z)) z)) -> (= z (+ z (+ (+ z (+ z z)) z)))]",
        "problem_raw": "[('a0 : (= nat (s (+ z z)) (s z))) -> ('a1 : (= nat (s (+ z (+ z (+ z z)))) z)) -> ('a2 : nat) -> ('a3 : (= nat (+ z (+ z z)) z)) -> (= nat z (+ z (+ (+ z (+ z z)) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= 'a0 'a0)) -> (= (+ (+ z 'a0) 'a0) 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 'a0))  -> (= nat (+ (+ z 'a0) 'a0) 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (+ z 'a0) (+ (s (+ z z)) z)) z))) -> ('a2 : nat) -> ('a3 : (= 'a0 (+ z (+ z z)))) -> (= (+ z (+ z z)) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (+ z 'a0) (+ (s (+ z z)) z)) z))) -> ('a2 : nat) -> ('a3 : (= nat 'a0 (+ z (+ z z)))) -> (= nat (+ z (+ z z)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= (+ z (+ z z)) (+ z (+ z z)))) -> ('a1 : (= z (+ (+ z z) z))) -> ('a2 : (= z (+ z (+ z z)))) -> (= (+ z (+ (+ z z) z)) z)]",
        "problem_raw": "[ ('a0 :(= nat (+ z (+ z z)) (+ z (+ z z))) ) -> ('a1 : (= nat z (+ (+ z z) z))) -> ('a2 : (= nat z (+ z (+ z z)))) -> (= nat (+ z (+ (+ z z) z)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (+ z z)) (+ z (+ z z))) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= (+ 'a0 (+ 'a0 (+ z z))) z)) -> (= (+ 'a0 (+ z z)) (+ z (+ z z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat (+ 'a0 (+ 'a0 (+ z z))) z)) -> (= nat (+ 'a0 (+ z z)) (+ z (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= (+ 'a0 (+ z z)) (+ 'a0 (+ z z)))) -> (= (+ z z) (+ z (+ z (+ z z))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (+ 'a0 (+ z z)) (+ 'a0 (+ z z))))  -> (= nat (+ z z) (+ z (+ z (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat (+ 'a0 (+ z z)) (+ 'a0 (+ z z)))) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= (+ (+ (+ z z) z) z) (+ (+ z z) z))) -> (= (+ (+ z z) (+ z z)) (+ z z))]",
        "problem_raw": "[('a0 : (= nat (+ (+ (+ z z) z) z) (+ (+ z z) z))) -> (= nat (+ (+ z z) (+ z z)) (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= z (+ (+ 'a0 'a0) (+ z 'a0)))) -> (= (+ (+ 'a0 (+ z 'a0)) (+ z (+ z 'a0))) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat z (+ (+ 'a0 'a0) (+ z 'a0)))) -> (= nat (+ (+ 'a0 (+ z 'a0)) (+ z (+ z 'a0))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= z (+ z (+ z z)))) -> ('a1 : (= (+ (+ z z) (+ z z)) z)) -> ('a2 : nat) -> ('a3 : (= (+ z z) (+ z z))) -> ('a4 : (= (+ z z) (+ z z))) -> (= z (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z (+ z (+ z z))) ) -> ('a1 : (= nat (+ (+ z z) (+ z z)) z)) -> ('a2 : nat) -> ('a3 : (= nat (+ z z) (+ z z))) -> ('a4 : (= nat (+ z z) (+ z z))) -> (= nat z (+ z (+ z z)))]",
        "proof": [
            "theorem t : [('a0 : (= z (+ z (+ z z)))) -> ('a1 : (= (+ (+ z z) (+ z z)) z)) -> ('a2 : nat) -> ('a3 : (= (+ z z) (+ z z))) -> ('a4 : (= (+ z z) (+ z z))) -> (= z (+ z (+ z z)))] {",
            "intro x : (= z (+ z (+ z z))).",
            "intro x0 : (= (+ (+ z z) (+ z z)) z).",
            "intro x1 : nat.",
            "intro x2 : (= (+ z z) (+ z z)).",
            "intro _ : [('a4 : (= (+ z z) (+ z z))) -> (= z (+ z (+ z z)))].",
            "}"
        ],
        "logprob": -9.314223127109916,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z (+ z z))) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= z (+ (+ 'a0 'a0) (s z)))) -> ('a3 : (= (+ z (+ z z)) (+ z (+ z z)))) -> (= (+ (+ 'a0 (+ z z)) z) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat z (+ (+ 'a0 'a0) (s z)))) -> ('a3 : (= nat (+ z (+ z z)) (+ z (+ z z)))) -> (= nat (+ (+ 'a0 (+ z z)) z) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= (+ (+ z z) z) (+ (+ z z) z))) -> ('a1 : (= (+ z z) (+ z (+ z (+ (s (+ z z)) z))))) -> (= (+ z (+ z z)) (+ (s (+ z (+ z z))) (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z z) z) (+ (+ z z) z)) ) -> ('a1 : (= nat (+ z z) (+ z (+ z (+ (s (+ z z)) z))))) -> (= nat (+ z (+ z z)) (+ (s (+ z (+ z z))) (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z z) z) (+ (+ z z) z)) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= (+ (+ (+ z z) z) z) (+ (+ (+ z z) z) z))) -> ('a1 : (= z (+ (+ z (+ (+ z z) z)) z))) -> (= z (+ (+ (+ (+ z (+ (+ z z) z)) z) z) z))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ (+ z z) z) z) (+ (+ (+ z z) z) z)) ) -> ('a1 : (= nat z (+ (+ z (+ (+ z z) z)) z))) -> (= nat z (+ (+ (+ (+ z (+ (+ z z) z)) z) z) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ (+ z z) z) z) (+ (+ (+ z z) z) z)) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= (+ z (+ z z)) (+ z (+ z z)))) -> ('a1 : (= (+ (+ z z) (+ z z)) (+ z z))) -> (= (+ (+ z z) (+ (+ z z) z)) (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (+ z z)) (+ z (+ z z))) ) -> ('a1 : (= nat (+ (+ z z) (+ z z)) (+ z z))) -> (= nat (+ (+ z z) (+ (+ z z) z)) (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (+ z z)) (+ z (+ z z))) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= (+ (+ z 'a0) 'a0) 'a0)) -> ('a4 : (= (+ (+ z 'a0) 'a0) 'a0)) -> (= (+ (+ z 'a0) (+ z 'a0)) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> ('a4 : (= nat (+ (+ z 'a0) 'a0) 'a0))  -> (= nat (+ (+ z 'a0) (+ z 'a0)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> ('a4 : (= nat (+ (+ z 'a0) 'a0) 'a0)) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= z z)) -> ('a1 : nat) -> ('a2 : (= 'a1 (+ (+ z 'a1) 'a1))) -> (= 'a1 (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : nat) -> ('a2 : (= nat 'a1 (+ (+ z 'a1) 'a1))) -> (= nat 'a1 (+ z (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= z (+ z z))) -> ('a3 : (= (+ z 'a1) (+ (+ z 'a1) z))) -> (= (+ z (+ z (+ z z))) (+ z (+ z z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat z (+ z z))) -> ('a3 : (= nat (+ z 'a1) (+ (+ z 'a1) z))) -> (= nat (+ z (+ z (+ z z))) (+ z (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= z z)) -> ('a1 : nat) -> ('a2 : (= 'a1 (s 'a1))) -> ('a3 : (= (+ (+ 'a1 'a1) 'a1) (s 'a1))) -> (= (+ (+ (+ 'a1 'a1) 'a1) (s 'a1)) 'a1)]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : nat) -> ('a2 : (= nat 'a1 (s 'a1))) -> ('a3 : (= nat (+ (+ 'a1 'a1) 'a1) (s 'a1))) -> (= nat (+ (+ (+ 'a1 'a1) 'a1) (s 'a1)) 'a1)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= (+ 'a0 'a0) (s 'a0))) -> ('a4 : (= (+ (+ 'a0 'a0) (s 'a0)) z)) -> (= z (+ (+ 'a0 'a0) (s 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= nat (+ 'a0 'a0) (s 'a0))) -> ('a4 : (= nat (+ (+ 'a0 'a0) (s 'a0)) z))  -> (= nat z (+ (+ 'a0 'a0) (s 'a0)))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= (+ 'a0 'a0) (s 'a0))) -> ('a4 : (= (+ (+ 'a0 'a0) (s 'a0)) z)) -> (= z (+ (+ 'a0 'a0) (s 'a0)))] {",
            "intro x : nat.",
            "intro x0 : (= x (s x)).",
            "intro x1 : (= z (+ (+ x x) (s x))).",
            "intro x2 : (= (+ x x) (s x)).",
            "intro _ : [('a4 : (= (+ (+ x x) (s x)) z)) -> (= z (+ (+ x x) (s x)))].",
            "}"
        ],
        "logprob": -7.918515620469844,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= nat (+ 'a0 'a0) (s 'a0))) -> ('a4 : (= nat (+ (+ 'a0 'a0) (s 'a0)) z)) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= (+ z (+ z (+ z z))) z)) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= (+ z 'a1) (+ z z))) -> (= (+ z (+ z z)) z)]",
        "problem_raw": "[ ('a0 :(= nat (+ z (+ z (+ z z))) z) ) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= nat (+ z 'a1) (+ z z))) -> (= nat (+ z (+ z z)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (+ z (+ z z))) z) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= (+ z z) z)) -> ('a1 : (= z (+ z (+ (+ z (+ z z)) (s z))))) -> (= (+ (+ z z) z) (+ z (+ z (+ (+ z (+ z z)) (s z)))))]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) z) ) -> ('a1 : (= nat z (+ z (+ (+ z (+ z z)) (s z))))) -> (= nat (+ (+ z z) z) (+ z (+ z (+ (+ z (+ z z)) (s z)))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) z) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= z (+ 'a0 'a0))) -> ('a4 : (= z (+ z (+ 'a0 (+ z z))))) -> (= (+ z (+ z (+ z z))) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat z (+ 'a0 'a0))) -> ('a4 : (= nat z (+ z (+ 'a0 (+ z z))))) -> (= nat (+ z (+ z (+ z z))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= (+ z (+ z z)) (+ z (+ z z)))) -> ('a1 : (= (+ (+ z z) z) (+ z z))) -> (= (+ (+ z z) z) z)]",
        "problem_raw": "[ ('a0 :(= nat (+ z (+ z z)) (+ z (+ z z))) ) -> ('a1 : (= nat (+ (+ z z) z) (+ z z))) -> (= nat (+ (+ z z) z) z)]",
        "proof": [
            "theorem t : [('a0 : (= (+ z (+ z z)) (+ z (+ z z)))) -> ('a1 : (= (+ (+ z z) z) (+ z z))) -> (= (+ (+ z z) z) z)] {",
            "intro x : (= (+ z (+ z z)) (+ z (+ z z))).",
            "show (= (+ z z) z) by +_z.",
            "intro x0 : (= (+ (+ z z) z) (+ z z)).",
            "show (= (+ (+ z z) z) z) by rewrite.",
            "}"
        ],
        "logprob": -7.939488797406463,
        "actions": [
            "intro.",
            "c +_z",
            "=> (= (+ z z) z).",
            "intro.",
            "c rewrite",
            "=> (= (+ (+ z z) z) z)."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (+ z z)) (+ z (+ z z))) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : nat) -> ('a3 : (= (+ (+ z 'a0) 'a0) 'a0)) -> (= (+ (+ (+ (+ z 'a0) 'a0) 'a0) 'a0) (s z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : nat) -> ('a3 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> (= nat (+ (+ (+ (+ z 'a0) 'a0) 'a0) 'a0) (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ (+ (+ z z) (+ (s (+ z z)) z)) z))) -> (= (+ z (+ z z)) (s (+ (+ (+ z z) (+ (s (+ z z)) z)) z)))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z (+ (+ (+ z z) (+ (s (+ z z)) z)) z))) -> (= nat (+ z (+ z z)) (s (+ (+ (+ z z) (+ (s (+ z z)) z)) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= (+ (+ z 'a0) 'a0) 'a0)) -> (= 'a0 (+ (+ 'a0 'a0) 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> (= nat 'a0 (+ (+ 'a0 'a0) 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= (+ z (+ z z)) (+ z (+ z z)))) -> ('a1 : (= z (+ z (+ z (+ (+ z z) (+ z z)))))) -> ('a2 : (= (+ z (+ z (+ z z))) z)) -> ('a3 : nat) -> (= (+ z z) (+ z (+ (+ z z) (+ z z))))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (+ z z)) (+ z (+ z z))) ) -> ('a1 : (= nat z (+ z (+ z (+ (+ z z) (+ z z)))))) -> ('a2 : (= nat (+ z (+ z (+ z z))) z)) -> ('a3 : nat) -> (= nat (+ z z) (+ z (+ (+ z z) (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (+ z z)) (+ z (+ z z))) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= (+ z z) z)) -> ('a1 : (= z (+ z (+ z (+ (+ z z) (+ z z)))))) -> ('a2 : nat) -> (= (+ z (+ z (+ z z))) (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) z) ) -> ('a1 : (= nat z (+ z (+ z (+ (+ z z) (+ z z)))))) -> ('a2 : nat) -> (= nat (+ z (+ z (+ z z))) (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) z) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= (s (+ 'a0 'a0)) z)) -> ('a3 : (= z (+ (+ z 'a0) (+ z (+ z z))))) -> (= (+ z (+ z (+ z z))) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0))  -> ('a2 : (= nat (s (+ 'a0 'a0)) z)) -> ('a3 : (= nat z (+ (+ z 'a0) (+ z (+ z z))))) -> (= nat (+ z (+ z (+ z z))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= 'a0 (+ z (+ 'a0 z)))) -> ('a3 : (= z (+ z (+ z z)))) -> (= (+ (+ z z) (+ z (+ z z))) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat 'a0 (+ z (+ 'a0 z)))) -> ('a3 : (= nat z (+ z (+ z z)))) -> (= nat (+ (+ z z) (+ z (+ z z))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : nat) -> ('a3 : (= z (+ 'a0 (+ z 'a0)))) -> (= z (+ z (+ (+ (s 'a0) (+ (+ z 'a0) 'a0)) 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : nat) -> ('a3 : (= nat z (+ 'a0 (+ z 'a0)))) -> (= nat z (+ z (+ (+ (s 'a0) (+ (+ z 'a0) 'a0)) 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= z (+ z (+ z z)))) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= 'a1 (+ z 'a1))) -> (= (+ z (+ z 'a1)) z)]",
        "problem_raw": "[ ('a0 :(= nat z (+ z (+ z z))) ) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= nat 'a1 (+ z 'a1))) -> (= nat (+ z (+ z 'a1)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z (+ z z))) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= (+ 'a0 (+ (+ z z) z)) z)) -> ('a2 : nat) -> ('a3 : (= z (+ z z))) -> ('a4 : (= (+ z z) z)) -> (= z z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (+ 'a0 (+ (+ z z) z)) z)) -> ('a2 : nat) -> ('a3 : (= nat z (+ z z))) -> ('a4 : (= nat (+ z z) z)) -> (= nat z z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= (+ (+ 'a0 'a0) (s 'a0)) 'a0)) -> (= (+ (+ 'a0 'a0) (s 'a0)) (+ (+ 'a0 'a0) (s 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat (+ (+ 'a0 'a0) (s 'a0)) 'a0)) -> (= nat (+ (+ 'a0 'a0) (s 'a0)) (+ (+ 'a0 'a0) (s 'a0)))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= (+ (+ 'a0 'a0) (s 'a0)) 'a0)) -> (= (+ (+ 'a0 'a0) (s 'a0)) (+ (+ 'a0 'a0) (s 'a0)))] {",
            "intro x : nat.",
            "intro x0 : (= x (s x)).",
            "intro x1 : (= (+ (+ x x) (s x)) x).",
            "apply c0032.",
            "}"
        ],
        "logprob": -7.341947394669187,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "a c0032",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (+ (+ (+ (+ z z) z) z) (+ (s (+ z z)) z)) (+ z z))) -> ('a2 : nat) -> ('a3 : (= z (+ z z))) -> (= z (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (+ (+ (+ (+ z z) z) z) (+ (s (+ z z)) z)) (+ z z))) -> ('a2 : nat) -> ('a3 : (= nat z (+ z z))) -> (= nat z (+ z (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= (+ z 'a0) (+ (s (+ z z)) z))) -> ('a2 : (= z (+ (s (+ z z)) z))) -> ('a3 : nat) -> (= z (+ z (+ (s (+ z z)) (+ z z))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (+ z 'a0) (+ (s (+ z z)) z))) -> ('a2 : (= nat z (+ (s (+ z z)) z))) -> ('a3 : nat) -> (= nat z (+ z (+ (s (+ z z)) (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (+ z (+ z (+ z z))) (+ (+ (+ z z) z) z))) -> (= (+ z (+ z z)) z)]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (+ z (+ z (+ z z))) (+ (+ (+ z z) z) z))) -> (= nat (+ z (+ z z)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= (+ 'a0 (+ (+ z 'a0) (s z))) 'a0)) -> (= (+ 'a0 (+ z 'a0)) (s (+ 'a0 z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (+ 'a0 (+ (+ z 'a0) (s z))) 'a0)) -> (= nat (+ 'a0 (+ z 'a0)) (s (+ 'a0 z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= 'a1 'a1)) -> ('a3 : (= z (+ z (+ z z)))) -> (= (+ 'a1 (+ z z)) (+ 'a1 (+ z (+ z z))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat 'a1 'a1)) -> ('a3 : (= nat z (+ z (+ z z)))) -> (= nat (+ 'a1 (+ z z)) (+ 'a1 (+ z (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= z (+ (+ z z) z))) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= (+ z (+ z z)) (+ (s (+ z z)) z))) -> (= (+ (s (+ z z)) z) (+ (s (+ z z)) z))]",
        "problem_raw": "[ ('a0 :(= nat z (+ (+ z z) z)) ) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= nat (+ z (+ z z)) (+ (s (+ z z)) z))) -> (= nat (+ (s (+ z z)) z) (+ (s (+ z z)) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ (+ z z) z)) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= (+ (+ z z) (+ z z)) (+ (+ z z) (+ z z)))) -> (= (+ (s (+ z z)) (+ (s (+ z z)) z)) z)]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z z) (+ z z)) (+ (+ z z) (+ z z))) ) -> (= nat (+ (s (+ z z)) (+ (s (+ z z)) z)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z z) (+ z z)) (+ (+ z z) (+ z z))) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= z (+ (+ z z) z))) -> ('a1 : (= (s (+ z (+ z z))) (s (+ z z)))) -> ('a2 : nat) -> ('a3 : (= z (+ z z))) -> (= z (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z (+ (+ z z) z)) ) -> ('a1 : (= nat (s (+ z (+ z z))) (s (+ z z)))) -> ('a2 : nat) -> ('a3 : (= nat z (+ z z))) -> (= nat z (+ z (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ (+ z z) z)) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= (+ (+ z z) z) (+ z z))) -> ('a1 : nat) -> ('a2 : (= z (+ z (+ z z)))) -> ('a3 : (= (+ z (+ z z)) (+ z (+ z z)))) -> (= z (+ z (+ z (+ z z))))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z z) z) (+ z z)) ) -> ('a1 : nat) -> ('a2 : (= nat z (+ z (+ z z)))) -> ('a3 : (= nat (+ z (+ z z)) (+ z (+ z z)))) -> (= nat z (+ z (+ z (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z z) z) (+ z z)) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= (+ (+ z z) z) (+ (+ z z) z))) -> (= (+ (+ z (+ z z)) (+ (+ (+ z z) z) z)) (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z z) z) (+ (+ z z) z)) ) -> (= nat (+ (+ z (+ z z)) (+ (+ (+ z z) z) z)) (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z z) z) (+ (+ z z) z)) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= (+ z z) (+ z z))) -> ('a1 : (= z (+ z (+ (+ z z) (+ z z))))) -> (= z (+ z (+ (+ z z) (+ z z))))]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) (+ z z)) ) -> ('a1 : (= nat z (+ z (+ (+ z z) (+ z z))))) -> (= nat z (+ z (+ (+ z z) (+ z z))))]",
        "proof": [
            "theorem t : [('a0 : (= (+ z z) (+ z z))) -> ('a1 : (= z (+ z (+ (+ z z) (+ z z))))) -> (= z (+ z (+ (+ z z) (+ z z))))] {",
            "intro x : (= (+ z z) (+ z z)).",
            "intro _ : [('a1 : (= z (+ z (+ (+ z z) (+ z z))))) -> (= z (+ z (+ (+ z z) (+ z z))))].",
            "}"
        ],
        "logprob": -3.3117381135588917,
        "actions": [
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) (+ z z)) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= (+ z z) (+ z z))) -> (= (s (+ z (+ z (+ (+ z z) z)))) z)]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) (+ z z)) ) -> (= nat (s (+ z (+ z (+ (+ z z) z)))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) (+ z z)) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= (+ (+ z z) z) (+ (+ z z) z))) -> ('a1 : nat) -> ('a2 : (= z (+ (+ z z) 'a1))) -> (= (+ (+ (+ z z) 'a1) (+ (s (+ z z)) z)) (s z))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z z) z) (+ (+ z z) z)) ) -> ('a1 : nat) -> ('a2 : (= nat z (+ (+ z z) 'a1))) -> (= nat (+ (+ (+ z z) 'a1) (+ (s (+ z z)) z)) (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z z) z) (+ (+ z z) z)) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 (+ (+ 'a0 'a0) 'a0))) -> (= (+ 'a0 (+ 'a0 (+ 'a0 'a0))) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 (+ (+ 'a0 'a0) 'a0))) -> (= nat (+ 'a0 (+ 'a0 (+ 'a0 'a0))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= (+ 'a0 (+ 'a0 'a0)) z)) -> ('a3 : (= z (+ z 'a0))) -> (= (+ z (+ z z)) (+ z (+ z z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat (+ 'a0 (+ 'a0 'a0)) z)) -> ('a3 : (= nat z (+ z 'a0))) -> (= nat (+ z (+ z z)) (+ z (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= (+ (+ (+ z z) z) z) (+ (+ (+ z z) z) z))) -> ('a1 : (= (+ (+ (+ z z) z) z) (+ (s (+ z (s z))) z))) -> (= (+ (+ z z) z) (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ (+ z z) z) z) (+ (+ (+ z z) z) z)) ) -> ('a1 : (= nat (+ (+ (+ z z) z) z) (+ (s (+ z (s z))) z))) -> (= nat (+ (+ z z) z) (+ z z))]",
        "proof": [
            "theorem t : [('a0 : (= (+ (+ (+ z z) z) z) (+ (+ (+ z z) z) z))) -> ('a1 : (= (+ (+ (+ z z) z) z) (+ (s (+ z (s z))) z))) -> (= (+ (+ z z) z) (+ z z))] {",
            "intro x : (= (+ (+ (+ z z) z) z) (+ (+ (+ z z) z) z)).",
            "show (= (+ (+ z z) z) (+ z z)) by +_z.",
            "intro _ : [('a1 : (= (+ (+ (+ z z) z) z) (+ (s (+ z (s z))) z))) -> (= (+ (+ z z) z) (+ z z))].",
            "}"
        ],
        "logprob": -5.014550637643593,
        "actions": [
            "intro.",
            "c +_z",
            "=> (= (+ (+ z z) z) (+ z z)).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ (+ z z) z) z) (+ (+ (+ z z) z) z)) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= (+ 'a0 'a0) (s 'a0))) -> ('a4 : (= (+ (+ 'a0 'a0) (s 'a0)) z)) -> (= (+ (+ (s 'a0) z) (s 'a0)) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= nat (+ 'a0 'a0) (s 'a0))) -> ('a4 : (= nat (+ (+ 'a0 'a0) (s 'a0)) z))  -> (= nat (+ (+ (s 'a0) z) (s 'a0)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= nat (+ 'a0 'a0) (s 'a0))) -> ('a4 : (= nat (+ (+ 'a0 'a0) (s 'a0)) z)) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= z 'a0)) -> ('a3 : (= 'a0 'a0)) -> (= (+ (+ z 'a0) (+ z 'a0)) 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0))  -> ('a3 : (= nat 'a0 'a0)) -> (= nat (+ (+ z 'a0) (+ z 'a0)) 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= z (+ (+ z z) z))) -> ('a1 : (= z (+ (+ z z) (+ z (+ (s (+ z z)) z))))) -> (= (+ z (+ (+ z z) (+ (s (+ z z)) z))) z)]",
        "problem_raw": "[ ('a0 :(= nat z (+ (+ z z) z)) ) -> ('a1 : (= nat z (+ (+ z z) (+ z (+ (s (+ z z)) z))))) -> (= nat (+ z (+ (+ z z) (+ (s (+ z z)) z))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ (+ z z) z)) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= (+ z z) z)) -> ('a1 : (= (+ z (+ z (+ z z))) (+ z z))) -> (= (+ (+ z (+ z z)) (+ z z)) (+ z (+ z (+ z z))))]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) z) ) -> ('a1 : (= nat (+ z (+ z (+ z z))) (+ z z))) -> (= nat (+ (+ z (+ z z)) (+ z z)) (+ z (+ z (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) z) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= z (+ (+ 'a0 'a0) (s z)))) -> (= (+ (+ 'a0 'a0) (s z)) (+ (+ 'a0 'a0) (s z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0))  -> ('a2 : (= nat z (+ (+ 'a0 'a0) (s z)))) -> (= nat (+ (+ 'a0 'a0) (s z)) (+ (+ 'a0 'a0) (s z)))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= z (+ (+ 'a0 'a0) (s z)))) -> (= (+ (+ 'a0 'a0) (s z)) (+ (+ 'a0 'a0) (s z)))] {",
            "intro x : nat.",
            "intro x0 : (= x x).",
            "intro x1 : (= z (+ (+ x x) (s z))).",
            "apply c0044.",
            "}"
        ],
        "logprob": -7.632149264823413,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "a c0044",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= (+ (+ z z) z) z)) -> (= (+ z z) (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z z) z) z) ) -> (= nat (+ z z) (+ z (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z z) z) z) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ z 'a0) (+ (s (+ z z)) z)))) -> (= (+ 'a0 (+ (+ z 'a0) (+ (s (+ z z)) z))) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ z 'a0) (+ (s (+ z z)) z)))) -> (= nat (+ 'a0 (+ (+ z 'a0) (+ (s (+ z z)) z))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= (+ 'a0 'a0) 'a0)) -> ('a2 : (= (+ 'a0 'a0) 'a0)) -> ('a3 : (= (+ 'a0 'a0) 'a0)) -> (= z (+ 'a0 (+ 'a0 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (+ 'a0 'a0) 'a0)) -> ('a2 : (= nat (+ 'a0 'a0) 'a0)) -> ('a3 : (= nat (+ 'a0 'a0) 'a0))  -> (= nat z (+ 'a0 (+ 'a0 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat (+ 'a0 'a0) 'a0)) -> ('a2 : (= nat (+ 'a0 'a0) 'a0)) -> ('a3 : (= nat (+ 'a0 'a0) 'a0)) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= (+ (+ z (s z)) z) (+ z (s z)))) -> ('a1 : (= z (+ (+ z (s (+ z z))) z))) -> (= (+ (s (+ z (+ (+ (+ z (s z)) z) z))) z) (+ z (s z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z (s z)) z) (+ z (s z))) ) -> ('a1 : (= nat z (+ (+ z (s (+ z z))) z))) -> (= nat (+ (s (+ z (+ (+ (+ z (s z)) z) z))) z) (+ z (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z (s z)) z) (+ z (s z))) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= (+ 'a0 'a0) 'a0)) -> ('a3 : (= 'a0 (+ 'a0 'a0))) -> ('a4 : (= (+ 'a0 'a0) 'a0)) -> (= z (+ 'a0 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat (+ 'a0 'a0) 'a0)) -> ('a3 : (= nat 'a0 (+ 'a0 'a0))) -> ('a4 : (= nat (+ 'a0 'a0) 'a0)) -> (= nat z (+ 'a0 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= (+ 'a0 'a0) z)) -> ('a3 : (= z (+ z (+ z z)))) -> ('a4 : (= (+ z (+ z z)) z)) -> (= z (+ z (+ z z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat (+ 'a0 'a0) z)) -> ('a3 : (= nat z (+ z (+ z z)))) -> ('a4 : (= nat (+ z (+ z z)) z)) -> (= nat z (+ z (+ z z)))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= (+ 'a0 'a0) z)) -> ('a3 : (= z (+ z (+ z z)))) -> ('a4 : (= (+ z (+ z z)) z)) -> (= z (+ z (+ z z)))] {",
            "intro x : nat.",
            "intro x0 : (= x x).",
            "intro x1 : (= (+ x x) z).",
            "intro x2 : (= z (+ z (+ z z))).",
            "intro _ : [('a4 : (= (+ z (+ z z)) z)) -> (= z (+ z (+ z z)))].",
            "}"
        ],
        "logprob": -8.583346929293741,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= (+ z (+ z (+ z z))) z)) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= (+ z (+ z z)) (+ z (+ z z)))) -> (= (+ z (+ z z)) (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (+ z (+ z z))) z) ) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= nat (+ z (+ z z)) (+ z (+ z z)))) -> (= nat (+ z (+ z z)) (+ z (+ z z)))]",
        "proof": [
            "theorem t : [('a0 : (= (+ z (+ z (+ z z))) z)) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= (+ z (+ z z)) (+ z (+ z z)))) -> (= (+ z (+ z z)) (+ z (+ z z)))] {",
            "intro x : (= (+ z (+ z (+ z z))) z).",
            "intro x0 : nat.",
            "intro x1 : nat.",
            "intro _ : [('a3 : (= (+ z (+ z z)) (+ z (+ z z)))) -> (= (+ z (+ z z)) (+ z (+ z z)))].",
            "}"
        ],
        "logprob": -7.330146147950776,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (+ z (+ z z))) z) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= z (+ (+ z (+ (+ (+ z z) z) (+ z z))) z))) -> ('a1 : nat) -> ('a2 : (= z (+ (+ z z) (+ (s (+ z z)) z)))) -> (= (+ z z) (+ z z))]",
        "problem_raw": "[('a0 : (= nat z (+ (+ z (+ (+ (+ z z) z) (+ z z))) z))) -> ('a1 : nat) -> ('a2 : (= nat z (+ (+ z z) (+ (s (+ z z)) z)))) -> (= nat (+ z z) (+ z z))]",
        "proof": [
            "theorem t : [('a0 : (= z (+ (+ z (+ (+ (+ z z) z) (+ z z))) z))) -> ('a1 : nat) -> ('a2 : (= z (+ (+ z z) (+ (s (+ z z)) z)))) -> (= (+ z z) (+ z z))] {",
            "intro x : (= z (+ (+ z (+ (+ (+ z z) z) (+ z z))) z)).",
            "intro x0 : nat.",
            "intro x1 : (= z (+ (+ z z) (+ (s (+ z z)) z))).",
            "apply c0032.",
            "}"
        ],
        "logprob": -7.733478288639627,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "a c0032",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> (= (+ (+ (s 'a0) 'a0) (+ 'a0 'a0)) (+ 'a0 (+ (+ (s 'a0) 'a0) 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> (= nat (+ (+ (s 'a0) 'a0) (+ 'a0 'a0)) (+ 'a0 (+ (+ (s 'a0) 'a0) 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ z (+ (+ z z) z)) (+ z z)))) -> (= (+ 'a0 (+ (+ z (+ (+ z z) z)) z)) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ z (+ (+ z z) z)) (+ z z)))) -> (= nat (+ 'a0 (+ (+ z (+ (+ z z) z)) z)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> (= (+ (+ 'a0 'a0) (+ 'a0 'a0)) (+ (+ 'a0 'a0) z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> (= nat (+ (+ 'a0 'a0) (+ 'a0 'a0)) (+ (+ 'a0 'a0) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ z (+ z z)) (s z)))) -> (= z (+ (+ z (+ z (+ (+ z (+ (+ z (+ z z)) (s z))) z))) (s z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ z (+ z z)) (s z)))) -> (= nat z (+ (+ z (+ z (+ (+ z (+ (+ z (+ z z)) (s z))) z))) (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= z (+ (+ 'a0 'a0) 'a0))) -> (= (+ z (+ (+ 'a0 'a0) 'a0)) (+ (+ 'a0 'a0) 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat z (+ (+ 'a0 'a0) 'a0))) -> (= nat (+ z (+ (+ 'a0 'a0) 'a0)) (+ (+ 'a0 'a0) 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (s (+ z (+ z (+ z z)))) z)) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> ('a4 : (= (+ z (+ z (+ z z))) z)) -> (= z (+ z (+ z (+ z z))))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (s (+ z (+ z (+ z z)))) z)) -> ('a2 : nat) -> ('a3 : (= nat z (+ z (+ z z)))) -> ('a4 : (= nat (+ z (+ z (+ z z))) z)) -> (= nat z (+ z (+ z (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= z 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= (+ 'a0 'a0) 'a0)) -> (= (+ (+ 'a0 'a0) 'a0) (s z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0))  -> ('a4 : (= nat (+ 'a0 'a0) 'a0)) -> (= nat (+ (+ 'a0 'a0) 'a0) (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (+ (+ (+ z z) z) z) (+ z z))) -> (= (+ (+ (+ (+ z z) z) z) (s z)) (+ (+ (+ z z) z) (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (+ (+ (+ z z) z) z) (+ z z))) -> (= nat (+ (+ (+ (+ z z) z) z) (s z)) (+ (+ (+ z z) z) (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= z z)) -> ('a1 : nat) -> ('a2 : (= z (+ (+ 'a1 (+ z z)) (s 'a1)))) -> (= (+ (+ 'a1 (+ z z)) (+ z (+ z z))) z)]",
        "problem_raw": "[('a0 : (= nat z z)) -> ('a1 : nat) -> ('a2 : (= nat z (+ (+ 'a1 (+ z z)) (s 'a1)))) -> (= nat (+ (+ 'a1 (+ z z)) (+ z (+ z z))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= z 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= 'a0 'a0)) -> ('a5 : (= z z)) -> (= (+ 'a0 'a0) (+ 'a0 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 'a0)) -> ('a5 : (= nat z z)) -> (= nat (+ 'a0 'a0) (+ 'a0 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (+ (+ z (+ z (+ z z))) z) z)) -> (= (+ (+ (+ z (+ z z)) z) z) (+ (+ z (+ z z)) z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (+ (+ z (+ z (+ z z))) z) z)) -> (= nat (+ (+ (+ z (+ z z)) z) z) (+ (+ z (+ z z)) z))]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> ('a1 : (= (+ (+ z (+ z (+ z z))) z) z)) -> (= (+ (+ (+ z (+ z z)) z) z) (+ (+ z (+ z z)) z))] {",
            "intro x : (= z z).",
            "intro x0 : (= (+ (+ z (+ z (+ z z))) z) z).",
            "show (= (+ (+ (+ z (+ z z)) z) z) (+ (+ z (+ z z)) z)) by +_z.",
            "}"
        ],
        "logprob": -7.028756720193528,
        "actions": [
            "intro.",
            "intro.",
            "c +_z",
            "=> (= (+ (+ (+ z (+ z z)) z) z) (+ (+ z (+ z z)) z))."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= (+ (+ (+ (+ z z) z) z) z) (+ (+ (+ z z) z) z))) -> ('a1 : nat) -> ('a2 : (= z (+ (+ z (+ z z)) 'a1))) -> (= (+ (+ (+ z (+ z z)) z) z) (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ (+ (+ z z) z) z) z) (+ (+ (+ z z) z) z)) ) -> ('a1 : nat) -> ('a2 : (= nat z (+ (+ z (+ z z)) 'a1))) -> (= nat (+ (+ (+ z (+ z z)) z) z) (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ (+ (+ z z) z) z) z) (+ (+ (+ z z) z) z)) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= (+ z z) z)) -> ('a1 : (= (s (+ z (+ z (+ z z)))) (+ z (+ z z)))) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> ('a4 : (= (+ (+ z z) z) (+ z (+ z z)))) -> (= z (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) z) ) -> ('a1 : (= nat (s (+ z (+ z (+ z z)))) (+ z (+ z z)))) -> ('a2 : nat) -> ('a3 : (= nat z (+ z (+ z z)))) -> ('a4 : (= nat (+ (+ z z) z) (+ z (+ z z)))) -> (= nat z (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) z) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= (+ (+ z 'a0) 'a0) 'a0)) -> (= (+ 'a0 (+ 'a0 'a0)) (+ 'a0 (+ 'a0 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat 'a0 'a0))  -> ('a3 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> (= nat (+ 'a0 (+ 'a0 'a0)) (+ 'a0 (+ 'a0 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= z (+ 'a0 'a0))) -> (= z (+ 'a0 (+ z (+ (+ z z) z))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat z (+ 'a0 'a0))) -> (= nat z (+ 'a0 (+ z (+ (+ z z) z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (s (+ z (+ z (+ z z)))) z)) -> (= (s (+ z (+ z (+ z z)))) (s (+ z (+ z (+ z z)))))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (s (+ z (+ z (+ z z)))) z)) -> (= nat (s (+ z (+ z (+ z z)))) (s (+ z (+ z (+ z z)))))]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> ('a1 : (= (s (+ z (+ z (+ z z)))) z)) -> (= (s (+ z (+ z (+ z z)))) (s (+ z (+ z (+ z z)))))] {",
            "intro x : (= z z).",
            "intro x0 : (= (s (+ z (+ z (+ z z)))) z).",
            "apply c0134.",
            "}"
        ],
        "logprob": -5.8489437988033535,
        "actions": [
            "intro.",
            "intro.",
            "a c0134",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : nat) -> (= (+ (+ z 'a0) 'a0) (s 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : nat) -> (= nat (+ (+ z 'a0) 'a0) (s 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= z (+ (+ 'a0 'a0) (s z)))) -> (= 'a0 (+ (+ 'a0 (s (+ (s z) (s z)))) (+ z (s z))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat z (+ (+ 'a0 'a0) (s z)))) -> (= nat 'a0 (+ (+ 'a0 (s (+ (s z) (s z)))) (+ z (s z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= z (+ (+ z 'a0) 'a0))) -> ('a3 : (= (+ (+ z 'a0) 'a0) (s 'a0))) -> (= (s (+ (+ z (s z)) 'a0)) (s z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat z (+ (+ z 'a0) 'a0))) -> ('a3 : (= nat (+ (+ z 'a0) 'a0) (s 'a0))) -> (= nat (s (+ (+ z (s z)) 'a0)) (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= (+ (+ 'a0 'a0) (s 'a0)) 'a0)) -> ('a3 : (= (+ (+ 'a0 'a0) (s 'a0)) (+ (+ 'a0 'a0) (s 'a0)))) -> (= (+ (+ 'a0 'a0) (s 'a0)) (+ (+ 'a0 'a0) (s 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat (+ (+ 'a0 'a0) (s 'a0)) 'a0)) -> ('a3 : (= nat (+ (+ 'a0 'a0) (s 'a0)) (+ (+ 'a0 'a0) (s 'a0))))  -> (= nat (+ (+ 'a0 'a0) (s 'a0)) (+ (+ 'a0 'a0) (s 'a0)))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= (+ (+ 'a0 'a0) (s 'a0)) 'a0)) -> ('a3 : (= (+ (+ 'a0 'a0) (s 'a0)) (+ (+ 'a0 'a0) (s 'a0)))) -> (= (+ (+ 'a0 'a0) (s 'a0)) (+ (+ 'a0 'a0) (s 'a0)))] {",
            "intro x : nat.",
            "intro x0 : (= x x).",
            "intro x1 : (= (+ (+ x x) (s x)) x).",
            "intro _ : [('a3 : (= (+ (+ x x) (s x)) (+ (+ x x) (s x)))) -> (= (+ (+ x x) (s x)) (+ (+ x x) (s x)))].",
            "}"
        ],
        "logprob": -6.621231960000055,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat (+ (+ 'a0 'a0) (s 'a0)) 'a0)) -> ('a3 : (= nat (+ (+ 'a0 'a0) (s 'a0)) (+ (+ 'a0 'a0) (s 'a0)))) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : nat) -> ('a4 : (= 'a0 'a0)) -> (= z z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : nat) -> ('a4 : (= nat 'a0 'a0)) -> (= nat z z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 (s (+ (+ z (s z)) (s z)))) z))) -> (= z (+ (+ 'a0 (s (s (+ z z)))) z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 (s (+ (+ z (s z)) (s z)))) z))) -> (= nat z (+ (+ 'a0 (s (s (+ z z)))) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 z)) -> ('a4 : (= z 'a0)) -> (= z 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 z)) -> ('a4 : (= nat z 'a0))  -> (= nat z 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 z)) -> ('a4 : (= z 'a0)) -> (= z 'a0)] {",
            "intro x : nat.",
            "intro x0 : (= z x).",
            "intro x1 : (= x x).",
            "intro x2 : (= x z).",
            "intro _ : [('a4 : (= z x)) -> (= z x)].",
            "}"
        ],
        "logprob": -9.197289030250635,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 z)) -> ('a4 : (= nat z 'a0)) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= (+ (+ z 'a0) 'a0) 'a0)) -> (= 'a0 (+ (+ 'a0 'a0) 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> (= nat 'a0 (+ (+ 'a0 'a0) 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> (= (+ (+ (+ 'a0 'a0) 'a0) (s z)) (+ (+ (+ 'a0 'a0) 'a0) (s z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> (= nat (+ (+ (+ 'a0 'a0) 'a0) (s z)) (+ (+ (+ 'a0 'a0) 'a0) (s z)))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> (= (+ (+ (+ 'a0 'a0) 'a0) (s z)) (+ (+ (+ 'a0 'a0) 'a0) (s z)))] {",
            "intro x : nat.",
            "intro x0 : (= x x).",
            "apply c0032.",
            "}"
        ],
        "logprob": -5.879239328881014,
        "actions": [
            "intro.",
            "intro.",
            "a c0032",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= z (+ 'a0 'a0))) -> ('a3 : (= z (+ 'a0 (+ z z)))) -> (= (+ 'a0 (s z)) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat z (+ 'a0 'a0))) -> ('a3 : (= nat z (+ 'a0 (+ z z)))) -> (= nat (+ 'a0 (s z)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= z 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= z 'a0)) -> (= (+ z (+ z 'a0)) (+ z (+ z 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat z 'a0)) -> (= nat (+ z (+ z 'a0)) (+ z (+ z 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= (+ (+ 'a0 'a0) (s 'a0)) 'a0)) -> ('a3 : (= (+ (+ 'a0 'a0) (s 'a0)) (s 'a0))) -> (= (+ (+ (s 'a0) (s 'a0)) (s 'a0)) (s (+ (+ (s 'a0) (s 'a0)) (s 'a0))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat (+ (+ 'a0 'a0) (s 'a0)) 'a0)) -> ('a3 : (= nat (+ (+ 'a0 'a0) (s 'a0)) (s 'a0)))  -> (= nat (+ (+ (s 'a0) (s 'a0)) (s 'a0)) (s (+ (+ (s 'a0) (s 'a0)) (s 'a0))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat (+ (+ 'a0 'a0) (s 'a0)) 'a0)) -> ('a3 : (= nat (+ (+ 'a0 'a0) (s 'a0)) (s 'a0))) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (s z) (s z))) -> ('a2 : (= z (+ (+ z z) (s z)))) -> ('a3 : (= (+ z z) (+ z (s z)))) -> (= z (+ z (s z)))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (s z) (s z))) -> ('a2 : (= nat z (+ (+ z z) (s z)))) -> ('a3 : (= nat (+ z z) (+ z (s z)))) -> (= nat z (+ z (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 z)) -> ('a4 : (= z 'a0)) -> ('a5 : (= z 'a0)) -> (= 'a0 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 z)) -> ('a4 : (= nat z 'a0))  -> ('a5 : (= nat z 'a0)) -> (= nat 'a0 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 z)) -> ('a4 : (= z 'a0)) -> ('a5 : (= z 'a0)) -> (= 'a0 'a0)] {",
            "intro x : nat.",
            "intro x0 : (= z x).",
            "intro x1 : (= x x).",
            "intro x2 : (= x z).",
            "intro x3 : (= z x).",
            "intro _ : [('a5 : (= z x)) -> (= x x)].",
            "}"
        ],
        "logprob": -10.41296486026316,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 z)) -> ('a4 : (= nat z 'a0)) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= z (+ z (+ z z)))) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= (+ z (+ z z)) z)) -> (= (+ 'a2 (+ z z)) (s z))]",
        "problem_raw": "[ ('a0 :(= nat z (+ z (+ z z))) ) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= nat (+ z (+ z z)) z)) -> (= nat (+ 'a2 (+ z z)) (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z (+ z z))) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ (+ z z) (+ (s (+ z (+ (+ z z) (s z)))) z)))) -> (= z (+ (+ z z) (+ (s (+ z (+ (+ z z) (s z)))) (s (+ z z)))))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z (+ (+ z z) (+ (s (+ z (+ (+ z z) (s z)))) z)))) -> (= nat z (+ (+ z z) (+ (s (+ z (+ (+ z z) (s z)))) (s (+ z z)))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> (= (+ 'a0 (+ (s 'a0) 'a0)) (+ (+ (s 'a0) (+ (+ (s 'a0) 'a0) 'a0)) 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> (= nat (+ 'a0 (+ (s 'a0) 'a0)) (+ (+ (s 'a0) (+ (+ (s 'a0) 'a0) 'a0)) 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> (= (+ 'a0 (+ z (+ z z))) (s (+ z z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> (= nat (+ 'a0 (+ z (+ z z))) (s (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= (+ z z) z)) -> ('a1 : (= (+ z (+ z (+ (+ z (+ z z)) (s z)))) (+ (+ z (+ z z)) z))) -> (= (+ z (+ z (+ z z))) (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) z) ) -> ('a1 : (= nat (+ z (+ z (+ (+ z (+ z z)) (s z)))) (+ (+ z (+ z z)) z))) -> (= nat (+ z (+ z (+ z z))) (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) z) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 z) (+ z 'a0)))) -> ('a2 : (= z (+ (+ z (+ (+ z (s (+ z z))) z)) (+ z z)))) -> (= (+ 'a0 z) (+ (+ z z) z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 z) (+ z 'a0)))) -> ('a2 : (= nat z (+ (+ z (+ (+ z (s (+ z z))) z)) (+ z z)))) -> (= nat (+ 'a0 z) (+ (+ z z) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (+ z 'a0) (+ z z)) (s z)))) -> ('a2 : (= (+ (+ z (+ z z)) z) (+ z (+ z z)))) -> (= (+ z (+ z z)) (+ z (+ z z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (+ z 'a0) (+ z z)) (s z)))) -> ('a2 : (= nat (+ (+ z (+ z z)) z) (+ z (+ z z)))) -> (= nat (+ z (+ z z)) (+ z (+ z z)))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (+ z 'a0) (+ z z)) (s z)))) -> ('a2 : (= (+ (+ z (+ z z)) z) (+ z (+ z z)))) -> (= (+ z (+ z z)) (+ z (+ z z)))] {",
            "intro x : nat.",
            "intro x0 : (= x (+ (+ (+ z x) (+ z z)) (s z))).",
            "intro x1 : (= (+ (+ z (+ z z)) z) (+ z (+ z z))).",
            "apply c0032.",
            "}"
        ],
        "logprob": -7.637805671964918,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "a c0032",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= (+ (+ z 'a0) 'a0) (+ (+ z 'a0) 'a0))) -> (= z (+ z (+ z 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat (+ (+ z 'a0) 'a0) (+ (+ z 'a0) 'a0)))  -> (= nat z (+ z (+ z 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat (+ (+ z 'a0) 'a0) (+ (+ z 'a0) 'a0))) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : nat) -> ('a4 : (= z (+ (+ z 'a0) (s z)))) -> (= (+ (+ z 'a0) (s z)) (+ z (s z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : nat) -> ('a4 : (= nat z (+ (+ z 'a0) (s z)))) -> (= nat (+ (+ z 'a0) (s z)) (+ z (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= (+ (s z) z) (+ z (s z)))) -> ('a1 : (= (+ (s (+ (s z) (+ z (+ z z)))) z) (+ z (s z)))) -> (= (+ (s z) (+ z z)) (+ z (s z)))]",
        "problem_raw": "[('a0 : (= nat (+ (s z) z) (+ z (s z)))) -> ('a1 : (= nat (+ (s (+ (s z) (+ z (+ z z)))) z) (+ z (s z)))) -> (= nat (+ (s z) (+ z z)) (+ z (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ (+ (+ (+ z z) z) z) z))) -> (= (+ (+ (+ (+ z z) z) z) z) (+ (+ z z) (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z (+ (+ (+ (+ z z) z) z) z))) -> (= nat (+ (+ (+ (+ z z) z) z) z) (+ (+ z z) (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= z (+ (+ (+ z z) (+ (s (+ z z)) z)) z))) -> (= (+ z (+ z z)) (+ z (+ (s (+ z z)) z)))]",
        "problem_raw": "[('a0 : (= nat z (+ (+ (+ z z) (+ (s (+ z z)) z)) z))) -> (= nat (+ z (+ z z)) (+ z (+ (s (+ z z)) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> (= (+ 'a0 'a0) (+ z (+ (+ (+ z 'a0) z) (+ z z))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> (= nat (+ 'a0 'a0) (+ z (+ (+ (+ z 'a0) z) (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= z 'a0)) -> ('a3 : nat) -> ('a4 : (= 'a0 'a0)) -> (= z z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat z 'a0)) -> ('a3 : nat) -> ('a4 : (= nat 'a0 'a0)) -> (= nat z z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= (s 'a0) (s 'a0))) -> ('a2 : nat) -> ('a3 : (= (+ (+ 'a0 'a0) 'a0) (s 'a0))) -> (= (+ (+ 'a0 'a0) (s 'a0)) (+ (+ 'a0 'a0) (s 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (s 'a0) (s 'a0))) -> ('a2 : nat) -> ('a3 : (= nat (+ (+ 'a0 'a0) 'a0) (s 'a0))) -> (= nat (+ (+ 'a0 'a0) (s 'a0)) (+ (+ 'a0 'a0) (s 'a0)))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= (s 'a0) (s 'a0))) -> ('a2 : nat) -> ('a3 : (= (+ (+ 'a0 'a0) 'a0) (s 'a0))) -> (= (+ (+ 'a0 'a0) (s 'a0)) (+ (+ 'a0 'a0) (s 'a0)))] {",
            "intro x : nat.",
            "intro x0 : (= (s x) (s x)).",
            "intro x1 : nat.",
            "intro x2 : (= (+ (+ x x) x) (s x)).",
            "apply c0032.",
            "}"
        ],
        "logprob": -8.494079501086647,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "a c0032",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 z)) -> ('a3 : (= z (+ 'a0 'a0))) -> (= (+ (+ z 'a0) 'a0) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 z)) -> ('a3 : (= nat z (+ 'a0 'a0))) -> (= nat (+ (+ z 'a0) 'a0) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= z (+ (+ 'a0 'a0) (s z)))) -> (= (+ z (+ z (+ (s (+ z z)) z))) (+ z z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat z (+ (+ 'a0 'a0) (s z)))) -> (= nat (+ z (+ z (+ (s (+ z z)) z))) (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : nat) -> ('a1 : (= z (+ (+ z 'a0) z))) -> ('a2 : (= (+ 'a0 (+ z z)) z)) -> (= (+ 'a0 (+ z z)) (+ z (+ z z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z (+ (+ z 'a0) z))) -> ('a2 : (= nat (+ 'a0 (+ z z)) z)) -> (= nat (+ 'a0 (+ z z)) (+ z (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 4,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ (+ (+ (+ z z) z) z) (s z)))) -> (= (+ z (+ z z)) (s z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z (+ (+ (+ (+ z z) z) z) (s z)))) -> (= nat (+ z (+ z z)) (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= z 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= 'a0 z)) -> (= 'a0 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 z))  -> (= nat 'a0 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= z 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= 'a0 z)) -> (= 'a0 'a0)] {",
            "intro x : nat.",
            "intro x0 : (= z x).",
            "intro x1 : (= z x).",
            "intro x2 : (= x x).",
            "intro _ : [('a4 : (= x z)) -> (= x x)].",
            "}"
        ],
        "logprob": -6.347205452579908,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 z)) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= (+ 'a0 'a0) 'a0)) -> (= (+ 'a0 (+ 'a0 'a0)) (+ 'a0 (+ 'a0 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= nat (+ 'a0 'a0) 'a0)) -> (= nat (+ 'a0 (+ 'a0 'a0)) (+ 'a0 (+ 'a0 'a0)))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= (+ 'a0 'a0) 'a0)) -> (= (+ 'a0 (+ 'a0 'a0)) (+ 'a0 (+ 'a0 'a0)))] {",
            "intro x : nat.",
            "intro x0 : (= x (+ (+ (s x) x) x)).",
            "intro x1 : (= (+ x x) x).",
            "apply c0032.",
            "}"
        ],
        "logprob": -5.9085984102591915,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "a c0032",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 z) (+ z 'a0)))) -> (= 'a0 (+ (+ 'a0 z) (+ z (+ (+ 'a0 z) (+ z 'a0)))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 z) (+ z 'a0)))) -> (= nat 'a0 (+ (+ 'a0 z) (+ z (+ (+ 'a0 z) (+ z 'a0)))))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 z) (+ z 'a0)))) -> (= 'a0 (+ (+ 'a0 z) (+ z (+ (+ 'a0 z) (+ z 'a0)))))] {",
            "intro x : nat.",
            "intro x0 : (= x (+ (+ x z) (+ z x))).",
            "show (= x (+ (+ x z) (+ z (+ (+ x z) (+ z x))))) by rewrite.",
            "}"
        ],
        "logprob": -4.515237967952926,
        "actions": [
            "intro.",
            "intro.",
            "c rewrite",
            "=> (= x (+ (+ x z) (+ z (+ (+ x z) (+ z x)))))."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> (= 'a0 (s 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0))  -> (= nat 'a0 (s 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= (+ 'a0 'a0) 'a0)) -> ('a3 : (= (+ 'a0 'a0) (+ 'a0 'a0))) -> ('a4 : (= z (+ z 'a0))) -> (= z (+ (+ 'a0 'a0) 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat (+ 'a0 'a0) 'a0)) -> ('a3 : (= nat (+ 'a0 'a0) (+ 'a0 'a0)))  -> ('a4 : (= nat z (+ z 'a0))) -> (= nat z (+ (+ 'a0 'a0) 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat (+ 'a0 'a0) 'a0)) -> ('a3 : (= nat (+ 'a0 'a0) (+ 'a0 'a0))) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= (+ (+ z (s z)) z) (+ z (s z)))) -> (= (+ (s z) (+ z (s z))) z)]",
        "problem_raw": "[('a0 : (= nat (+ (+ z (s z)) z) (+ z (s z)))) -> (= nat (+ (s z) (+ z (s z))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= z z)) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= z (+ 'a1 (+ z z)))) -> (= (+ (+ z z) z) (+ z (+ z (+ z z))))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= nat z (+ 'a1 (+ z z)))) -> (= nat (+ (+ z z) z) (+ z (+ z (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= (+ 'a0 'a0) (s 'a0))) -> ('a4 : (= (+ (+ 'a0 'a0) (s 'a0)) z)) -> (= (+ (+ 'a0 'a0) (s (s 'a0))) (s z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= nat (+ 'a0 'a0) (s 'a0))) -> ('a4 : (= nat (+ (+ 'a0 'a0) (s 'a0)) z))  -> (= nat (+ (+ 'a0 'a0) (s (s 'a0))) (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= nat (+ 'a0 'a0) (s 'a0))) -> ('a4 : (= nat (+ (+ 'a0 'a0) (s 'a0)) z)) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= (+ z (+ z z)) (+ z (+ z z)))) -> ('a1 : (= z (+ z (+ z (+ (+ z z) (+ z z)))))) -> (= z (+ z (+ z (+ z (+ z (+ (+ z z) (+ z z)))))))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (+ z z)) (+ z (+ z z))) ) -> ('a1 : (= nat z (+ z (+ z (+ (+ z z) (+ z z)))))) -> (= nat z (+ z (+ z (+ z (+ z (+ (+ z z) (+ z z)))))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (+ z z)) (+ z (+ z z))) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (+ z 'a0) (+ z (+ (s (+ z z)) z))) (+ z z)))) -> (= z (+ (+ (+ (+ z 'a0) (s z)) (s (+ (s (+ z z)) z))) z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (+ z 'a0) (+ z (+ (s (+ z z)) z))) (+ z z)))) -> (= nat z (+ (+ (+ (+ z 'a0) (s z)) (s (+ (s (+ z z)) z))) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (s (+ z (+ z (+ z z)))) z)) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> (= (+ z (+ (+ z z) z)) z)]",
        "problem_raw": "[('a0 : (= nat z z)) -> ('a1 : (= nat (s (+ z (+ z (+ z z)))) z)) -> ('a2 : nat) -> ('a3 : (= nat z (+ z (+ z z)))) -> (= nat (+ z (+ (+ z z) z)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= (+ z z) z)) -> ('a1 : nat) -> ('a2 : (= (+ z (+ z (+ (s (+ z (+ z z))) z))) (+ 'a1 (+ z z)))) -> (= (+ z (+ z z)) (s (+ z (+ z z))))]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) z) ) -> ('a1 : nat) -> ('a2 : (= nat (+ z (+ z (+ (s (+ z (+ z z))) z))) (+ 'a1 (+ z z)))) -> (= nat (+ z (+ z z)) (s (+ z (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) z) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= 'a0 (+ (+ 'a0 'a0) (s z)))) -> ('a3 : (= z (+ 'a0 'a0))) -> (= (+ (+ (+ 'a0 'a0) 'a0) (s z)) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat 'a0 (+ (+ 'a0 'a0) (s z)))) -> ('a3 : (= nat z (+ 'a0 'a0))) -> (= nat (+ (+ (+ 'a0 'a0) 'a0) (s z)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ (+ z z) (+ z z)))) -> (= z (+ (+ z (+ z z)) (+ z (+ z z))))]",
        "problem_raw": "[('a0 : (= nat z z)) -> ('a1 : (= nat z (+ (+ z z) (+ z z)))) -> (= nat z (+ (+ z (+ z z)) (+ z (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= (+ z (+ z (+ (s (+ z (s z))) z))) z)) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z (+ z z))))) -> (= z (+ z (+ (+ 'a2 (+ z z)) z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (+ z (+ (s (+ z (s z))) z))) z) ) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= nat z (+ z (+ z (+ z z))))) -> (= nat z (+ z (+ (+ 'a2 (+ z z)) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (+ z (+ (s (+ z (s z))) z))) z) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= z (+ z z))) -> ('a1 : (= z (+ (+ (+ z z) (+ z z)) (+ z z)))) -> (= (+ z z) (s (+ z (+ z z))))]",
        "problem_raw": "[ ('a0 :(= nat z (+ z z)) ) -> ('a1 : (= nat z (+ (+ (+ z z) (+ z z)) (+ z z)))) -> (= nat (+ z z) (s (+ z (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z z)) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= z (+ z z))) -> ('a1 : (= z (+ (+ z (+ z z)) (+ (s (+ z z)) z)))) -> ('a2 : nat) -> ('a3 : (= z (+ z z))) -> (= z (+ z (+ z (+ (+ z (+ z z)) z))))]",
        "problem_raw": "[ ('a0 :(= nat z (+ z z)) ) -> ('a1 : (= nat z (+ (+ z (+ z z)) (+ (s (+ z z)) z)))) -> ('a2 : nat) -> ('a3 : (= nat z (+ z z))) -> (= nat z (+ z (+ z (+ (+ z (+ z z)) z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z z)) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= (+ (+ z z) z) (+ (+ z z) z))) -> ('a1 : nat) -> ('a2 : (= z (+ (+ z z) 'a1))) -> (= z (+ (+ (+ (+ (+ z z) 'a1) z) z) 'a1))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z z) z) (+ (+ z z) z)) ) -> ('a1 : nat) -> ('a2 : (= nat z (+ (+ z z) 'a1))) -> (= nat z (+ (+ (+ (+ (+ z z) 'a1) z) z) 'a1))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z z) z) (+ (+ z z) z)) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= 'a0 (+ (+ 'a0 'a0) (s z)))) -> (= (+ 'a0 (s (+ (+ 'a0 'a0) (s z)))) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat 'a0 (+ (+ 'a0 'a0) (s z)))) -> (= nat (+ 'a0 (s (+ (+ 'a0 'a0) (s z)))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= z 'a0)) -> ('a3 : (= z (+ (+ z 'a0) (s z)))) -> ('a4 : (= z (+ (+ z 'a0) (s z)))) -> (= (+ (+ z 'a0) (s z)) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat z (+ (+ z 'a0) (s z)))) -> ('a4 : (= nat z (+ (+ z 'a0) (s z))))  -> (= nat (+ (+ z 'a0) (s z)) z)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= z 'a0)) -> ('a3 : (= z (+ (+ z 'a0) (s z)))) -> ('a4 : (= z (+ (+ z 'a0) (s z)))) -> (= (+ (+ z 'a0) (s z)) z)] {",
            "intro x : nat.",
            "intro x0 : (= x x).",
            "intro x1 : (= z x).",
            "intro x2 : (= z (+ (+ z x) (s z))).",
            "show (= (+ (+ z x) (s z)) z) by eq_symm.",
            "intro _ : [('a4 : (= z (+ (+ z x) (s z)))) -> (= (+ (+ z x) (s z)) z)].",
            "}"
        ],
        "logprob": -8.559067641168078,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "c eq_symm",
            "=> (= (+ (+ z x) (s z)) z).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat z (+ (+ z 'a0) (s z)))) -> ('a4 : (= nat z (+ (+ z 'a0) (s z)))) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (s (+ z z)) (s (+ z z)))) -> ('a2 : (= z (+ (s z) z))) -> (= z (+ (s z) z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (s (+ z z)) (s (+ z z)))) -> ('a2 : (= nat z (+ (s z) z))) -> (= nat z (+ (s z) z))]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> ('a1 : (= (s (+ z z)) (s (+ z z)))) -> ('a2 : (= z (+ (s z) z))) -> (= z (+ (s z) z))] {",
            "intro x : (= z z).",
            "intro x0 : (= (s (+ z z)) (s (+ z z))).",
            "intro _ : [('a2 : (= z (+ (s z) z))) -> (= z (+ (s z) z))].",
            "}"
        ],
        "logprob": -3.021950633984601,
        "actions": [
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= z (+ z z))) -> ('a1 : (= z (+ (+ z (+ z z)) (+ (s (+ z z)) z)))) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z (+ z z))))) -> (= z (+ z (+ z (+ z z))))]",
        "problem_raw": "[ ('a0 :(= nat z (+ z z)) ) -> ('a1 : (= nat z (+ (+ z (+ z z)) (+ (s (+ z z)) z)))) -> ('a2 : nat) -> ('a3 : (= nat z (+ z (+ z (+ z z))))) -> (= nat z (+ z (+ z (+ z z))))]",
        "proof": [
            "theorem t : [('a0 : (= z (+ z z))) -> ('a1 : (= z (+ (+ z (+ z z)) (+ (s (+ z z)) z)))) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z (+ z z))))) -> (= z (+ z (+ z (+ z z))))] {",
            "intro x : (= z (+ z z)).",
            "intro x0 : (= z (+ (+ z (+ z z)) (+ (s (+ z z)) z))).",
            "intro x1 : nat.",
            "intro _ : [('a3 : (= z (+ z (+ z (+ z z))))) -> (= z (+ z (+ z (+ z z))))].",
            "}"
        ],
        "logprob": -5.205454199437471,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z z)) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 (+ (+ z z) z)) z))) -> (= 'a0 (+ (+ 'a0 (+ (+ (+ z (+ (+ z z) z)) z) z)) z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 (+ (+ z z) z)) z))) -> (= nat 'a0 (+ (+ 'a0 (+ (+ (+ z (+ (+ z z) z)) z) z)) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (s (+ z (+ z (+ z z)))) z)) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> (= z (s (+ z (+ z (+ z z)))))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (s (+ z (+ z (+ z z)))) z)) -> ('a2 : nat) -> ('a3 : (= nat z (+ z (+ z z)))) -> (= nat z (s (+ z (+ z (+ z z)))))]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> ('a1 : (= (s (+ z (+ z (+ z z)))) z)) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> (= z (s (+ z (+ z (+ z z)))))] {",
            "intro x : (= z z).",
            "intro x0 : (= (s (+ z (+ z (+ z z)))) z).",
            "intro x1 : nat.",
            "show (= z (s (+ z (+ z (+ z z))))) by eq_symm.",
            "intro _ : [('a3 : (= z (+ z (+ z z)))) -> (= z (s (+ z (+ z (+ z z)))))].",
            "}"
        ],
        "logprob": -6.46265785191405,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "c eq_symm",
            "=> (= z (s (+ z (+ z (+ z z))))).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= (+ (+ z 'a0) 'a0) 'a0)) -> (= 'a0 z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> (= nat 'a0 z)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= (+ (+ z 'a0) 'a0) 'a0)) -> (= 'a0 z)] {",
            "intro x : nat.",
            "intro x0 : (= x z).",
            "intro x1 : (= x x).",
            "intro _ : [('a3 : (= (+ (+ z x) x) x)) -> (= x z)].",
            "}"
        ],
        "logprob": -5.183110331758543,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= z z)) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : nat) -> ('a4 : (= 'a1 (s z))) -> (= (+ (+ 'a1 z) 'a1) (+ z (s z)))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : nat) -> ('a4 : (= nat 'a1 (s z))) -> (= nat (+ (+ 'a1 z) 'a1) (+ z (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= (s (+ 'a0 z)) z)) -> ('a3 : (= z (+ (+ z 'a0) z))) -> (= z (+ (+ z 'a0) z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat (s (+ 'a0 z)) z)) -> ('a3 : (= nat z (+ (+ z 'a0) z))) -> (= nat z (+ (+ z 'a0) z))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= (s (+ 'a0 z)) z)) -> ('a3 : (= z (+ (+ z 'a0) z))) -> (= z (+ (+ z 'a0) z))] {",
            "intro x : nat.",
            "intro x0 : (= x z).",
            "intro x1 : (= (s (+ x z)) z).",
            "intro _ : [('a3 : (= z (+ (+ z x) z))) -> (= z (+ (+ z x) z))].",
            "}"
        ],
        "logprob": -4.950173661387202,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : nat) -> ('a3 : (= z (+ 'a0 'a0))) -> (= (+ z (+ 'a0 'a0)) (s z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : nat) -> ('a3 : (= nat z (+ 'a0 'a0))) -> (= nat (+ z (+ 'a0 'a0)) (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= (+ z (+ z (+ z (+ z z)))) (+ z (+ z (+ z (+ z z)))))) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> (= z (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (+ z (+ z (+ z z)))) (+ z (+ z (+ z (+ z z))))) ) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= nat z (+ z (+ z z)))) -> (= nat z (+ z (+ z z)))]",
        "proof": [
            "theorem t : [('a0 : (= (+ z (+ z (+ z (+ z z)))) (+ z (+ z (+ z (+ z z)))))) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> (= z (+ z (+ z z)))] {",
            "intro x : (= (+ z (+ z (+ z (+ z z)))) (+ z (+ z (+ z (+ z z))))).",
            "intro x0 : nat.",
            "intro x1 : nat.",
            "intro _ : [('a3 : (= z (+ z (+ z z)))) -> (= z (+ z (+ z z)))].",
            "}"
        ],
        "logprob": -4.277204662325546,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (+ z (+ z (+ z z)))) (+ z (+ z (+ z (+ z z))))) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 'a0) (+ z 'a0)))) -> (= z (+ (+ (+ 'a0 'a0) (+ (+ 'a0 'a0) (+ z 'a0))) (s (+ (+ 'a0 'a0) 'a0))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 'a0) (+ z 'a0)))) -> (= nat z (+ (+ (+ 'a0 'a0) (+ (+ 'a0 'a0) (+ z 'a0))) (s (+ (+ 'a0 'a0) 'a0))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= (s z) (s z))) -> ('a1 : (= z (+ (+ z z) (s z)))) -> ('a2 : (= (+ z z) (+ z (+ z (+ z (s z)))))) -> (= (+ (+ (+ z z) (s z)) z) z)]",
        "problem_raw": "[ ('a0 :(= nat (s z) (s z)) ) -> ('a1 : (= nat z (+ (+ z z) (s z)))) -> ('a2 : (= nat (+ z z) (+ z (+ z (+ z (s z)))))) -> (= nat (+ (+ (+ z z) (s z)) z) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (s z) (s z)) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= z (+ (+ 'a0 'a0) (s z)))) -> ('a3 : (= (+ (+ 'a0 'a0) (s z)) (+ (+ 'a0 'a0) (s z)))) -> (= z (+ (+ 'a0 'a0) (s z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat z (+ (+ 'a0 'a0) (s z)))) -> ('a3 : (= nat (+ (+ 'a0 'a0) (s z)) (+ (+ 'a0 'a0) (s z))))  -> (= nat z (+ (+ 'a0 'a0) (s z)))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= z (+ (+ 'a0 'a0) (s z)))) -> ('a3 : (= (+ (+ 'a0 'a0) (s z)) (+ (+ 'a0 'a0) (s z)))) -> (= z (+ (+ 'a0 'a0) (s z)))] {",
            "intro x : nat.",
            "intro x0 : (= x x).",
            "intro x1 : (= z (+ (+ x x) (s z))).",
            "intro _ : [('a3 : (= (+ (+ x x) (s z)) (+ (+ x x) (s z)))) -> (= z (+ (+ x x) (s z)))].",
            "}"
        ],
        "logprob": -5.03464520843968,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat z (+ (+ 'a0 'a0) (s z)))) -> ('a3 : (= nat (+ (+ 'a0 'a0) (s z)) (+ (+ 'a0 'a0) (s z)))) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= (+ (+ z z) z) (+ z z))) -> ('a1 : (= z (+ (+ z (+ (+ z z) z)) z))) -> (= z (+ (+ z z) (+ (+ z (+ (+ z z) z)) z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z z) z) (+ z z)) ) -> ('a1 : (= nat z (+ (+ z (+ (+ z z) z)) z))) -> (= nat z (+ (+ z z) (+ (+ z (+ (+ z z) z)) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z z) z) (+ z z)) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= z (+ (+ z z) z))) -> ('a1 : (= z (+ (+ (+ z z) (+ z z)) z))) -> (= z (+ (+ (+ (+ z z) z) (+ z z)) (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z (+ (+ z z) z)) ) -> ('a1 : (= nat z (+ (+ (+ z z) (+ z z)) z))) -> (= nat z (+ (+ (+ (+ z z) z) (+ z z)) (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ (+ z z) z)) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= (+ (+ z 'a0) 'a0) 'a0)) -> ('a4 : (= 'a0 'a0)) -> (= z (+ (+ z 'a0) 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> ('a4 : (= nat 'a0 'a0))  -> (= nat z (+ (+ z 'a0) 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> ('a4 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= (+ z (s z)) (s (+ z z)))) -> ('a1 : (= z (+ (+ z (+ z z)) (s z)))) -> (= (+ z (+ z z)) (+ z (+ (+ z (+ z z)) (s z))))]",
        "problem_raw": "[('a0 : (= nat (+ z (s z)) (s (+ z z)))) -> ('a1 : (= nat z (+ (+ z (+ z z)) (s z)))) -> (= nat (+ z (+ z z)) (+ z (+ (+ z (+ z z)) (s z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= z (+ z (+ (+ z z) z)))) -> ('a1 : nat) -> ('a2 : (= z (+ z (+ z z)))) -> (= (+ 'a1 (+ (+ (+ z z) z) z)) (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z (+ z (+ (+ z z) z))) ) -> ('a1 : nat) -> ('a2 : (= nat z (+ z (+ z z)))) -> (= nat (+ 'a1 (+ (+ (+ z z) z) z)) (+ z (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z (+ (+ z z) z))) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= (+ z (+ z z)) z)) -> ('a1 : nat) -> ('a2 : (= (s (+ z z)) (+ z (+ z z)))) -> ('a3 : nat) -> (= (+ z (+ z z)) (s (+ z (+ z z))))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (+ z z)) z) ) -> ('a1 : nat) -> ('a2 : (= nat (s (+ z z)) (+ z (+ z z)))) -> ('a3 : nat) -> (= nat (+ z (+ z z)) (s (+ z (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (+ z z)) z) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= z (+ z (+ z z)))) -> ('a2 : nat) -> ('a3 : (= (+ z 'a0) (+ z (+ z z)))) -> (= z (+ z (+ z (+ (+ z (+ z z)) z))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z (+ z (+ z z)))) -> ('a2 : nat) -> ('a3 : (= nat (+ z 'a0) (+ z (+ z z)))) -> (= nat z (+ z (+ z (+ (+ z (+ z z)) z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= (+ z (+ z z)) (+ z (+ z z)))) -> ('a1 : (= z (+ (+ z z) z))) -> ('a2 : (= z (+ z (+ z z)))) -> ('a3 : nat) -> (= (+ z (+ (+ z (+ z z)) z)) z)]",
        "problem_raw": "[ ('a0 :(= nat (+ z (+ z z)) (+ z (+ z z))) ) -> ('a1 : (= nat z (+ (+ z z) z))) -> ('a2 : (= nat z (+ z (+ z z)))) -> ('a3 : nat) -> (= nat (+ z (+ (+ z (+ z z)) z)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (+ z z)) (+ z (+ z z))) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= z 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= 'a0 'a0)) -> ('a5 : (= z 'a0)) -> ('a6 : (= z 'a0)) -> (= (+ (+ z 'a0) 'a0) 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 'a0)) -> ('a5 : (= nat z 'a0)) -> ('a6 : (= nat z 'a0))  -> (= nat (+ (+ z 'a0) 'a0) 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 'a0)) -> ('a5 : (= nat z 'a0)) -> ('a6 : (= nat z 'a0)) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= z (+ (+ (s z) z) z))) -> ('a1 : (= (s (+ (+ (s z) (+ z (+ z z))) z)) z)) -> (= z (s (+ (+ (s z) z) (+ z z))))]",
        "problem_raw": "[('a0 : (= nat z (+ (+ (s z) z) z))) -> ('a1 : (= nat (s (+ (+ (s z) (+ z (+ z z))) z)) z)) -> (= nat z (s (+ (+ (s z) z) (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 (+ (+ z z) z)) (+ z z)))) -> (= 'a0 (+ (+ 'a0 (+ (+ (+ (+ 'a0 (+ (+ (+ z z) z) z)) (+ z z)) z) (+ z z))) (+ (+ z z) z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 (+ (+ z z) z)) (+ z z)))) -> (= nat 'a0 (+ (+ 'a0 (+ (+ (+ (+ 'a0 (+ (+ (+ z z) z) z)) (+ z z)) z) (+ z z))) (+ (+ z z) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 'a0) (+ z 'a0)))) -> (= (+ z (+ z (+ (+ 'a0 'a0) (s z)))) (+ z (+ z (s z))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 'a0) (+ z 'a0)))) -> (= nat (+ z (+ z (+ (+ 'a0 'a0) (s z)))) (+ z (+ z (s z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= z (+ (+ (+ z z) (+ (s (s z)) z)) z))) -> (= z (+ (+ (+ z z) (+ (s (s z)) z)) z))]",
        "problem_raw": "[('a0 : (= nat z (+ (+ (+ z z) (+ (s (s z)) z)) z))) -> (= nat z (+ (+ (+ z z) (+ (s (s z)) z)) z))]",
        "proof": [
            "theorem t : [('a0 : (= z (+ (+ (+ z z) (+ (s (s z)) z)) z))) -> (= z (+ (+ (+ z z) (+ (s (s z)) z)) z))] {",
            "intro _ : [('a0 : (= z (+ (+ (+ z z) (+ (s (s z)) z)) z))) -> (= z (+ (+ (+ z z) (+ (s (s z)) z)) z))].",
            "}"
        ],
        "logprob": -0.7313517599521555,
        "actions": [
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ (+ z (+ z z)) (s z)))) -> (= z (+ (+ z z) (s (+ z z))))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z (+ (+ z (+ z z)) (s z)))) -> (= nat z (+ (+ z z) (s (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= (+ (+ z z) z) (+ z z))) -> ('a1 : (= z (+ (+ z z) (+ (s (+ z z)) z)))) -> (= z (+ (+ z z) (+ (s (+ (+ z z) z)) z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z z) z) (+ z z)) ) -> ('a1 : (= nat z (+ (+ z z) (+ (s (+ z z)) z)))) -> (= nat z (+ (+ z z) (+ (s (+ (+ z z) z)) z)))]",
        "proof": [
            "theorem t : [('a0 : (= (+ (+ z z) z) (+ z z))) -> ('a1 : (= z (+ (+ z z) (+ (s (+ z z)) z)))) -> (= z (+ (+ z z) (+ (s (+ (+ z z) z)) z)))] {",
            "intro x : (= (+ (+ z z) z) (+ z z)).",
            "show (= (+ z z) (+ (+ z z) z)) by eq_symm.",
            "intro x0 : (= z (+ (+ z z) (+ (s (+ z z)) z))).",
            "show (= z (+ (+ z z) (+ (s (+ (+ z z) z)) z))) by rewrite.",
            "}"
        ],
        "logprob": -5.531965222751378,
        "actions": [
            "intro.",
            "c eq_symm",
            "=> (= (+ z z) (+ (+ z z) z)).",
            "intro.",
            "c rewrite",
            "=> (= z (+ (+ z z) (+ (s (+ (+ z z) z)) z)))."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z z) z) (+ z z)) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= (s (+ 'a0 z)) z)) -> ('a3 : (= z (+ (+ z 'a0) z))) -> (= (+ z (+ z (+ z 'a0))) (s (+ 'a0 z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat (s (+ 'a0 z)) z)) -> ('a3 : (= nat z (+ (+ z 'a0) z))) -> (= nat (+ z (+ z (+ z 'a0))) (s (+ 'a0 z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= z z)) -> ('a1 : nat) -> ('a2 : (= z (+ 'a1 (+ z z)))) -> ('a3 : (= z (+ z (+ z (+ z z))))) -> (= (+ z (+ z (+ z z))) (s z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : nat) -> ('a2 : (= nat z (+ 'a1 (+ z z)))) -> ('a3 : (= nat z (+ z (+ z (+ z z))))) -> (= nat (+ z (+ z (+ z z))) (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 (+ z z)) (s z)))) -> (= z (+ (+ (+ 'a0 (+ z z)) (+ z z)) (s z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 (+ z z)) (s z)))) -> (= nat z (+ (+ (+ 'a0 (+ z z)) (+ z z)) (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : nat) -> ('a3 : (= (+ 'a0 'a0) (s 'a0))) -> (= (+ (+ (s 'a0) 'a0) 'a0) (+ (s 'a0) 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : nat) -> ('a3 : (= nat (+ 'a0 'a0) (s 'a0))) -> (= nat (+ (+ (s 'a0) 'a0) 'a0) (+ (s 'a0) 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= (+ 'a0 'a0) (s 'a0))) -> (= z (+ (+ 'a0 'a0) (s 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= nat (+ 'a0 'a0) (s 'a0))) -> (= nat z (+ (+ 'a0 'a0) (s 'a0)))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= (+ 'a0 'a0) (s 'a0))) -> (= z (+ (+ 'a0 'a0) (s 'a0)))] {",
            "intro x : nat.",
            "intro x0 : (= x (s x)).",
            "intro x1 : (= z (+ (+ x x) (s x))).",
            "intro _ : [('a3 : (= (+ x x) (s x))) -> (= z (+ (+ x x) (s x)))].",
            "}"
        ],
        "logprob": -4.664036290689301,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= (+ (+ z 'a0) 'a0) 'a0)) -> (= z (+ (+ z 'a0) 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> (= nat z (+ (+ z 'a0) 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : nat) -> ('a4 : (= (+ (+ 'a0 'a0) 'a0) 'a0)) -> (= (+ (+ 'a0 'a0) (+ (s 'a0) 'a0)) (+ (+ 'a0 'a0) 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0))  -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : nat) -> ('a4 : (= nat (+ (+ 'a0 'a0) 'a0) 'a0)) -> (= nat (+ (+ 'a0 'a0) (+ (s 'a0) 'a0)) (+ (+ 'a0 'a0) 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (+ z 'a0) (+ (s (s z)) z)) (+ (s z) z)))) -> (= 'a0 (+ (+ (+ z (+ (+ (+ z 'a0) (+ (s (s z)) z)) z)) z) (+ z 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (+ z 'a0) (+ (s (s z)) z)) (+ (s z) z)))) -> (= nat 'a0 (+ (+ (+ z (+ (+ (+ z 'a0) (+ (s (s z)) z)) z)) z) (+ z 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> (= (+ 'a0 (+ z 'a0)) (+ (s 'a0) (+ 'a0 (+ z 'a0))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> (= nat (+ 'a0 (+ z 'a0)) (+ (s 'a0) (+ 'a0 (+ z 'a0))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> (= 'a0 (+ z (s 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> (= nat 'a0 (+ z (s 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= (+ (+ 'a0 'a0) (s 'a0)) 'a0)) -> ('a3 : (= (+ (+ 'a0 'a0) (s 'a0)) (+ (+ 'a0 'a0) (s 'a0)))) -> (= 'a0 (s (s 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat (+ (+ 'a0 'a0) (s 'a0)) 'a0)) -> ('a3 : (= nat (+ (+ 'a0 'a0) (s 'a0)) (+ (+ 'a0 'a0) (s 'a0))))  -> (= nat 'a0 (s (s 'a0)))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= (+ (+ 'a0 'a0) (s 'a0)) 'a0)) -> ('a3 : (= (+ (+ 'a0 'a0) (s 'a0)) (+ (+ 'a0 'a0) (s 'a0)))) -> (= 'a0 (s (s 'a0)))] {",
            "intro x : nat.",
            "intro x0 : (= x (s x)).",
            "intro x1 : (= (+ (+ x x) (s x)) x).",
            "intro x2 : (= (+ (+ x x) (s x)) (+ (+ x x) (s x))).",
            "show (= x (s (s x))) by rewrite.",
            "}"
        ],
        "logprob": -8.268728649899867,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "c rewrite",
            "=> (= x (s (s x)))."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat (+ (+ 'a0 'a0) (s 'a0)) 'a0)) -> ('a3 : (= nat (+ (+ 'a0 'a0) (s 'a0)) (+ (+ 'a0 'a0) (s 'a0)))) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= (+ z z) z)) -> ('a1 : (= (+ z (+ z (+ (s (+ z (+ z z))) z))) (+ (+ z (+ z z)) z))) -> (= (+ z (+ z z)) (+ z z))]",
        "problem_raw": "[('a0 : (= nat (+ z z) z)) -> ('a1 : (= nat (+ z (+ z (+ (s (+ z (+ z z))) z))) (+ (+ z (+ z z)) z))) -> (= nat (+ z (+ z z)) (+ z z))]",
        "proof": [
            "theorem t : [('a0 : (= (+ z z) z)) -> ('a1 : (= (+ z (+ z (+ (s (+ z (+ z z))) z))) (+ (+ z (+ z z)) z))) -> (= (+ z (+ z z)) (+ z z))] {",
            "intro x : (= (+ z z) z).",
            "intro x0 : (= (+ z (+ z (+ (s (+ z (+ z z))) z))) (+ (+ z (+ z z)) z)).",
            "show (= (+ z (+ z z)) (+ z (+ z z))) by c0174.",
            "show (= (+ z (+ z z)) (+ z z)) by rewrite.",
            "}"
        ],
        "logprob": -7.1213227931913,
        "actions": [
            "intro.",
            "intro.",
            "c c0174",
            "=> (= (+ z (+ z z)) (+ z (+ z z))).",
            "c rewrite",
            "=> (= (+ z (+ z z)) (+ z z))."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 'a0)) -> (= (+ (+ 'a0 'a0) 'a0) (+ (+ 'a0 'a0) 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> (= nat (+ (+ 'a0 'a0) 'a0) (+ (+ 'a0 'a0) 'a0))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : nat) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 'a0)) -> (= (+ (+ 'a0 'a0) 'a0) (+ (+ 'a0 'a0) 'a0))] {",
            "intro x : nat.",
            "intro x0 : nat.",
            "intro x1 : (= x x).",
            "intro x2 : (= x x).",
            "apply c0032.",
            "}"
        ],
        "logprob": -6.846761837118659,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "a c0032",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= (+ (+ z 'a0) 'a0) 'a0)) -> ('a4 : (= (+ (+ z 'a0) 'a0) 'a0)) -> (= z (+ (+ (s 'a0) 'a0) 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> ('a4 : (= nat (+ (+ z 'a0) 'a0) 'a0))  -> (= nat z (+ (+ (s 'a0) 'a0) 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> ('a4 : (= nat (+ (+ z 'a0) 'a0) 'a0)) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (+ z 'a0) (+ (s (s z)) z)) z))) -> (= 'a0 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (+ z 'a0) (+ (s (s z)) z)) z))) -> (= nat 'a0 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (+ z 'a0) (+ (s (s z)) z)) z))) -> (= 'a0 'a0)] {",
            "intro x : nat.",
            "intro x0 : (= x (+ (+ (+ z x) (+ (s (s z)) z)) z)).",
            "apply c0032.",
            "}"
        ],
        "logprob": -4.221025746414106,
        "actions": [
            "intro.",
            "intro.",
            "a c0032",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 'a0) (+ z 'a0)))) -> (= z (+ z (+ z 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 'a0) (+ z 'a0)))) -> (= nat z (+ z (+ z 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= (+ 'a0 'a0) (s 'a0))) -> (= (+ (+ 'a0 'a0) (s 'a0)) (+ (+ 'a0 'a0) (s 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= nat (+ 'a0 'a0) (s 'a0))) -> (= nat (+ (+ 'a0 'a0) (s 'a0)) (+ (+ 'a0 'a0) (s 'a0)))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= (+ 'a0 'a0) (s 'a0))) -> (= (+ (+ 'a0 'a0) (s 'a0)) (+ (+ 'a0 'a0) (s 'a0)))] {",
            "intro x : nat.",
            "intro x0 : (= x (s x)).",
            "intro x1 : (= z (+ (+ x x) (s x))).",
            "intro x2 : (= (+ x x) (s x)).",
            "apply c0032.",
            "}"
        ],
        "logprob": -7.647099621907693,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "a c0032",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= (+ z (s z)) (+ z (s z)))) -> ('a1 : (= z (+ (+ z (s z)) (s z)))) -> ('a2 : nat) -> ('a3 : (= z (+ z (s z)))) -> (= (+ (+ 'a2 (s z)) (s z)) z)]",
        "problem_raw": "[ ('a0 :(= nat (+ z (s z)) (+ z (s z))) ) -> ('a1 : (= nat z (+ (+ z (s z)) (s z)))) -> ('a2 : nat) -> ('a3 : (= nat z (+ z (s z)))) -> (= nat (+ (+ 'a2 (s z)) (s z)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (s z)) (+ z (s z))) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> (= z (+ (+ 'a0 'a0) (s z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> (= nat z (+ (+ 'a0 'a0) (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= (+ (+ 'a0 'a0) 'a0) 'a0)) -> (= (+ (+ 'a0 'a0) 'a0) 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat (+ (+ 'a0 'a0) 'a0) 'a0)) -> (= nat (+ (+ 'a0 'a0) 'a0) 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= (+ (+ 'a0 'a0) 'a0) 'a0)) -> (= (+ (+ 'a0 'a0) 'a0) 'a0)] {",
            "intro x : nat.",
            "intro x0 : (= z x).",
            "intro x1 : (= x x).",
            "intro x2 : (= x x).",
            "intro _ : [('a4 : (= (+ (+ x x) x) x)) -> (= (+ (+ x x) x) x)].",
            "}"
        ],
        "logprob": -7.818920116922773,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ (+ (+ z z) z) (+ z (+ (s (+ z z)) z))))) -> (= z (+ (+ (+ (+ z z) z) z) (+ (s (+ z (+ (+ z z) (+ z (s z))))) z)))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z (+ (+ (+ z z) z) (+ z (+ (s (+ z z)) z))))) -> (= nat z (+ (+ (+ (+ z z) z) z) (+ (s (+ z (+ (+ z z) (+ z (s z))))) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= (s (+ 'a0 z)) z)) -> ('a3 : (= z (+ (+ z 'a0) (+ z (+ z z))))) -> (= (+ (+ z 'a0) z) (s z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat (s (+ 'a0 z)) z)) -> ('a3 : (= nat z (+ (+ z 'a0) (+ z (+ z z))))) -> (= nat (+ (+ z 'a0) z) (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= (+ (+ 'a0 'a0) (s 'a0)) 'a0)) -> ('a3 : (= (+ 'a0 'a0) (s 'a0))) -> (= z (+ (+ 'a0 'a0) (s 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat (+ (+ 'a0 'a0) (s 'a0)) 'a0)) -> ('a3 : (= nat (+ 'a0 'a0) (s 'a0))) -> (= nat z (+ (+ 'a0 'a0) (s 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ z 'a0) (+ (s (+ z (s z))) z)))) -> (= 'a0 (+ (+ z 'a0) (s (+ z (s (+ z (s z)))))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ z 'a0) (+ (s (+ z (s z))) z)))) -> (= nat 'a0 (+ (+ z 'a0) (s (+ z (s (+ z (s z)))))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= z 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= 'a0 'a0)) -> ('a5 : (= z 'a0)) -> ('a6 : (= 'a0 'a0)) -> ('a7 : (= (+ 'a0 'a0) 'a0)) -> ('a8 : (= z 'a0)) -> (= z (+ 'a0 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 'a0)) -> ('a5 : (= nat z 'a0)) -> ('a6 : (= nat 'a0 'a0))  -> ('a7 : (= nat (+ 'a0 'a0) 'a0)) -> ('a8 : (= nat z 'a0)) -> (= nat z (+ 'a0 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 'a0)) -> ('a5 : (= nat z 'a0)) -> ('a6 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> (= (+ (+ 'a0 'a0) 'a0) (+ (+ 'a0 'a0) 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> (= nat (+ (+ 'a0 'a0) 'a0) (+ (+ 'a0 'a0) 'a0))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> (= (+ (+ 'a0 'a0) 'a0) (+ (+ 'a0 'a0) 'a0))] {",
            "intro x : nat.",
            "intro x0 : (= x x).",
            "apply c0032.",
            "}"
        ],
        "logprob": -4.1839321660141735,
        "actions": [
            "intro.",
            "intro.",
            "a c0032",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= (s (+ 'a0 'a0)) z)) -> ('a3 : (= z (+ (+ z 'a0) z))) -> (= (+ (+ z 'a0) z) (s (+ 'a0 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat (s (+ 'a0 'a0)) z)) -> ('a3 : (= nat z (+ (+ z 'a0) z))) -> (= nat (+ (+ z 'a0) z) (s (+ 'a0 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (s (+ z (+ z (+ z z)))) z)) -> (= z (s (+ z (+ z (+ z z)))))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (s (+ z (+ z (+ z z)))) z)) -> (= nat z (s (+ z (+ z (+ z z)))))]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> ('a1 : (= (s (+ z (+ z (+ z z)))) z)) -> (= z (s (+ z (+ z (+ z z)))))] {",
            "intro x : (= z z).",
            "intro x0 : (= (s (+ z (+ z (+ z z)))) z).",
            "apply c0152.",
            "}"
        ],
        "logprob": -4.4635380643454,
        "actions": [
            "intro.",
            "intro.",
            "a c0152",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= (+ (s z) (+ z (+ z z))) z)) -> (= (+ z (+ z z)) (+ z (+ z (+ z z))))]",
        "problem_raw": "[ ('a0 :(= nat (+ (s z) (+ z (+ z z))) z) ) -> (= nat (+ z (+ z z)) (+ z (+ z (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (s z) (+ z (+ z z))) z) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= z (+ z (+ z z)))) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= (+ z (+ z z)) (+ 'a1 (+ (+ z z) (+ z z))))) -> (= (+ z (+ z z)) (s z))]",
        "problem_raw": "[ ('a0 :(= nat z (+ z (+ z z))) ) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= nat (+ z (+ z z)) (+ 'a1 (+ (+ z z) (+ z z))))) -> (= nat (+ z (+ z z)) (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z (+ z z))) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= z z)) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : nat) -> ('a4 : (= z 'a1)) -> (= z (+ z (+ z 'a1)))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : nat) -> ('a4 : (= nat z 'a1)) -> (= nat z (+ z (+ z 'a1)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= (+ 'a0 (+ z z)) (+ 'a0 (+ z z)))) -> ('a2 : nat) -> ('a3 : (= z (+ z z))) -> (= z (+ z z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (+ 'a0 (+ z z)) (+ 'a0 (+ z z))))  -> ('a2 : nat) -> ('a3 : (= nat z (+ z z))) -> (= nat z (+ z z))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= (+ 'a0 (+ z z)) (+ 'a0 (+ z z)))) -> ('a2 : nat) -> ('a3 : (= z (+ z z))) -> (= z (+ z z))] {",
            "intro x : nat.",
            "intro x0 : (= (+ x (+ z z)) (+ x (+ z z))).",
            "intro x1 : nat.",
            "intro _ : [('a3 : (= z (+ z z))) -> (= z (+ z z))].",
            "}"
        ],
        "logprob": -4.133728886824295,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat (+ 'a0 (+ z z)) (+ 'a0 (+ z z)))) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= z (+ 'a0 (+ z 'a0)))) -> ('a3 : (= (+ z (+ z 'a0)) z)) -> (= (+ 'a0 (+ (+ z z) (+ z (+ z 'a0)))) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat z (+ 'a0 (+ z 'a0)))) -> ('a3 : (= nat (+ z (+ z 'a0)) z)) -> (= nat (+ 'a0 (+ (+ z z) (+ z (+ z 'a0)))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (s (+ z z)) z)) -> ('a2 : (= z (+ (s z) (+ z (+ z z))))) -> (= z (+ (s z) (+ z (+ z (+ z z)))))]",
        "problem_raw": "[('a0 : (= nat z z)) -> ('a1 : (= nat (s (+ z z)) z)) -> ('a2 : (= nat z (+ (s z) (+ z (+ z z))))) -> (= nat z (+ (s z) (+ z (+ z (+ z z)))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= (+ z (+ z z)) (+ z z))) -> ('a1 : (= z (+ z (+ z (+ (+ z (+ z z)) (+ z z)))))) -> (= (+ z (+ z z)) (+ z (+ z (+ z (+ z z)))))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (+ z z)) (+ z z)) ) -> ('a1 : (= nat z (+ z (+ z (+ (+ z (+ z z)) (+ z z)))))) -> (= nat (+ z (+ z z)) (+ z (+ z (+ z (+ z z)))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (+ z z)) (+ z z)) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 z) (s z)))) -> ('a2 : (= (+ (+ 'a0 z) (+ z (s z))) z)) -> (= (+ z (+ (+ 'a0 'a0) (s z))) (+ (+ 'a0 'a0) (s z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 z) (s z)))) -> ('a2 : (= nat (+ (+ 'a0 z) (+ z (s z))) z)) -> (= nat (+ z (+ (+ 'a0 'a0) (s z))) (+ (+ 'a0 'a0) (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= (+ z (+ z (+ (s (+ z (s z))) z))) z)) -> (= z (+ z (+ z (+ (s (+ z z)) z))))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (+ z (+ (s (+ z (s z))) z))) z) ) -> (= nat z (+ z (+ z (+ (s (+ z z)) z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (+ z (+ (s (+ z (s z))) z))) z) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= 'a0 'a0)) -> (= 'a0 (+ (+ (s 'a0) 'a0) 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 'a0))  -> (= nat 'a0 (+ (+ (s 'a0) 'a0) 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= (+ (+ (+ (+ z z) z) z) z) (+ (+ (+ z z) z) z))) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> (= (+ z (+ z (+ (s (+ z z)) z))) z)]",
        "problem_raw": "[('a0 : (= nat (+ (+ (+ (+ z z) z) z) z) (+ (+ (+ z z) z) z))) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= nat z (+ z (+ z z)))) -> (= nat (+ z (+ z (+ (s (+ z z)) z))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (+ z 'a0) (+ (s (s z)) z)) z))) -> (= 'a0 (s (s (+ z (+ (+ (s z) (s z)) z)))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (+ z 'a0) (+ (s (s z)) z)) z))) -> (= nat 'a0 (s (s (+ z (+ (+ (s z) (s z)) z)))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= z 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= 'a0 'a0)) -> (= (+ 'a0 'a0) (s 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 'a0))  -> (= nat (+ 'a0 'a0) (s 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : nat) -> ('a3 : (= (s (+ 'a0 'a0)) 'a0)) -> (= 'a0 (s (+ (s 'a0) (+ (s 'a0) 'a0))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : nat) -> ('a3 : (= nat (s (+ 'a0 'a0)) 'a0)) -> (= nat 'a0 (s (+ (s 'a0) (+ (s 'a0) 'a0))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= (+ z (+ z z)) (+ z (+ z z)))) -> ('a1 : (= (+ z (+ z (+ z z))) (+ (+ z (+ z (+ z z))) z))) -> (= z (+ z (+ z (+ z z))))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (+ z z)) (+ z (+ z z))) ) -> ('a1 : (= nat (+ z (+ z (+ z z))) (+ (+ z (+ z (+ z z))) z))) -> (= nat z (+ z (+ z (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (+ z z)) (+ z (+ z z))) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ z 'a0) (s z)))) -> ('a2 : (= z (+ (+ z 'a0) (s z)))) -> (= z (+ (+ z (s z)) (s z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ z 'a0) (s z)))) -> ('a2 : (= nat z (+ (+ z 'a0) (s z)))) -> (= nat z (+ (+ z (s z)) (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ z 'a0) (+ z (s (s z)))))) -> (= (+ 'a0 (s z)) (+ z (s z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ z 'a0) (+ z (s (s z)))))) -> (= nat (+ 'a0 (s z)) (+ z (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= (+ (+ z (s z)) z) (+ (+ z (s z)) z))) -> (= (s (+ z (s z))) (s (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z (s z)) z) (+ (+ z (s z)) z)) ) -> (= nat (s (+ z (s z))) (s (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z (s z)) z) (+ (+ z (s z)) z)) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= 'a0 'a0)) -> (= z 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 'a0))  -> (= nat z 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= 'a0 'a0)) -> (= z 'a0)] {",
            "intro x : nat.",
            "intro x0 : (= x z).",
            "intro x1 : (= x x).",
            "intro x2 : (= x x).",
            "show (= z x) by eq_symm.",
            "intro _ : [('a4 : (= x x)) -> (= z x)].",
            "}"
        ],
        "logprob": -7.953980163545922,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "c eq_symm",
            "=> (= z x).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= 'a0 z)) -> ('a3 : (= z (+ 'a0 z))) -> (= z (+ z (+ z (+ z z))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat 'a0 z)) -> ('a3 : (= nat z (+ 'a0 z))) -> (= nat z (+ z (+ z (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= (+ z (+ z z)) (+ z (+ z z)))) -> ('a1 : (= z (+ z (+ z (+ (+ z z) (+ z z)))))) -> ('a2 : (= (+ z (+ z (+ z z))) z)) -> (= (+ z (+ z z)) (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (+ z z)) (+ z (+ z z))) ) -> ('a1 : (= nat z (+ z (+ z (+ (+ z z) (+ z z)))))) -> ('a2 : (= nat (+ z (+ z (+ z z))) z)) -> (= nat (+ z (+ z z)) (+ z (+ z z)))]",
        "proof": [
            "theorem t : [('a0 : (= (+ z (+ z z)) (+ z (+ z z)))) -> ('a1 : (= z (+ z (+ z (+ (+ z z) (+ z z)))))) -> ('a2 : (= (+ z (+ z (+ z z))) z)) -> (= (+ z (+ z z)) (+ z (+ z z)))] {",
            "intro x : (= (+ z (+ z z)) (+ z (+ z z))).",
            "intro x0 : (= z (+ z (+ z (+ (+ z z) (+ z z))))).",
            "intro _ : [('a2 : (= (+ z (+ z (+ z z))) z)) -> (= (+ z (+ z z)) (+ z (+ z z)))].",
            "}"
        ],
        "logprob": -3.74624803467323,
        "actions": [
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (+ z z)) (+ z (+ z z))) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (+ z 'a0) (+ (s (+ z z)) z)) z))) -> (= 'a0 (+ (+ (+ z 'a0) 'a0) (s (+ (+ (+ (+ z 'a0) (+ (s (+ z z)) z)) z) z))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (+ z 'a0) (+ (s (+ z z)) z)) z))) -> (= nat 'a0 (+ (+ (+ z 'a0) 'a0) (s (+ (+ (+ (+ z 'a0) (+ (s (+ z z)) z)) z) z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= z (+ z (+ z z)))) -> (= z (+ z (+ z (+ (+ z (+ (+ z (+ z z)) z)) z))))]",
        "problem_raw": "[ ('a0 :(= nat z (+ z (+ z z))) ) -> (= nat z (+ z (+ z (+ (+ z (+ (+ z (+ z z)) z)) z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z (+ z z))) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= z (+ z z))) -> ('a1 : (= z (+ (+ (+ z z) (+ z z)) (+ z z)))) -> (= z (+ (+ (+ (+ z (+ (+ z z) (+ z z))) (+ z z)) (+ z z)) z))]",
        "problem_raw": "[ ('a0 :(= nat z (+ z z)) ) -> ('a1 : (= nat z (+ (+ (+ z z) (+ z z)) (+ z z)))) -> (= nat z (+ (+ (+ (+ z (+ (+ z z) (+ z z))) (+ z z)) (+ z z)) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z z)) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= (+ (+ z 'a0) 'a0) 'a0)) -> (= (+ z 'a0) (s (+ (s 'a0) z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> (= nat (+ z 'a0) (s (+ (s 'a0) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (s (+ z z)) z)) -> ('a2 : nat) -> ('a3 : (= z (+ (+ z 'a2) z))) -> (= 'a2 (+ (+ z (s z)) z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (s (+ z z)) z)) -> ('a2 : nat) -> ('a3 : (= nat z (+ (+ z 'a2) z))) -> (= nat 'a2 (+ (+ z (s z)) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 z) (s z)))) -> (= 'a0 (+ (+ 'a0 z) (s (+ (+ 'a0 z) (s z)))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 z) (s z)))) -> (= nat 'a0 (+ (+ 'a0 z) (s (+ (+ 'a0 z) (s z)))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (+ z 'a0) (+ (s (+ z z)) z)) z))) -> (= (+ z (+ (+ (+ (+ z 'a0) (+ (s (+ z z)) z)) z) (+ z 'a0))) (+ z (+ z 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (+ z 'a0) (+ (s (+ z z)) z)) z))) -> (= nat (+ z (+ (+ (+ (+ z 'a0) (+ (s (+ z z)) z)) z) (+ z 'a0))) (+ z (+ z 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= z 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= 'a0 'a0)) -> ('a5 : (= z 'a0)) -> ('a6 : (= 'a0 'a0)) -> ('a7 : (= 'a0 'a0)) -> ('a8 : (= z 'a0)) -> (= z 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 'a0)) -> ('a5 : (= nat z 'a0)) -> ('a6 : (= nat 'a0 'a0))  -> ('a7 : (= nat 'a0 'a0)) -> ('a8 : (= nat z 'a0)) -> (= nat z 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 'a0)) -> ('a5 : (= nat z 'a0)) -> ('a6 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= (+ (+ z z) z) z)) -> ('a1 : (= z (+ z (+ z (+ (s (+ z z)) z))))) -> (= (+ z (+ (+ (+ z z) (+ z (+ z (+ (s (+ z z)) z)))) z)) z)]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z z) z) z) ) -> ('a1 : (= nat z (+ z (+ z (+ (s (+ z z)) z))))) -> (= nat (+ z (+ (+ (+ z z) (+ z (+ z (+ (s (+ z z)) z)))) z)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z z) z) z) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= (s z) (s z))) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= 'a1 'a2)) -> (= z (+ 'a1 'a2))]",
        "problem_raw": "[ ('a0 :(= nat (s z) (s z)) ) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= nat 'a1 'a2)) -> (= nat z (+ 'a1 'a2))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (s z) (s z)) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= (+ 'a0 'a0) (s 'a0))) -> (= (+ (+ 'a0 'a0) (s 'a0)) (s 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= nat (+ 'a0 'a0) (s 'a0))) -> (= nat (+ (+ 'a0 'a0) (s 'a0)) (s 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ (+ z z) z))) -> ('a2 : (= (s (+ z (+ z z))) z)) -> ('a3 : nat) -> (= (s (+ z (+ z z))) (s (+ z (+ z z))))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z (+ (+ z z) z))) -> ('a2 : (= nat (s (+ z (+ z z))) z)) -> ('a3 : nat) -> (= nat (s (+ z (+ z z))) (s (+ z (+ z z))))]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> ('a1 : (= z (+ (+ z z) z))) -> ('a2 : (= (s (+ z (+ z z))) z)) -> ('a3 : nat) -> (= (s (+ z (+ z z))) (s (+ z (+ z z))))] {",
            "intro x : (= z z).",
            "intro x0 : (= z (+ (+ z z) z)).",
            "intro x1 : (= (s (+ z (+ z z))) z).",
            "intro x2 : nat.",
            "apply c0134.",
            "}"
        ],
        "logprob": -8.43245371245174,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "a c0134",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= (+ z (+ z z)) z)) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> (= (+ z (+ z z)) (+ z (+ z (+ z z))))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (+ z z)) z) ) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= nat z (+ z (+ z z)))) -> (= nat (+ z (+ z z)) (+ z (+ z (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (+ z z)) z) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : nat) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= (+ (+ 'a0 'a0) 'a0) 'a0)) -> (= z (+ (+ 'a0 'a0) 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : nat) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat (+ (+ 'a0 'a0) 'a0) 'a0)) -> (= nat z (+ (+ 'a0 'a0) 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= z (+ (+ z z) z))) -> ('a1 : nat) -> ('a2 : (= (s (+ z (+ z z))) z)) -> ('a3 : nat) -> (= (+ z (+ z z)) (s (+ z (+ z z))))]",
        "problem_raw": "[ ('a0 :(= nat z (+ (+ z z) z)) ) -> ('a1 : nat) -> ('a2 : (= nat (s (+ z (+ z z))) z)) -> ('a3 : nat) -> (= nat (+ z (+ z z)) (s (+ z (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ (+ z z) z)) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ z 'a0) (s z)))) -> (= 'a0 (+ (+ z (s (+ 'a0 (s z)))) (+ z (s z))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ z 'a0) (s z)))) -> (= nat 'a0 (+ (+ z (s (+ 'a0 (s z)))) (+ z (s z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= (+ (+ 'a0 'a0) 'a0) 'a0)) -> (= (+ z (+ 'a0 'a0)) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0))  -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat (+ (+ 'a0 'a0) 'a0) 'a0)) -> (= nat (+ z (+ 'a0 'a0)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= 'a0 'a0)) -> (= (+ z (+ z 'a0)) (s (+ z 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 'a0))  -> (= nat (+ z (+ z 'a0)) (s (+ z 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= z (+ (s z) z))) -> ('a2 : (= (s (+ z z)) z)) -> ('a3 : nat) -> (= (s (+ z (+ z 'a0))) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z (+ (s z) z))) -> ('a2 : (= nat (s (+ z z)) z)) -> ('a3 : nat) -> (= nat (s (+ z (+ z 'a0))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= z (+ (+ z z) z))) -> ('a1 : (= z (+ z (+ z (+ (s (+ z z)) z))))) -> (= (+ z (+ (+ (+ z z) (+ z (+ z z))) z)) z)]",
        "problem_raw": "[('a0 : (= nat z (+ (+ z z) z))) -> ('a1 : (= nat z (+ z (+ z (+ (s (+ z z)) z))))) -> (= nat (+ z (+ (+ (+ z z) (+ z (+ z z))) z)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ (+ z z) (+ (s (+ z (+ (+ z z) (s z)))) z)))) -> (= (+ z (+ z z)) z)]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z (+ (+ z z) (+ (s (+ z (+ (+ z z) (s z)))) z)))) -> (= nat (+ z (+ z z)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (+ (+ z z) z) (+ z z))) -> (= (+ z z) (+ (+ z (+ (s z) z)) z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (+ (+ z z) z) (+ z z))) -> (= nat (+ z z) (+ (+ z (+ (s z) z)) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ (+ (+ z z) z) z))) -> (= (+ (+ z z) z) (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z (+ (+ (+ z z) z) z))) -> (= nat (+ (+ z z) z) (+ z z))]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> ('a1 : (= z (+ (+ (+ z z) z) z))) -> (= (+ (+ z z) z) (+ z z))] {",
            "intro x : (= z z).",
            "intro x0 : (= z (+ (+ (+ z z) z) z)).",
            "show (= (+ (+ z z) z) (+ z z)) by +_z.",
            "}"
        ],
        "logprob": -5.203118468790796,
        "actions": [
            "intro.",
            "intro.",
            "c +_z",
            "=> (= (+ (+ z z) z) (+ z z))."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ z 'a0) (+ (s (+ z 'a0)) z)))) -> (= (+ 'a0 (+ 'a0 (+ 'a0 (s 'a0)))) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ z 'a0) (+ (s (+ z 'a0)) z)))) -> (= nat (+ 'a0 (+ 'a0 (+ 'a0 (s 'a0)))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 'a0) (+ z 'a0)))) -> (= z (+ (+ 'a0 'a0) (+ (+ 'a0 'a0) (+ 'a0 'a0))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 'a0) (+ z 'a0)))) -> (= nat z (+ (+ 'a0 'a0) (+ (+ 'a0 'a0) (+ 'a0 'a0))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 z)) -> ('a4 : (= z 'a0)) -> ('a5 : (= z 'a0)) -> ('a6 : (= 'a0 'a0)) -> (= 'a0 z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 z)) -> ('a4 : (= nat z 'a0)) -> ('a5 : (= nat z 'a0)) -> ('a6 : (= nat 'a0 'a0))  -> (= nat 'a0 z)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 z)) -> ('a4 : (= z 'a0)) -> ('a5 : (= z 'a0)) -> ('a6 : (= 'a0 'a0)) -> (= 'a0 z)] {",
            "intro x : nat.",
            "intro x0 : (= z x).",
            "intro x1 : (= x x).",
            "intro x2 : (= x z).",
            "intro x3 : (= z x).",
            "intro x4 : (= z x).",
            "intro _ : [('a6 : (= x x)) -> (= x z)].",
            "}"
        ],
        "logprob": -10.393354892493958,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 z)) -> ('a4 : (= nat z 'a0)) -> ('a5 : (= nat z 'a0)) -> ('a6 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= z (+ z z))) -> ('a1 : (= z (+ (+ z (+ z z)) (+ (s (+ z z)) z)))) -> (= z (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat z (+ z z)) ) -> ('a1 : (= nat z (+ (+ z (+ z z)) (+ (s (+ z z)) z)))) -> (= nat z (+ z z))]",
        "proof": [
            "theorem t : [('a0 : (= z (+ z z))) -> ('a1 : (= z (+ (+ z (+ z z)) (+ (s (+ z z)) z)))) -> (= z (+ z z))] {",
            "intro x : (= z (+ z z)).",
            "intro _ : [('a1 : (= z (+ (+ z (+ z z)) (+ (s (+ z z)) z)))) -> (= z (+ z z))].",
            "}"
        ],
        "logprob": -1.7614745433912504,
        "actions": [
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z z)) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= (+ (+ (+ z z) z) z) (+ z z))) -> ('a1 : nat) -> ('a2 : (= z (+ (+ z (+ z z)) 'a1))) -> (= (+ (+ (+ z (+ z z)) 'a1) (+ z z)) (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ (+ z z) z) z) (+ z z)) ) -> ('a1 : nat) -> ('a2 : (= nat z (+ (+ z (+ z z)) 'a1))) -> (= nat (+ (+ (+ z (+ z z)) 'a1) (+ z z)) (+ z (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ (+ z z) z) z) (+ z z)) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 z) (+ z 'a0)))) -> (= (+ (+ 'a0 (s z)) z) (s (+ (+ 'a0 (s z)) (+ z z))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 z) (+ z 'a0)))) -> (= nat (+ (+ 'a0 (s z)) z) (s (+ (+ 'a0 (s z)) (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : nat) -> ('a3 : (= (+ (+ z 'a0) 'a0) 'a0)) -> (= (+ (+ (s 'a0) 'a0) 'a0) (+ z 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : nat) -> ('a3 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> (= nat (+ (+ (s 'a0) 'a0) 'a0) (+ z 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (+ z 'a0) (+ z 'a0)) (s z)))) -> (= 'a0 (+ (+ (+ 'a0 'a0) 'a0) (+ (s (s (s z))) (+ z z))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (+ z 'a0) (+ z 'a0)) (s z)))) -> (= nat 'a0 (+ (+ (+ 'a0 'a0) 'a0) (+ (s (s (s z))) (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= (+ (+ 'a0 'a0) 'a0) 'a0)) -> (= z (+ z 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat (+ (+ 'a0 'a0) 'a0) 'a0)) -> (= nat z (+ z 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= (+ (+ z z) z) (+ z z))) -> (= (+ z z) (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z z) z) (+ z z)) ) -> (= nat (+ z z) (+ z z))]",
        "proof": [
            "theorem t : [('a0 : (= (+ (+ z z) z) (+ z z))) -> (= (+ z z) (+ z z))] {",
            "intro x : (= (+ (+ z z) z) (+ z z)).",
            "apply c0032.",
            "}"
        ],
        "logprob": -3.2330532824987745,
        "actions": [
            "intro.",
            "a c0032",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z z) z) (+ z z)) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= z (+ (+ z z) (+ z z)))) -> (= z (+ z (+ (+ z z) (+ z z))))]",
        "problem_raw": "[('a0 : (= nat z (+ (+ z z) (+ z z)))) -> (= nat z (+ z (+ (+ z z) (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= (+ (+ z z) z) z)) -> ('a1 : (= z (+ (+ z z) (+ (s (+ z z)) z)))) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> (= (+ (+ z z) (+ z z)) (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z z) z) z) ) -> ('a1 : (= nat z (+ (+ z z) (+ (s (+ z z)) z)))) -> ('a2 : nat) -> ('a3 : (= nat z (+ z (+ z z)))) -> (= nat (+ (+ z z) (+ z z)) (+ z (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z z) z) z) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= z (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= (+ (s 'a0) 'a0) (+ (s 'a0) (+ (s 'a0) 'a0)))) -> (= (+ (s 'a0) (+ (s 'a0) 'a0)) (+ (s 'a0) (+ (s 'a0) 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= nat (+ (s 'a0) 'a0) (+ (s 'a0) (+ (s 'a0) 'a0)))) -> (= nat (+ (s 'a0) (+ (s 'a0) 'a0)) (+ (s 'a0) (+ (s 'a0) 'a0)))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= z (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= (+ (s 'a0) 'a0) (+ (s 'a0) (+ (s 'a0) 'a0)))) -> (= (+ (s 'a0) (+ (s 'a0) 'a0)) (+ (s 'a0) (+ (s 'a0) 'a0)))] {",
            "intro x : nat.",
            "intro x0 : (= z (+ (+ (s x) x) x)).",
            "intro x1 : (= (+ (s x) x) (+ (s x) (+ (s x) x))).",
            "apply c0032.",
            "}"
        ],
        "logprob": -6.011882700635897,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "a c0032",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (s (+ z (+ z (+ z z)))) z)) -> (= (s (+ z (+ z (s z)))) (s (+ z (+ z (s z)))))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (s (+ z (+ z (+ z z)))) z)) -> (= nat (s (+ z (+ z (s z)))) (s (+ z (+ z (s z)))))]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> ('a1 : (= (s (+ z (+ z (+ z z)))) z)) -> (= (s (+ z (+ z (s z)))) (s (+ z (+ z (s z)))))] {",
            "intro x : (= z z).",
            "intro x0 : (= (s (+ z (+ z (+ z z)))) z).",
            "apply c0032.",
            "}"
        ],
        "logprob": -4.893600120012002,
        "actions": [
            "intro.",
            "intro.",
            "a c0032",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= z z)) -> ('a1 : nat) -> ('a2 : (= 'a1 (s 'a1))) -> ('a3 : (= (+ (+ 'a1 'a1) 'a1) 'a1)) -> (= (+ (+ 'a1 'a1) 'a1) (s 'a1))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : nat) -> ('a2 : (= nat 'a1 (s 'a1))) -> ('a3 : (= nat (+ (+ 'a1 'a1) 'a1) 'a1)) -> (= nat (+ (+ 'a1 'a1) 'a1) (s 'a1))]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> ('a1 : nat) -> ('a2 : (= 'a1 (s 'a1))) -> ('a3 : (= (+ (+ 'a1 'a1) 'a1) 'a1)) -> (= (+ (+ 'a1 'a1) 'a1) (s 'a1))] {",
            "intro x : (= z z).",
            "intro x0 : nat.",
            "intro x1 : (= x0 (s x0)).",
            "intro x2 : (= (+ (+ x0 x0) x0) x0).",
            "show (= (+ (+ x0 x0) x0) (s x0)) by rewrite.",
            "}"
        ],
        "logprob": -8.383676778425013,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "c rewrite",
            "=> (= (+ (+ x0 x0) x0) (s x0))."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ (+ (+ z z) z) (+ z (+ (s (+ z z)) z))))) -> (= (+ (s (+ z z)) z) (+ (s (+ z z)) z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z (+ (+ (+ z z) z) (+ z (+ (s (+ z z)) z))))) -> (= nat (+ (s (+ z z)) z) (+ (s (+ z z)) z))]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> ('a1 : (= z (+ (+ (+ z z) z) (+ z (+ (s (+ z z)) z))))) -> (= (+ (s (+ z z)) z) (+ (s (+ z z)) z))] {",
            "intro x : (= z z).",
            "intro x0 : (= z (+ (+ (+ z z) z) (+ z (+ (s (+ z z)) z)))).",
            "apply c0032.",
            "}"
        ],
        "logprob": -4.617910478487774,
        "actions": [
            "intro.",
            "intro.",
            "a c0032",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= (+ 'a0 'a0) 'a0)) -> ('a2 : (= (+ 'a0 'a0) 'a0)) -> ('a3 : (= (+ 'a0 'a0) 'a0)) -> (= 'a0 (+ 'a0 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (+ 'a0 'a0) 'a0)) -> ('a2 : (= nat (+ 'a0 'a0) 'a0)) -> ('a3 : (= nat (+ 'a0 'a0) 'a0))  -> (= nat 'a0 (+ 'a0 'a0))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= (+ 'a0 'a0) 'a0)) -> ('a2 : (= (+ 'a0 'a0) 'a0)) -> ('a3 : (= (+ 'a0 'a0) 'a0)) -> (= 'a0 (+ 'a0 'a0))] {",
            "intro x : nat.",
            "intro x0 : (= (+ x x) x).",
            "intro x1 : (= (+ x x) x).",
            "show (= x (+ x x)) by eq_symm.",
            "intro _ : [('a3 : (= (+ x x) x)) -> (= x (+ x x))].",
            "}"
        ],
        "logprob": -5.310689868047912,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "c eq_symm",
            "=> (= x (+ x x)).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat (+ 'a0 'a0) 'a0)) -> ('a2 : (= nat (+ 'a0 'a0) 'a0)) -> ('a3 : (= nat (+ 'a0 'a0) 'a0)) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= (+ z z) (+ z z))) -> ('a1 : (= z (+ (+ z (+ z z)) (+ (s (+ z z)) z)))) -> (= (+ z (+ z z)) (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) (+ z z)) ) -> ('a1 : (= nat z (+ (+ z (+ z z)) (+ (s (+ z z)) z)))) -> (= nat (+ z (+ z z)) (+ z (+ z z)))]",
        "proof": [
            "theorem t : [('a0 : (= (+ z z) (+ z z))) -> ('a1 : (= z (+ (+ z (+ z z)) (+ (s (+ z z)) z)))) -> (= (+ z (+ z z)) (+ z (+ z z)))] {",
            "intro x : (= (+ z z) (+ z z)).",
            "intro x0 : (= z (+ (+ z (+ z z)) (+ (s (+ z z)) z))).",
            "apply c0032.",
            "}"
        ],
        "logprob": -5.003706186260977,
        "actions": [
            "intro.",
            "intro.",
            "a c0032",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) (+ z z)) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= (+ (+ (+ z z) z) z) (+ (+ (+ z z) z) z))) -> ('a1 : (= z (+ (+ z (+ (+ z (s (s z))) z)) z))) -> (= z (+ (+ (+ z z) (+ (+ z (s (s z))) z)) z))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ (+ z z) z) z) (+ (+ (+ z z) z) z)) ) -> ('a1 : (= nat z (+ (+ z (+ (+ z (s (s z))) z)) z))) -> (= nat z (+ (+ (+ z z) (+ (+ z (s (s z))) z)) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ (+ z z) z) z) (+ (+ (+ z z) z) z)) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= z (+ z z))) -> ('a1 : (= (+ (+ (+ z (+ z z)) (+ z z)) (+ z z)) z)) -> (= (+ (+ (+ z (+ z z)) (+ (+ (+ z (+ z z)) (+ z z)) z)) (+ z z)) (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat z (+ z z)) ) -> ('a1 : (= nat (+ (+ (+ z (+ z z)) (+ z z)) (+ z z)) z)) -> (= nat (+ (+ (+ z (+ z z)) (+ (+ (+ z (+ z z)) (+ z z)) z)) (+ z z)) (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z z)) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= (+ z (+ z z)) z)) -> (= (s (+ z (+ z (+ z z)))) (s (+ z (+ z (+ z z)))))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (+ z z)) z) ) -> (= nat (s (+ z (+ z (+ z z)))) (s (+ z (+ z (+ z z)))))]",
        "proof": [
            "theorem t : [('a0 : (= (+ z (+ z z)) z)) -> (= (s (+ z (+ z (+ z z)))) (s (+ z (+ z (+ z z)))))] {",
            "intro x : (= (+ z (+ z z)) z).",
            "apply c0032.",
            "}"
        ],
        "logprob": -3.523517874694913,
        "actions": [
            "intro.",
            "a c0032",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (+ z z)) z) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= (+ (+ z z) z) (+ z z))) -> ('a1 : (= z (+ (+ z (+ (+ z (s (+ z z))) z)) z))) -> (= (+ z z) (+ (+ z (+ (+ z (s (+ z z))) z)) (+ (+ z (s (+ z z))) z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z z) z) (+ z z)) ) -> ('a1 : (= nat z (+ (+ z (+ (+ z (s (+ z z))) z)) z))) -> (= nat (+ z z) (+ (+ z (+ (+ z (s (+ z z))) z)) (+ (+ z (s (+ z z))) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z z) z) (+ z z)) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ z 'a0))) -> ('a2 : (= z (+ 'a0 (+ z (+ z 'a0))))) -> (= (+ 'a0 (+ z (+ z 'a0))) (+ z (+ z (+ z 'a0))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ z 'a0))) -> ('a2 : (= nat z (+ 'a0 (+ z (+ z 'a0))))) -> (= nat (+ 'a0 (+ z (+ z 'a0))) (+ z (+ z (+ z 'a0))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= z z)) -> ('a1 : nat) -> ('a2 : (= 'a1 (s 'a1))) -> ('a3 : (= (+ (+ 'a1 'a1) 'a1) (s 'a1))) -> (= (+ (+ 'a1 'a1) 'a1) (s 'a1))]",
        "problem_raw": "[('a0 : (= nat z z)) -> ('a1 : nat) -> ('a2 : (= nat 'a1 (s 'a1))) -> ('a3 : (= nat (+ (+ 'a1 'a1) 'a1) (s 'a1))) -> (= nat (+ (+ 'a1 'a1) 'a1) (s 'a1))]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> ('a1 : nat) -> ('a2 : (= 'a1 (s 'a1))) -> ('a3 : (= (+ (+ 'a1 'a1) 'a1) (s 'a1))) -> (= (+ (+ 'a1 'a1) 'a1) (s 'a1))] {",
            "intro x : (= z z).",
            "intro x0 : nat.",
            "intro x1 : (= x0 (s x0)).",
            "intro _ : [('a3 : (= (+ (+ x0 x0) x0) (s x0))) -> (= (+ (+ x0 x0) x0) (s x0))].",
            "}"
        ],
        "logprob": -4.882509993350232,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= z z)) -> ('a1 : nat) -> ('a2 : (= (s (+ 'a1 z)) z)) -> ('a3 : (= z (+ (+ z 'a1) (+ z (+ z z))))) -> (= z (s (+ 'a1 z)))]",
        "problem_raw": "[('a0 : (= nat z z)) -> ('a1 : nat) -> ('a2 : (= nat (s (+ 'a1 z)) z)) -> ('a3 : (= nat z (+ (+ z 'a1) (+ z (+ z z))))) -> (= nat z (s (+ 'a1 z)))]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> ('a1 : nat) -> ('a2 : (= (s (+ 'a1 z)) z)) -> ('a3 : (= z (+ (+ z 'a1) (+ z (+ z z))))) -> (= z (s (+ 'a1 z)))] {",
            "intro x : (= z z).",
            "intro x0 : nat.",
            "intro x1 : (= (s (+ x0 z)) z).",
            "show (= z (s (+ x0 z))) by eq_symm.",
            "intro _ : [('a3 : (= z (+ (+ z x0) (+ z (+ z z))))) -> (= z (s (+ x0 z)))].",
            "}"
        ],
        "logprob": -5.316204111923022,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "c eq_symm",
            "=> (= z (s (+ x0 z))).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= z (+ (+ z z) z))) -> ('a1 : (= (s (+ z (+ z z))) z)) -> (= (s (+ z z)) (s (+ z (+ z (+ z z)))))]",
        "problem_raw": "[('a0 : (= nat z (+ (+ z z) z))) -> ('a1 : (= nat (s (+ z (+ z z))) z)) -> (= nat (s (+ z z)) (s (+ z (+ z (+ z z)))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 (s (+ (+ (+ 'a0 (s z)) (s z)) z))) z))) -> (= (+ 'a0 (s 'a0)) (s (+ (+ 'a0 (s (s (+ (+ 'a0 (s z)) (s z))))) z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 (s (+ (+ (+ 'a0 (s z)) (s z)) z))) z))) -> (= nat (+ 'a0 (s 'a0)) (s (+ (+ 'a0 (s (s (+ (+ 'a0 (s z)) (s z))))) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= 'a0 (+ z 'a0))) -> ('a3 : (= (+ 'a0 'a0) (s 'a0))) -> (= (+ 'a0 (s 'a0)) 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat 'a0 (+ z 'a0))) -> ('a3 : (= nat (+ 'a0 'a0) (s 'a0))) -> (= nat (+ 'a0 (s 'a0)) 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= (+ (+ z z) z) (+ z z))) -> ('a1 : (= (+ z z) (+ z (+ z (+ (s (+ z z)) z))))) -> (= z (+ z (+ z (+ (s (+ (+ (+ z z) z) z)) z))))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z z) z) (+ z z)) ) -> ('a1 : (= nat (+ z z) (+ z (+ z (+ (s (+ z z)) z))))) -> (= nat z (+ z (+ z (+ (s (+ (+ (+ z z) z) z)) z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z z) z) (+ z z)) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ (+ (+ (+ z z) z) z) z))) -> (= (+ (+ (+ z z) z) z) (+ (+ (+ z z) z) z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z (+ (+ (+ (+ z z) z) z) z))) -> (= nat (+ (+ (+ z z) z) z) (+ (+ (+ z z) z) z))]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> ('a1 : (= z (+ (+ (+ (+ z z) z) z) z))) -> (= (+ (+ (+ z z) z) z) (+ (+ (+ z z) z) z))] {",
            "intro x : (= z z).",
            "intro x0 : (= z (+ (+ (+ (+ z z) z) z) z)).",
            "apply c0032.",
            "}"
        ],
        "logprob": -4.961707402246624,
        "actions": [
            "intro.",
            "intro.",
            "a c0032",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= (+ (+ z 'a0) 'a0) 'a0)) -> ('a4 : (= (+ (+ z 'a0) 'a0) 'a0)) -> (= z (+ (+ (s 'a0) 'a0) 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> ('a4 : (= nat (+ (+ z 'a0) 'a0) 'a0))  -> (= nat z (+ (+ (s 'a0) 'a0) 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> ('a4 : (= nat (+ (+ z 'a0) 'a0) 'a0)) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= z 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= 'a0 z)) -> (= 'a0 (s 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 z))  -> (= nat 'a0 (s 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 z)) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= z (+ (+ (s z) z) z))) -> ('a1 : (= z (+ (s z) z))) -> (= z (+ (+ (s (+ (s z) (+ (+ z z) z))) z) z))]",
        "problem_raw": "[('a0 : (= nat z (+ (+ (s z) z) z))) -> ('a1 : (= nat z (+ (s z) z))) -> (= nat z (+ (+ (s (+ (s z) (+ (+ z z) z))) z) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ (+ z (+ z z)) (+ (s (+ z z)) z)))) -> (= (+ (s (+ z (+ z (+ z z)))) z) (s z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z (+ (+ z (+ z z)) (+ (s (+ z z)) z)))) -> (= nat (+ (s (+ z (+ z (+ z z)))) z) (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (s 'a0) 'a0))) -> ('a2 : (= z (+ (s 'a0) (+ (s 'a0) 'a0)))) -> (= 'a0 z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (s 'a0) 'a0))) -> ('a2 : (= nat z (+ (s 'a0) (+ (s 'a0) 'a0)))) -> (= nat 'a0 z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= (+ z z) z)) -> ('a1 : (= z (+ z (+ (+ z (+ z z)) (s z))))) -> (= z (+ z (+ (+ z (+ z z)) (s z))))]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) z) ) -> ('a1 : (= nat z (+ z (+ (+ z (+ z z)) (s z))))) -> (= nat z (+ z (+ (+ z (+ z z)) (s z))))]",
        "proof": [
            "theorem t : [('a0 : (= (+ z z) z)) -> ('a1 : (= z (+ z (+ (+ z (+ z z)) (s z))))) -> (= z (+ z (+ (+ z (+ z z)) (s z))))] {",
            "intro x : (= (+ z z) z).",
            "intro _ : [('a1 : (= z (+ z (+ (+ z (+ z z)) (s z))))) -> (= z (+ z (+ (+ z (+ z z)) (s z))))].",
            "}"
        ],
        "logprob": -2.46715677498852,
        "actions": [
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) z) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (+ z 'a0) (+ z 'a0)) (s z)))) -> (= 'a0 (s (+ (+ z 'a0) (s z))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (+ z 'a0) (+ z 'a0)) (s z)))) -> (= nat 'a0 (s (+ (+ z 'a0) (s z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= z (+ (+ z (s (+ (+ z (s z)) (s z)))) z))) -> (= (+ (+ z (s z)) z) (s (+ z z)))]",
        "problem_raw": "[('a0 : (= nat z (+ (+ z (s (+ (+ z (s z)) (s z)))) z))) -> (= nat (+ (+ z (s z)) z) (s (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ z 'a0) (+ z (s (+ z (s z))))))) -> (= 'a0 (+ (+ z 'a0) (s z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ z 'a0) (+ z (s (+ z (s z))))))) -> (= nat 'a0 (+ (+ z 'a0) (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= (+ (+ 'a0 'a0) 'a0) 'a0)) -> (= z (+ (+ 'a0 'a0) 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0))  -> ('a3 : (= nat (+ (+ 'a0 'a0) 'a0) 'a0)) -> (= nat z (+ (+ 'a0 'a0) 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= (+ z (+ z z)) (+ z (+ z z)))) -> ('a1 : (= z (+ (+ z z) z))) -> ('a2 : (= z (+ z (+ z z)))) -> (= (+ (+ (+ z z) z) (+ z (+ z z))) (+ (+ (+ z z) z) z))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (+ z z)) (+ z (+ z z))) ) -> ('a1 : (= nat z (+ (+ z z) z))) -> ('a2 : (= nat z (+ z (+ z z)))) -> (= nat (+ (+ (+ z z) z) (+ z (+ z z))) (+ (+ (+ z z) z) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (+ z z)) (+ z (+ z z))) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= z (+ z (s 'a0)))) -> (= z (+ (+ 'a0 (s 'a0)) z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= nat z (+ z (s 'a0)))) -> (= nat z (+ (+ 'a0 (s 'a0)) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= (s (+ z z)) (s (+ z z)))) -> ('a1 : (= z (+ (s z) (+ z (+ z z))))) -> ('a2 : (= z (+ z z))) -> ('a3 : nat) -> (= z (+ z (+ (s z) z)))]",
        "problem_raw": "[ ('a0 :(= nat (s (+ z z)) (s (+ z z))) ) -> ('a1 : (= nat z (+ (s z) (+ z (+ z z))))) -> ('a2 : (= nat z (+ z z))) -> ('a3 : nat) -> (= nat z (+ z (+ (s z) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (s (+ z z)) (s (+ z z))) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= (+ (+ z z) z) (+ (+ z z) z))) -> (= z (+ (+ z z) z))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z z) z) (+ (+ z z) z)) ) -> (= nat z (+ (+ z z) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z z) z) (+ (+ z z) z)) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 'a0) (+ z 'a0)))) -> (= 'a0 (+ (+ 'a0 'a0) (s z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 'a0) (+ z 'a0)))) -> (= nat 'a0 (+ (+ 'a0 'a0) (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> (= z (+ (+ 'a0 'a0) 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> (= nat z (+ (+ 'a0 'a0) 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= (+ 'a0 'a0) (+ 'a0 'a0))) -> (= 'a0 (+ (+ (+ 'a0 'a0) 'a0) (s 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (+ 'a0 'a0) (+ 'a0 'a0))) -> (= nat 'a0 (+ (+ (+ 'a0 'a0) 'a0) (s 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= (+ (+ (+ 'a0 'a0) 'a0) (s z)) (+ (+ (+ 'a0 'a0) 'a0) (s z)))) -> (= (+ (+ 'a0 'a0) (s z)) (s (+ (+ 'a0 'a0) (s z))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat (+ (+ (+ 'a0 'a0) 'a0) (s z)) (+ (+ (+ 'a0 'a0) 'a0) (s z))))  -> (= nat (+ (+ 'a0 'a0) (s z)) (s (+ (+ 'a0 'a0) (s z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat (+ (+ (+ 'a0 'a0) 'a0) (s z)) (+ (+ (+ 'a0 'a0) 'a0) (s z)))) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= (s (+ 'a0 (+ z z))) z)) -> ('a3 : nat) -> (= (s (+ 'a0 (+ z (+ z z)))) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat (s (+ 'a0 (+ z z))) z)) -> ('a3 : nat) -> (= nat (s (+ 'a0 (+ z (+ z z)))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= (+ 'a0 'a0) (s 'a0))) -> ('a4 : (= (+ (+ 'a0 'a0) (s 'a0)) z)) -> ('a5 : (= z (+ (+ 'a0 'a0) (s 'a0)))) -> (= 'a0 (+ (+ 'a0 'a0) (s 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= nat (+ 'a0 'a0) (s 'a0))) -> ('a4 : (= nat (+ (+ 'a0 'a0) (s 'a0)) z)) -> ('a5 : (= nat z (+ (+ 'a0 'a0) (s 'a0))))  -> (= nat 'a0 (+ (+ 'a0 'a0) (s 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= nat (+ 'a0 'a0) (s 'a0))) -> ('a4 : (= nat (+ (+ 'a0 'a0) (s 'a0)) z)) -> ('a5 : (= nat z (+ (+ 'a0 'a0) (s 'a0)))) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= z (+ (+ z z) z))) -> ('a1 : (= z (+ (+ z z) (+ z z)))) -> (= z (+ (+ z z) (+ z (+ (+ z z) (+ z z)))))]",
        "problem_raw": "[ ('a0 :(= nat z (+ (+ z z) z)) ) -> ('a1 : (= nat z (+ (+ z z) (+ z z)))) -> (= nat z (+ (+ z z) (+ z (+ (+ z z) (+ z z)))))]",
        "proof": [
            "theorem t : [('a0 : (= z (+ (+ z z) z))) -> ('a1 : (= z (+ (+ z z) (+ z z)))) -> (= z (+ (+ z z) (+ z (+ (+ z z) (+ z z)))))] {",
            "intro x : (= z (+ (+ z z) z)).",
            "intro x0 : (= z (+ (+ z z) (+ z z))).",
            "show (= z (+ (+ z z) (+ z (+ (+ z z) (+ z z))))) by rewrite.",
            "}"
        ],
        "logprob": -5.770500627601587,
        "actions": [
            "intro.",
            "intro.",
            "c rewrite",
            "=> (= z (+ (+ z z) (+ z (+ (+ z z) (+ z z)))))."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ (+ z z) z)) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= z 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= 'a0 'a0)) -> ('a5 : (= z 'a0)) -> ('a6 : (= z 'a0)) -> (= z (+ 'a0 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 'a0)) -> ('a5 : (= nat z 'a0)) -> ('a6 : (= nat z 'a0))  -> (= nat z (+ 'a0 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 'a0)) -> ('a5 : (= nat z 'a0)) -> ('a6 : (= nat z 'a0)) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= (+ z (s z)) (+ z (s z)))) -> ('a1 : (= (+ z (+ z (s z))) (+ z (s z)))) -> ('a2 : nat) -> ('a3 : (= z (+ z (s z)))) -> (= z (+ z (s (+ z (s z)))))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (s z)) (+ z (s z))) ) -> ('a1 : (= nat (+ z (+ z (s z))) (+ z (s z)))) -> ('a2 : nat) -> ('a3 : (= nat z (+ z (s z)))) -> (= nat z (+ z (s (+ z (s z)))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (s z)) (+ z (s z))) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= z (+ (+ (+ z z) z) (+ z z)))) -> ('a1 : (= z (+ (+ z (+ (+ (s (+ z z)) z) z)) (+ z z)))) -> (= z (+ (+ z (+ (+ z z) z)) (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z (+ (+ (+ z z) z) (+ z z))) ) -> ('a1 : (= nat z (+ (+ z (+ (+ (s (+ z z)) z) z)) (+ z z)))) -> (= nat z (+ (+ z (+ (+ z z) z)) (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ (+ (+ z z) z) (+ z z))) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 (s 'a0))) -> (= (+ (+ 'a0 'a0) 'a0) (s 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 (s 'a0))) -> (= nat (+ (+ 'a0 'a0) 'a0) (s 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 (+ (+ z 'a0) 'a0))) -> ('a3 : (= (+ 'a0 (s 'a0)) (+ 'a0 (s 'a0)))) -> (= (+ (+ (+ 'a0 'a0) (s 'a0)) (+ 'a0 (s 'a0))) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 (+ (+ z 'a0) 'a0))) -> ('a3 : (= nat (+ 'a0 (s 'a0)) (+ 'a0 (s 'a0))))  -> (= nat (+ (+ (+ 'a0 'a0) (s 'a0)) (+ 'a0 (s 'a0))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 (+ (+ z 'a0) 'a0))) -> ('a3 : (= nat (+ 'a0 (s 'a0)) (+ 'a0 (s 'a0)))) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= (+ 'a0 'a0) (s 'a0))) -> ('a4 : (= (+ (+ 'a0 'a0) (s 'a0)) z)) -> (= (+ (+ 'a0 'a0) (s 'a0)) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= nat (+ 'a0 'a0) (s 'a0))) -> ('a4 : (= nat (+ (+ 'a0 'a0) (s 'a0)) z))  -> (= nat (+ (+ 'a0 'a0) (s 'a0)) z)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= (+ 'a0 'a0) (s 'a0))) -> ('a4 : (= (+ (+ 'a0 'a0) (s 'a0)) z)) -> (= (+ (+ 'a0 'a0) (s 'a0)) z)] {",
            "intro x : nat.",
            "intro x0 : (= x (s x)).",
            "intro x1 : (= z (+ (+ x x) (s x))).",
            "intro x2 : (= (+ x x) (s x)).",
            "intro _ : [('a4 : (= (+ (+ x x) (s x)) z)) -> (= (+ (+ x x) (s x)) z)].",
            "}"
        ],
        "logprob": -7.3569670650469146,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= nat (+ 'a0 'a0) (s 'a0))) -> ('a4 : (= nat (+ (+ 'a0 'a0) (s 'a0)) z)) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= z (+ (+ (+ z z) (+ (s (+ z z)) z)) z))) -> (= (+ (+ (+ z z) z) z) (+ z (+ (+ z (+ (s (+ z z)) z)) z)))]",
        "problem_raw": "[('a0 : (= nat z (+ (+ (+ z z) (+ (s (+ z z)) z)) z))) -> (= nat (+ (+ (+ z z) z) z) (+ z (+ (+ z (+ (s (+ z z)) z)) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> (= 'a0 (+ (+ (s 'a0) (+ (+ (s 'a0) 'a0) 'a0)) 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> (= nat 'a0 (+ (+ (s 'a0) (+ (+ (s 'a0) 'a0) 'a0)) 'a0))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> (= 'a0 (+ (+ (s 'a0) (+ (+ (s 'a0) 'a0) 'a0)) 'a0))] {",
            "intro x : nat.",
            "intro x0 : (= x (+ (+ (s x) x) x)).",
            "show (= x (+ (+ (s x) (+ (+ (s x) x) x)) x)) by rewrite.",
            "}"
        ],
        "logprob": -4.457118259205851,
        "actions": [
            "intro.",
            "intro.",
            "c rewrite",
            "=> (= x (+ (+ (s x) (+ (+ (s x) x) x)) x))."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= (+ z (+ z (+ (+ z (+ z z)) (s z)))) z)) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> (= (+ z (+ z (+ z (+ z (+ (+ z (+ z z)) (s z)))))) z)]",
        "problem_raw": "[ ('a0 :(= nat (+ z (+ z (+ (+ z (+ z z)) (s z)))) z) ) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= nat z (+ z (+ z z)))) -> (= nat (+ z (+ z (+ z (+ z (+ (+ z (+ z z)) (s z)))))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (+ z (+ (+ z (+ z z)) (s z)))) z) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= z z)) -> ('a1 : nat) -> ('a2 : (= (s (+ 'a1 z)) z)) -> ('a3 : (= z (+ (+ z 'a1) z))) -> (= 'a1 (+ (+ 'a1 'a1) (+ (+ 'a1 'a1) z)))]",
        "problem_raw": "[('a0 : (= nat z z)) -> ('a1 : nat) -> ('a2 : (= nat (s (+ 'a1 z)) z)) -> ('a3 : (= nat z (+ (+ z 'a1) z))) -> (= nat 'a1 (+ (+ 'a1 'a1) (+ (+ 'a1 'a1) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= (+ z 'a0) (+ (s (+ z z)) z))) -> (= (+ (s (+ z z)) z) (+ z (+ z 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (+ z 'a0) (+ (s (+ z z)) z))) -> (= nat (+ (s (+ z z)) z) (+ z (+ z 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= z (+ (+ z z) z))) -> ('a1 : (= z (+ (+ z (s (+ z z))) z))) -> (= (+ (+ (+ (+ z z) z) z) z) (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z (+ (+ z z) z)) ) -> ('a1 : (= nat z (+ (+ z (s (+ z z))) z))) -> (= nat (+ (+ (+ (+ z z) z) z) z) (+ z (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ (+ z z) z)) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= (s (+ z z)) (s (+ z z)))) -> ('a1 : (= z (+ (s z) (+ z (+ z z))))) -> (= (s (+ z (+ (s z) z))) z)]",
        "problem_raw": "[('a0 : (= nat (s (+ z z)) (s (+ z z)))) -> ('a1 : (= nat z (+ (s z) (+ z (+ z z))))) -> (= nat (s (+ z (+ (s z) z))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= (s (+ 'a0 z)) z)) -> ('a3 : (= z (+ (+ z 'a0) z))) -> (= (+ (s (+ 'a0 z)) z) (+ (s (+ 'a0 z)) z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat (s (+ 'a0 z)) z)) -> ('a3 : (= nat z (+ (+ z 'a0) z))) -> (= nat (+ (s (+ 'a0 z)) z) (+ (s (+ 'a0 z)) z))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= (s (+ 'a0 z)) z)) -> ('a3 : (= z (+ (+ z 'a0) z))) -> (= (+ (s (+ 'a0 z)) z) (+ (s (+ 'a0 z)) z))] {",
            "intro x : nat.",
            "intro x0 : (= x z).",
            "intro x1 : (= (s (+ x z)) z).",
            "intro x2 : (= z (+ (+ z x) z)).",
            "apply c0032.",
            "}"
        ],
        "logprob": -7.976940393672532,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "a c0032",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= (s (+ z z)) z)) -> ('a1 : (= z (+ (s z) z))) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> (= (s (+ z (+ z (+ z z)))) (+ z (+ z z)))]",
        "problem_raw": "[('a0 : (= nat (s (+ z z)) z)) -> ('a1 : (= nat z (+ (s z) z))) -> ('a2 : nat) -> ('a3 : (= nat z (+ z (+ z z)))) -> (= nat (s (+ z (+ z (+ z z)))) (+ z (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (s (+ z (+ z (+ z z)))) z)) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> (= z (+ z (+ z (s z))))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (s (+ z (+ z (+ z z)))) z)) -> ('a2 : nat) -> ('a3 : (= nat z (+ z (+ z z)))) -> (= nat z (+ z (+ z (s z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= z (+ (+ z z) z))) -> ('a1 : (= (+ z (+ z (+ z z))) (+ (+ z (+ z (+ z z))) z))) -> (= (+ z z) (+ (+ z (+ z z)) z))]",
        "problem_raw": "[ ('a0 :(= nat z (+ (+ z z) z)) ) -> ('a1 : (= nat (+ z (+ z (+ z z))) (+ (+ z (+ z (+ z z))) z))) -> (= nat (+ z z) (+ (+ z (+ z z)) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ (+ z z) z)) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 z)) -> ('a4 : (= z 'a0)) -> ('a5 : (= z 'a0)) -> (= (+ (+ z 'a0) z) (s z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 z)) -> ('a4 : (= nat z 'a0)) -> ('a5 : (= nat z 'a0))  -> (= nat (+ (+ z 'a0) z) (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 z)) -> ('a4 : (= nat z 'a0)) -> ('a5 : (= nat z 'a0)) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= z (+ z z))) -> ('a1 : (= z (+ (+ (+ z z) (+ z z)) (+ z z)))) -> ('a2 : nat) -> ('a3 : nat) -> (= z (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat z (+ z z)) ) -> ('a1 : (= nat z (+ (+ (+ z z) (+ z z)) (+ z z)))) -> ('a2 : nat) -> ('a3 : nat) -> (= nat z (+ z z))]",
        "proof": [
            "theorem t : [('a0 : (= z (+ z z))) -> ('a1 : (= z (+ (+ (+ z z) (+ z z)) (+ z z)))) -> ('a2 : nat) -> ('a3 : nat) -> (= z (+ z z))] {",
            "intro x : (= z (+ z z)).",
            "intro x0 : (= z (+ (+ (+ z z) (+ z z)) (+ z z))).",
            "intro x1 : nat.",
            "intro _ : [('a3 : nat) -> (= z (+ z z))].",
            "}"
        ],
        "logprob": -5.0297921745260705,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z z)) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (s (+ z z)) (s (+ z z)))) -> ('a2 : (= z (+ (s z) z))) -> ('a3 : (= z (+ z (+ z z)))) -> (= (+ z (+ (s z) z)) (+ (s z) (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (s (+ z z)) (s (+ z z)))) -> ('a2 : (= nat z (+ (s z) z))) -> ('a3 : (= nat z (+ z (+ z z)))) -> (= nat (+ z (+ (s z) z)) (+ (s z) (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (s (+ z (+ z (+ z z)))) z)) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> ('a4 : (= (+ z (+ z z)) z)) -> (= z (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (s (+ z (+ z (+ z z)))) z)) -> ('a2 : nat) -> ('a3 : (= nat z (+ z (+ z z)))) -> ('a4 : (= nat (+ z (+ z z)) z)) -> (= nat z (+ z (+ z z)))]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> ('a1 : (= (s (+ z (+ z (+ z z)))) z)) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> ('a4 : (= (+ z (+ z z)) z)) -> (= z (+ z (+ z z)))] {",
            "intro x : (= z z).",
            "intro x0 : (= (s (+ z (+ z (+ z z)))) z).",
            "intro x1 : nat.",
            "intro x2 : (= z (+ z (+ z z))).",
            "intro _ : [('a4 : (= (+ z (+ z z)) z)) -> (= z (+ z (+ z z)))].",
            "}"
        ],
        "logprob": -6.914861569164553,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= z (+ (+ z (+ (+ (+ z z) z) (+ z z))) z))) -> (= (+ (+ z (+ (+ z z) (+ z z))) z) (+ z (s (+ (+ z z) (+ (+ z z) (+ z z))))))]",
        "problem_raw": "[ ('a0 :(= nat z (+ (+ z (+ (+ (+ z z) z) (+ z z))) z)) ) -> (= nat (+ (+ z (+ (+ z z) (+ z z))) z) (+ z (s (+ (+ z z) (+ (+ z z) (+ z z))))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ (+ z (+ (+ (+ z z) z) (+ z z))) z)) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 z) (+ z 'a0)))) -> ('a2 : (= z (+ (+ 'a0 z) 'a0))) -> ('a3 : (= (+ 'a0 (+ z 'a0)) (+ z (+ z 'a0)))) -> (= (+ 'a0 (+ z (+ z 'a0))) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 z) (+ z 'a0)))) -> ('a2 : (= nat z (+ (+ 'a0 z) 'a0))) -> ('a3 : (= nat (+ 'a0 (+ z 'a0)) (+ z (+ z 'a0)))) -> (= nat (+ 'a0 (+ z (+ z 'a0))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= (+ 'a0 'a0) 'a0)) -> ('a2 : nat) -> ('a3 : (= 'a0 'a0)) -> (= (+ 'a0 'a0) 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (+ 'a0 'a0) 'a0)) -> ('a2 : nat) -> ('a3 : (= nat 'a0 'a0)) -> (= nat (+ 'a0 'a0) 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= (+ 'a0 'a0) 'a0)) -> ('a2 : nat) -> ('a3 : (= 'a0 'a0)) -> (= (+ 'a0 'a0) 'a0)] {",
            "intro x : nat.",
            "intro x0 : (= (+ x x) x).",
            "intro x1 : nat.",
            "intro _ : [('a3 : (= x x)) -> (= (+ x x) x)].",
            "}"
        ],
        "logprob": -4.561667759210552,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ z z) (+ z (s (+ z (s z))))))) -> (= 'a0 (+ (+ z z) (s (s (+ z (s z))))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ z z) (+ z (s (+ z (s z))))))) -> (= nat 'a0 (+ (+ z z) (s (s (+ z (s z))))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= z (+ (+ (+ (+ z z) (+ (s (+ z z)) z)) z) z))) -> (= (+ z (+ z z)) (s (+ (+ (+ (+ z z) (+ (s (+ z z)) z)) z) (+ z z))))]",
        "problem_raw": "[('a0 : (= nat z (+ (+ (+ (+ z z) (+ (s (+ z z)) z)) z) z))) -> (= nat (+ z (+ z z)) (s (+ (+ (+ (+ z z) (+ (s (+ z z)) z)) z) (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= (+ z (s (+ z z))) (s (+ z (+ z z))))) -> ('a1 : (= z (+ z (s z)))) -> ('a2 : (= z (+ z (s z)))) -> (= (+ z (+ z (+ z z))) (s z))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (s (+ z z))) (s (+ z (+ z z)))) ) -> ('a1 : (= nat z (+ z (s z)))) -> ('a2 : (= nat z (+ z (s z)))) -> (= nat (+ z (+ z (+ z z))) (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (s (+ z z))) (s (+ z (+ z z)))) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= (+ (+ z z) z) (+ z z))) -> ('a1 : (= z (+ (+ z (+ (+ z z) z)) (+ z z)))) -> (= z (+ (+ (+ (+ z (+ (+ z z) z)) z) (+ z z)) z))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z z) z) (+ z z)) ) -> ('a1 : (= nat z (+ (+ z (+ (+ z z) z)) (+ z z)))) -> (= nat z (+ (+ (+ (+ z (+ (+ z z) z)) z) (+ z z)) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z z) z) (+ z z)) "
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= z (+ (+ z z) z))) -> ('a1 : (= z (+ (+ (+ z z) (+ z z)) z))) -> (= (+ z (+ z (+ (+ (+ z z) (+ z z)) z))) z)]",
        "problem_raw": "[('a0 : (= nat z (+ (+ z z) z))) -> ('a1 : (= nat z (+ (+ (+ z z) (+ z z)) z))) -> (= nat (+ z (+ z (+ (+ (+ z z) (+ z z)) z))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 5,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ z (+ z (+ (+ z z) (+ z z)))))) -> ('a2 : (= z (+ z (+ z (+ z z))))) -> (= z (+ z (+ (+ z z) z)))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z (+ z (+ z (+ (+ z z) (+ z z)))))) -> ('a2 : (= nat z (+ z (+ z (+ z z))))) -> (= nat z (+ z (+ (+ z z) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= z z)) -> ('a1 : nat) -> ('a2 : (= 'a1 (s 'a1))) -> ('a3 : (= 'a1 'a1)) -> ('a4 : (= (s 'a1) 'a1)) -> ('a5 : (= 'a1 'a1)) -> (= z (+ 'a1 'a1))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : nat) -> ('a2 : (= nat 'a1 (s 'a1))) -> ('a3 : (= nat 'a1 'a1)) -> ('a4 : (= nat (s 'a1) 'a1)) -> ('a5 : (= nat 'a1 'a1)) -> (= nat z (+ 'a1 'a1))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 z)) -> ('a4 : (= z 'a0)) -> ('a5 : (= z 'a0)) -> ('a6 : (= 'a0 'a0)) -> ('a7 : (= 'a0 'a0)) -> ('a8 : (= z (+ 'a0 'a0))) -> (= (+ 'a0 'a0) 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 z)) -> ('a4 : (= nat z 'a0)) -> ('a5 : (= nat z 'a0)) -> ('a6 : (= nat 'a0 'a0))  -> ('a7 : (= nat 'a0 'a0)) -> ('a8 : (= nat z (+ 'a0 'a0))) -> (= nat (+ 'a0 'a0) 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 z)) -> ('a4 : (= nat z 'a0)) -> ('a5 : (= nat z 'a0)) -> ('a6 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= (+ 'a0 (+ z z)) z)) -> ('a2 : nat) -> ('a3 : (= z (+ z z))) -> ('a4 : (= z (+ z (+ z z)))) -> (= z (+ z (+ z z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (+ 'a0 (+ z z)) z)) -> ('a2 : nat) -> ('a3 : (= nat z (+ z z))) -> ('a4 : (= nat z (+ z (+ z z)))) -> (= nat z (+ z (+ z z)))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= (+ 'a0 (+ z z)) z)) -> ('a2 : nat) -> ('a3 : (= z (+ z z))) -> ('a4 : (= z (+ z (+ z z)))) -> (= z (+ z (+ z z)))] {",
            "intro x : nat.",
            "intro x0 : (= (+ x (+ z z)) z).",
            "intro x1 : nat.",
            "intro x2 : (= z (+ z z)).",
            "intro _ : [('a4 : (= z (+ z (+ z z)))) -> (= z (+ z (+ z z)))].",
            "}"
        ],
        "logprob": -10.22139276486897,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= (s 'a0) z)) -> ('a2 : nat) -> ('a3 : (= z (+ (s 'a0) z))) -> (= z (s 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (s 'a0) z)) -> ('a2 : nat) -> ('a3 : (= nat z (+ (s 'a0) z))) -> (= nat z (s 'a0))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= (s 'a0) z)) -> ('a2 : nat) -> ('a3 : (= z (+ (s 'a0) z))) -> (= z (s 'a0))] {",
            "intro x : nat.",
            "intro x0 : (= (s x) z).",
            "intro x1 : nat.",
            "show (= z (s x)) by eq_symm.",
            "intro _ : [('a3 : (= z (+ (s x) z))) -> (= z (s x))].",
            "}"
        ],
        "logprob": -8.457772887136416,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "c eq_symm",
            "=> (= z (s x)).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ z 'a0))) -> ('a2 : (= z (+ 'a0 (+ z (+ z 'a0))))) -> (= (+ 'a0 z) (s (+ z (+ z (+ z 'a0)))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ z 'a0))) -> ('a2 : (= nat z (+ 'a0 (+ z (+ z 'a0))))) -> (= nat (+ 'a0 z) (s (+ z (+ z (+ z 'a0)))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= z 'a0)) -> ('a3 : (= z 'a0)) -> ('a4 : (= 'a0 'a0)) -> ('a5 : (= z 'a0)) -> (= (+ 'a0 'a0) 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat z 'a0))  -> ('a4 : (= nat 'a0 'a0)) -> ('a5 : (= nat z 'a0)) -> (= nat (+ 'a0 'a0) 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat z 'a0)) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= (+ 'a0 (+ z 'a0)) (+ 'a0 (+ z 'a0)))) -> (= z (+ 'a0 (+ (+ 'a0 (+ z 'a0)) z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (+ 'a0 (+ z 'a0)) (+ 'a0 (+ z 'a0)))) -> (= nat z (+ 'a0 (+ (+ 'a0 (+ z 'a0)) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= (+ z (+ z z)) (+ z (+ z z)))) -> ('a1 : nat) -> ('a2 : (= z (+ z (+ z z)))) -> ('a3 : (= z (+ z (+ z (+ z z))))) -> (= 'a1 z)]",
        "problem_raw": "[ ('a0 :(= nat (+ z (+ z z)) (+ z (+ z z))) ) -> ('a1 : nat) -> ('a2 : (= nat z (+ z (+ z z)))) -> ('a3 : (= nat z (+ z (+ z (+ z z))))) -> (= nat 'a1 z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (+ z z)) (+ z (+ z z))) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 z) (s z)))) -> ('a2 : (= (+ (+ 'a0 z) (+ z (s z))) z)) -> (= z (+ (+ 'a0 z) (s z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 z) (s z)))) -> ('a2 : (= nat (+ (+ 'a0 z) (+ z (s z))) z)) -> (= nat z (+ (+ 'a0 z) (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= (+ (+ z (s z)) (s z)) z)) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= z (+ (+ 'a2 (s z)) (s z)))) -> (= z (+ (+ 'a2 (s z)) (s z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z (s z)) (s z)) z) ) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= nat z (+ (+ 'a2 (s z)) (s z)))) -> (= nat z (+ (+ 'a2 (s z)) (s z)))]",
        "proof": [
            "theorem t : [('a0 : (= (+ (+ z (s z)) (s z)) z)) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= z (+ (+ 'a2 (s z)) (s z)))) -> (= z (+ (+ 'a2 (s z)) (s z)))] {",
            "intro x : (= (+ (+ z (s z)) (s z)) z).",
            "intro x0 : nat.",
            "intro x1 : nat.",
            "intro _ : [('a3 : (= z (+ (+ x1 (s z)) (s z)))) -> (= z (+ (+ x1 (s z)) (s z)))].",
            "}"
        ],
        "logprob": -8.195671940356187,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z (s z)) (s z)) z) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= (+ z (s z)) (+ z (s z)))) -> ('a1 : (= z (+ (+ z (s (s z))) (s z)))) -> (= (+ (+ (s (s z)) z) (s z)) (s (+ (+ z (s (+ (+ z (s z)) (s z)))) z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (s z)) (+ z (s z))) ) -> ('a1 : (= nat z (+ (+ z (s (s z))) (s z)))) -> (= nat (+ (+ (s (s z)) z) (s z)) (s (+ (+ z (s (+ (+ z (s z)) (s z)))) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (s z)) (+ z (s z))) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= z 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= z 'a0)) -> ('a5 : (= z 'a0)) -> (= z (+ 'a0 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat z 'a0)) -> ('a5 : (= nat z 'a0)) -> (= nat z (+ 'a0 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (+ z 'a0) (+ z z)) (s z)))) -> (= (+ (+ (+ z 'a0) (s z)) z) (+ (+ (+ z (+ z z)) (s z)) z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (+ z 'a0) (+ z z)) (s z)))) -> (= nat (+ (+ (+ z 'a0) (s z)) z) (+ (+ (+ z (+ z z)) (s z)) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : nat) -> ('a3 : (= z (+ (+ 'a0 'a0) (s 'a0)))) -> (= (+ 'a0 (s 'a0)) (+ (+ 'a0 'a0) (s 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : nat) -> ('a3 : (= nat z (+ (+ 'a0 'a0) (s 'a0)))) -> (= nat (+ 'a0 (s 'a0)) (+ (+ 'a0 'a0) (s 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= z (+ z (+ (+ z z) (+ z z))))) -> (= z (+ (+ z (+ (+ z z) (+ (+ (+ z z) (+ z z)) z))) (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z (+ z (+ (+ z z) (+ z z)))) ) -> (= nat z (+ (+ z (+ (+ z z) (+ (+ (+ z z) (+ z z)) z))) (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z (+ (+ z z) (+ z z)))) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= (+ (+ z z) z) (+ z z))) -> ('a1 : (= z (+ (+ z z) (+ (s (+ z z)) z)))) -> (= (+ (+ z (+ (+ z z) (+ (s (+ z z)) z))) z) (+ z z))]",
        "problem_raw": "[('a0 : (= nat (+ (+ z z) z) (+ z z))) -> ('a1 : (= nat z (+ (+ z z) (+ (s (+ z z)) z)))) -> (= nat (+ (+ z (+ (+ z z) (+ (s (+ z z)) z))) z) (+ z z))]",
        "proof": [
            "theorem t : [('a0 : (= (+ (+ z z) z) (+ z z))) -> ('a1 : (= z (+ (+ z z) (+ (s (+ z z)) z)))) -> (= (+ (+ z (+ (+ z z) (+ (s (+ z z)) z))) z) (+ z z))] {",
            "intro x : (= (+ (+ z z) z) (+ z z)).",
            "intro x0 : (= z (+ (+ z z) (+ (s (+ z z)) z))).",
            "show (= (+ (+ z (+ (+ z z) (+ (s (+ z z)) z))) z) (+ z z)) by rewrite.",
            "}"
        ],
        "logprob": -8.402583101120785,
        "actions": [
            "intro.",
            "intro.",
            "c rewrite",
            "=> (= (+ (+ z (+ (+ z z) (+ (s (+ z z)) z))) z) (+ z z))."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 'a0) (+ z 'a0)))) -> (= 'a0 (+ (+ 'a0 'a0) (+ z 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 'a0) (+ z 'a0)))) -> (= nat 'a0 (+ (+ 'a0 'a0) (+ z 'a0)))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 'a0) (+ z 'a0)))) -> (= 'a0 (+ (+ 'a0 'a0) (+ z 'a0)))] {",
            "intro x : nat.",
            "intro _ : [('a1 : (= x (+ (+ x x) (+ z x)))) -> (= x (+ (+ x x) (+ z x)))].",
            "}"
        ],
        "logprob": -3.329219209863842,
        "actions": [
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= (s z) (s z))) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= z (+ 'a1 'a1))) -> (= z (+ 'a1 'a1))]",
        "problem_raw": "[ ('a0 :(= nat (s z) (s z)) ) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= nat z (+ 'a1 'a1))) -> (= nat z (+ 'a1 'a1))]",
        "proof": [
            "theorem t : [('a0 : (= (s z) (s z))) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= z (+ 'a1 'a1))) -> (= z (+ 'a1 'a1))] {",
            "intro x : (= (s z) (s z)).",
            "intro x0 : nat.",
            "intro x1 : nat.",
            "intro _ : [('a3 : (= z (+ x0 x0))) -> (= z (+ x0 x0))].",
            "}"
        ],
        "logprob": -8.81409981007168,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (s z) (s z)) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= 'a0 z)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= z 'a0)) -> ('a5 : (= 'a0 'a0)) -> ('a6 : (= z 'a0)) -> (= 'a0 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat 'a0 z)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat z 'a0)) -> ('a5 : (= nat 'a0 'a0)) -> ('a6 : (= nat z 'a0)) -> (= nat 'a0 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= (+ z (+ z z)) (+ z (+ z z)))) -> ('a1 : (= z (+ (+ z z) z))) -> (= (+ z (+ z z)) (+ z (+ (+ z z) z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (+ z z)) (+ z (+ z z))) ) -> ('a1 : (= nat z (+ (+ z z) z))) -> (= nat (+ z (+ z z)) (+ z (+ (+ z z) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (+ z z)) (+ z (+ z z))) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= (+ z (+ z z)) (+ z (+ z z)))) -> ('a1 : (= z (+ z (+ z z)))) -> ('a2 : (= z (+ z (+ z (+ (+ z z) z))))) -> (= (+ z (+ z z)) z)]",
        "problem_raw": "[ ('a0 :(= nat (+ z (+ z z)) (+ z (+ z z))) ) -> ('a1 : (= nat z (+ z (+ z z)))) -> ('a2 : (= nat z (+ z (+ z (+ (+ z z) z))))) -> (= nat (+ z (+ z z)) z)]",
        "proof": [
            "theorem t : [('a0 : (= (+ z (+ z z)) (+ z (+ z z)))) -> ('a1 : (= z (+ z (+ z z)))) -> ('a2 : (= z (+ z (+ z (+ (+ z z) z))))) -> (= (+ z (+ z z)) z)] {",
            "intro x : (= (+ z (+ z z)) (+ z (+ z z))).",
            "intro x0 : (= z (+ z (+ z z))).",
            "show (= (+ z (+ z z)) z) by eq_symm.",
            "intro _ : [('a2 : (= z (+ z (+ z (+ (+ z z) z))))) -> (= (+ z (+ z z)) z)].",
            "}"
        ],
        "logprob": -7.071324762609477,
        "actions": [
            "intro.",
            "intro.",
            "c eq_symm",
            "=> (= (+ z (+ z z)) z).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (+ z z)) (+ z (+ z z))) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= z 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= 'a0 'a0)) -> ('a5 : (= z 'a0)) -> (= 'a0 z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 'a0)) -> ('a5 : (= nat z 'a0))  -> (= nat 'a0 z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 'a0)) -> ('a5 : (= nat z 'a0)) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : nat) -> ('a3 : (= z 'a0)) -> ('a4 : (= (+ z z) (+ z (+ z z)))) -> ('a5 : (= z (+ z (+ z z)))) -> (= z (+ z z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : nat) -> ('a3 : (= nat z 'a0)) -> ('a4 : (= nat (+ z z) (+ z (+ z z)))) -> ('a5 : (= nat z (+ z (+ z z)))) -> (= nat z (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= (+ (s z) z) (+ (s z) z))) -> (= z (+ (s z) (+ (s z) (+ (s z) z))))]",
        "problem_raw": "[ ('a0 :(= nat (+ (s z) z) (+ (s z) z)) ) -> (= nat z (+ (s z) (+ (s z) (+ (s z) z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (s z) z) (+ (s z) z)) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (+ (+ z z) z) (+ z z))) -> (= z (+ (+ (+ z z) z) z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (+ (+ z z) z) (+ z z))) -> (= nat z (+ (+ (+ z z) z) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (+ z 'a0) (+ (s (+ z z)) z)) z))) -> (= 'a0 (+ (+ z (+ (s z) z)) 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (+ z 'a0) (+ (s (+ z z)) z)) z))) -> (= nat 'a0 (+ (+ z (+ (s z) z)) 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ (+ (+ z z) z) (+ z z)))) -> (= z z)]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z (+ (+ (+ z z) z) (+ z z)))) -> (= nat z z)]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> ('a1 : (= z (+ (+ (+ z z) z) (+ z z)))) -> (= z z)] {",
            "intro x : (= z z).",
            "intro _ : [('a1 : (= z (+ (+ (+ z z) z) (+ z z)))) -> (= z z)].",
            "}"
        ],
        "logprob": -3.4468429484800645,
        "actions": [
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= (+ 'a0 'a0) (s 'a0))) -> ('a4 : (= (+ (+ 'a0 'a0) (s 'a0)) z)) -> (= (+ z (+ (+ 'a0 'a0) (s 'a0))) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= nat (+ 'a0 'a0) (s 'a0))) -> ('a4 : (= nat (+ (+ 'a0 'a0) (s 'a0)) z))  -> (= nat (+ z (+ (+ 'a0 'a0) (s 'a0))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= nat (+ 'a0 'a0) (s 'a0))) -> ('a4 : (= nat (+ (+ 'a0 'a0) (s 'a0)) z)) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= z (+ z z))) -> ('a1 : (= z (+ (+ (+ z z) (+ z z)) (+ z z)))) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> (= 'a2 z)]",
        "problem_raw": "[ ('a0 :(= nat z (+ z z)) ) -> ('a1 : (= nat z (+ (+ (+ z z) (+ z z)) (+ z z)))) -> ('a2 : nat) -> ('a3 : (= nat z (+ z (+ z z)))) -> (= nat 'a2 z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z z)) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= (+ z (+ z z)) (+ z z))) -> ('a1 : (= (+ z (+ z (+ z z))) (+ (+ z (+ z (+ z z))) z))) -> (= (+ z (+ z (+ z (+ (+ z (+ z z)) z)))) z)]",
        "problem_raw": "[ ('a0 :(= nat (+ z (+ z z)) (+ z z)) ) -> ('a1 : (= nat (+ z (+ z (+ z z))) (+ (+ z (+ z (+ z z))) z))) -> (= nat (+ z (+ z (+ z (+ (+ z (+ z z)) z)))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (+ z z)) (+ z z)) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= (+ z z) (+ z z))) -> ('a1 : (= (+ z (+ z (+ z z))) (+ (+ (+ z (+ z (+ z z))) z) z))) -> (= (+ (+ (+ z (+ z z)) z) z) (s (+ z (+ (+ z z) z))))]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) (+ z z)) ) -> ('a1 : (= nat (+ z (+ z (+ z z))) (+ (+ (+ z (+ z (+ z z))) z) z))) -> (= nat (+ (+ (+ z (+ z z)) z) z) (s (+ z (+ (+ z z) z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) (+ z z)) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= z 'a0)) -> ('a4 : (= (+ 'a0 'a0) 'a0)) -> (= 'a0 z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat z 'a0)) -> ('a4 : (= nat (+ 'a0 'a0) 'a0)) -> (= nat 'a0 z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 (+ (+ z z) z)) z))) -> (= 'a0 (+ 'a0 (+ (+ z z) z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 (+ (+ z z) z)) z))) -> (= nat 'a0 (+ 'a0 (+ (+ z z) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= 'a0 (+ (+ 'a0 z) (s z)))) -> (= 'a0 z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat 'a0 (+ (+ 'a0 z) (s z)))) -> (= nat 'a0 z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= (+ z (+ z z)) (+ z (+ z z)))) -> ('a1 : (= z (+ (+ z z) z))) -> ('a2 : (= z (+ z z))) -> (= (+ (+ z z) z) z)]",
        "problem_raw": "[ ('a0 :(= nat (+ z (+ z z)) (+ z (+ z z))) ) -> ('a1 : (= nat z (+ (+ z z) z))) -> ('a2 : (= nat z (+ z z))) -> (= nat (+ (+ z z) z) z)]",
        "proof": [
            "theorem t : [('a0 : (= (+ z (+ z z)) (+ z (+ z z)))) -> ('a1 : (= z (+ (+ z z) z))) -> ('a2 : (= z (+ z z))) -> (= (+ (+ z z) z) z)] {",
            "intro x : (= (+ z (+ z z)) (+ z (+ z z))).",
            "intro x0 : (= z (+ (+ z z) z)).",
            "show (= (+ (+ z z) z) z) by eq_symm.",
            "intro _ : [('a2 : (= z (+ z z))) -> (= (+ (+ z z) z) z)].",
            "}"
        ],
        "logprob": -7.4770622487786165,
        "actions": [
            "intro.",
            "intro.",
            "c eq_symm",
            "=> (= (+ (+ z z) z) z).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (+ z z)) (+ z (+ z z))) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= z (+ z (+ z z)))) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> ('a4 : (= z (+ z (+ z (+ z z))))) -> (= z (+ z (+ z (+ (+ z 'a1) (+ z z)))))]",
        "problem_raw": "[ ('a0 :(= nat z (+ z (+ z z))) ) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= nat z (+ z (+ z z)))) -> ('a4 : (= nat z (+ z (+ z (+ z z))))) -> (= nat z (+ z (+ z (+ (+ z 'a1) (+ z z)))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z (+ z z))) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= z (+ (+ z z) (+ (s (+ (+ z z) z)) z)))) -> (= z (+ (+ (+ (+ (+ z z) z) (+ (s (+ z z)) z)) z) z))]",
        "problem_raw": "[ ('a0 :(= nat z (+ (+ z z) (+ (s (+ (+ z z) z)) z))) ) -> (= nat z (+ (+ (+ (+ (+ z z) z) (+ (s (+ z z)) z)) z) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ (+ z z) (+ (s (+ (+ z z) z)) z))) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= (+ (+ z z) z) (+ z z))) -> ('a1 : (= (+ z z) (+ z (+ z (+ (s (+ z z)) z))))) -> (= z (+ z (+ z (+ z (+ (s (+ (+ z z) z)) z)))))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z z) z) (+ z z)) ) -> ('a1 : (= nat (+ z z) (+ z (+ z (+ (s (+ z z)) z))))) -> (= nat z (+ z (+ z (+ z (+ (s (+ (+ z z) z)) z)))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z z) z) (+ z z)) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= z 'a0)) -> ('a4 : (= z 'a0)) -> ('a5 : (= 'a0 z)) -> ('a6 : (= 'a0 'a0)) -> (= 'a0 z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat z 'a0)) -> ('a4 : (= nat z 'a0)) -> ('a5 : (= nat 'a0 z)) -> ('a6 : (= nat 'a0 'a0)) -> (= nat 'a0 z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= z (+ (+ 'a0 'a0) (s 'a0)))) -> (= z (+ (+ 'a0 'a0) (s 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat z (+ (+ 'a0 'a0) (s 'a0)))) -> (= nat z (+ (+ 'a0 'a0) (s 'a0)))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= z (+ (+ 'a0 'a0) (s 'a0)))) -> (= z (+ (+ 'a0 'a0) (s 'a0)))] {",
            "intro x : nat.",
            "intro x0 : (= x (s x)).",
            "intro _ : [('a2 : (= z (+ (+ x x) (s x)))) -> (= z (+ (+ x x) (s x)))].",
            "}"
        ],
        "logprob": -5.076721200283618,
        "actions": [
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= z (+ (s 'a0) (+ (s 'a0) 'a0)))) -> (= (+ (s 'a0) z) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= nat z (+ (s 'a0) (+ (s 'a0) 'a0)))) -> (= nat (+ (s 'a0) z) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= (+ z (+ z (+ (+ z (+ z z)) (s z)))) z)) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : nat) -> ('a4 : (= z (+ z z))) -> (= z (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (+ z (+ (+ z (+ z z)) (s z)))) z) ) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : nat) -> ('a4 : (= nat z (+ z z))) -> (= nat z (+ z (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (+ z (+ (+ z (+ z z)) (s z)))) z) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : nat) -> ('a3 : (= z 'a0)) -> ('a4 : (= z 'a0)) -> ('a5 : (= 'a0 'a0)) -> ('a6 : (= 'a0 z)) -> ('a7 : (= z 'a0)) -> ('a8 : (= z z)) -> (= z z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : nat) -> ('a3 : (= nat z 'a0)) -> ('a4 : (= nat z 'a0)) -> ('a5 : (= nat 'a0 'a0)) -> ('a6 : (= nat 'a0 z)) -> ('a7 : (= nat z 'a0)) -> ('a8 : (= nat z z)) -> (= nat z z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= (s z) (+ (s z) z))) -> ('a1 : (= z (+ (s z) z))) -> ('a2 : nat) -> ('a3 : nat) -> ('a4 : (= (+ (s z) z) (+ z (+ z z)))) -> (= (+ (s z) z) (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat (s z) (+ (s z) z)) ) -> ('a1 : (= nat z (+ (s z) z))) -> ('a2 : nat) -> ('a3 : nat) -> ('a4 : (= nat (+ (s z) z) (+ z (+ z z)))) -> (= nat (+ (s z) z) (+ z (+ z z)))]",
        "proof": [
            "theorem t : [('a0 : (= (s z) (+ (s z) z))) -> ('a1 : (= z (+ (s z) z))) -> ('a2 : nat) -> ('a3 : nat) -> ('a4 : (= (+ (s z) z) (+ z (+ z z)))) -> (= (+ (s z) z) (+ z (+ z z)))] {",
            "intro x : (= (s z) (+ (s z) z)).",
            "intro x0 : (= z (+ (s z) z)).",
            "intro x1 : nat.",
            "intro x2 : nat.",
            "intro _ : [('a4 : (= (+ (s z) z) (+ z (+ z z)))) -> (= (+ (s z) z) (+ z (+ z z)))].",
            "}"
        ],
        "logprob": -10.041078190307005,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (s z) (+ (s z) z)) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= z (+ z (+ z z)))) -> ('a1 : (= (+ (+ z z) (+ z z)) z)) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> (= z (+ z (+ z (+ z z))))]",
        "problem_raw": "[ ('a0 :(= nat z (+ z (+ z z))) ) -> ('a1 : (= nat (+ (+ z z) (+ z z)) z)) -> ('a2 : nat) -> ('a3 : (= nat z (+ z (+ z z)))) -> (= nat z (+ z (+ z (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z (+ z z))) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= z 'a0)) -> ('a4 : (= 'a0 'a0)) -> (= (+ 'a0 'a0) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat z 'a0)) -> ('a4 : (= nat 'a0 'a0)) -> (= nat (+ 'a0 'a0) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= (+ (+ z 'a0) 'a0) 'a0)) -> (= z (+ (+ (+ 'a0 'a0) 'a0) 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> (= nat z (+ (+ (+ 'a0 'a0) 'a0) 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ (+ z z) (+ z z)))) -> (= z (+ (+ z (+ (+ z z) (+ z z))) (+ z (+ (+ z z) (+ z z)))))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z (+ (+ z z) (+ z z)))) -> (= nat z (+ (+ z (+ (+ z z) (+ z z))) (+ z (+ (+ z z) (+ z z)))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= (+ (+ z (s z)) z) (+ z (s z)))) -> (= z (+ (+ z (s (s z))) (s (+ (+ (+ z z) (s z)) z))))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z (s z)) z) (+ z (s z))) ) -> (= nat z (+ (+ z (s (s z))) (s (+ (+ (+ z z) (s z)) z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z (s z)) z) (+ z (s z))) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= (+ (+ 'a0 'a0) 'a0) 'a0)) -> ('a4 : (= (+ (+ z z) 'a0) 'a0)) -> (= (+ 'a0 'a0) (+ 'a0 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat 'a0 'a0))  -> ('a3 : (= nat (+ (+ 'a0 'a0) 'a0) 'a0)) -> ('a4 : (= nat (+ (+ z z) 'a0) 'a0)) -> (= nat (+ 'a0 'a0) (+ 'a0 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= z (+ z (s 'a0)))) -> (= 'a0 (+ (+ 'a0 'a0) (s 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= nat z (+ z (s 'a0)))) -> (= nat 'a0 (+ (+ 'a0 'a0) (s 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 (s 'a0))) -> ('a4 : (= z (+ (+ 'a0 'a0) (s 'a0)))) -> (= z (+ (+ 'a0 'a0) (s 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 (s 'a0))) -> ('a4 : (= nat z (+ (+ 'a0 'a0) (s 'a0)))) -> (= nat z (+ (+ 'a0 'a0) (s 'a0)))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 (s 'a0))) -> ('a4 : (= z (+ (+ 'a0 'a0) (s 'a0)))) -> (= z (+ (+ 'a0 'a0) (s 'a0)))] {",
            "intro x : nat.",
            "intro x0 : (= x z).",
            "intro x1 : (= x x).",
            "intro x2 : (= x (s x)).",
            "intro _ : [('a4 : (= z (+ (+ x x) (s x)))) -> (= z (+ (+ x x) (s x)))].",
            "}"
        ],
        "logprob": -10.142134861159946,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ z (+ z (+ (+ z z) (+ z z)))))) -> ('a2 : (= z (+ z (+ z z)))) -> ('a3 : (= z (+ z (+ z z)))) -> (= z (+ z (+ z (+ z z))))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z (+ z (+ z (+ (+ z z) (+ z z)))))) -> ('a2 : (= nat z (+ z (+ z z)))) -> ('a3 : (= nat z (+ z (+ z z)))) -> (= nat z (+ z (+ z (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= (+ (+ z z) z) (+ z z))) -> ('a1 : (= z (+ (+ z z) (+ (s (+ z z)) z)))) -> ('a2 : nat) -> ('a3 : (= (+ z (+ z z)) (+ z (+ z z)))) -> (= (+ z (+ (+ z z) (+ (s (+ z z)) z))) z)]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z z) z) (+ z z)) ) -> ('a1 : (= nat z (+ (+ z z) (+ (s (+ z z)) z)))) -> ('a2 : nat) -> ('a3 : (= nat (+ z (+ z z)) (+ z (+ z z)))) -> (= nat (+ z (+ (+ z z) (+ (s (+ z z)) z))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z z) z) (+ z z)) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= z (+ (+ z z) (+ z z)))) -> ('a1 : (= (s (+ z (+ z z))) z)) -> (= z (s (+ z (+ z (+ (+ z z) (+ z z))))))]",
        "problem_raw": "[('a0 : (= nat z (+ (+ z z) (+ z z)))) -> ('a1 : (= nat (s (+ z (+ z z))) z)) -> (= nat z (s (+ z (+ z (+ (+ z z) (+ z z))))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= z (s (+ z (+ z (+ z z)))))) -> ('a1 : (= z (+ z (+ z (+ z z))))) -> ('a2 : nat) -> ('a3 : (= (+ z (+ z z)) z)) -> (= (+ z (+ z z)) (s (+ z (+ (+ z (+ z z)) z))))]",
        "problem_raw": "[ ('a0 :(= nat z (s (+ z (+ z (+ z z))))) ) -> ('a1 : (= nat z (+ z (+ z (+ z z))))) -> ('a2 : nat) -> ('a3 : (= nat (+ z (+ z z)) z)) -> (= nat (+ z (+ z z)) (s (+ z (+ (+ z (+ z z)) z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (s (+ z (+ z (+ z z))))) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : nat) -> ('a4 : (= z 'a0)) -> ('a5 : (= z 'a0)) -> (= (+ 'a0 'a0) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : nat) -> ('a4 : (= nat z 'a0)) -> ('a5 : (= nat z 'a0)) -> (= nat (+ 'a0 'a0) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (s (+ z z)) z)) -> (= z (s (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (s (+ z z)) z)) -> (= nat z (s (+ z z)))]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> ('a1 : (= (s (+ z z)) z)) -> (= z (s (+ z z)))] {",
            "intro x : (= z z).",
            "intro x0 : (= (s (+ z z)) z).",
            "apply c0152.",
            "}"
        ],
        "logprob": -6.162611283651164,
        "actions": [
            "intro.",
            "intro.",
            "a c0152",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= z (+ (+ 'a0 'a0) (s z)))) -> ('a3 : (= (+ (+ 'a0 'a0) (s z)) (+ (+ 'a0 'a0) (s z)))) -> ('a4 : (= z (+ (+ 'a0 'a0) (s z)))) -> (= z (+ (+ 'a0 'a0) (s z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat z (+ (+ 'a0 'a0) (s z)))) -> ('a3 : (= nat (+ (+ 'a0 'a0) (s z)) (+ (+ 'a0 'a0) (s z)))) -> ('a4 : (= nat z (+ (+ 'a0 'a0) (s z))))  -> (= nat z (+ (+ 'a0 'a0) (s z)))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= z (+ (+ 'a0 'a0) (s z)))) -> ('a3 : (= (+ (+ 'a0 'a0) (s z)) (+ (+ 'a0 'a0) (s z)))) -> ('a4 : (= z (+ (+ 'a0 'a0) (s z)))) -> (= z (+ (+ 'a0 'a0) (s z)))] {",
            "intro x : nat.",
            "intro x0 : (= x x).",
            "intro x1 : (= z (+ (+ x x) (s z))).",
            "intro x2 : (= (+ (+ x x) (s z)) (+ (+ x x) (s z))).",
            "intro _ : [('a4 : (= z (+ (+ x x) (s z)))) -> (= z (+ (+ x x) (s z)))].",
            "}"
        ],
        "logprob": -10.154986382168985,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat z (+ (+ 'a0 'a0) (s z)))) -> ('a3 : (= nat (+ (+ 'a0 'a0) (s z)) (+ (+ 'a0 'a0) (s z)))) -> ('a4 : (= nat z (+ (+ 'a0 'a0) (s z)))) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= z 'a0)) -> (= (+ 'a0 'a0) 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat z 'a0)) -> (= nat (+ 'a0 'a0) 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 z) (s z)))) -> ('a2 : (= z (+ (+ 'a0 z) (s (+ (+ 'a0 z) (s z)))))) -> (= z (+ (+ 'a0 z) (s (+ (+ 'a0 z) z))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 z) (s z)))) -> ('a2 : (= nat z (+ (+ 'a0 z) (s (+ (+ 'a0 z) (s z)))))) -> (= nat z (+ (+ 'a0 z) (s (+ (+ 'a0 z) z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (s (+ z z)) z)) -> ('a2 : (= z (+ (s z) (+ z z)))) -> ('a3 : nat) -> (= (s (+ z z)) (s z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (s (+ z z)) z)) -> ('a2 : (= nat z (+ (s z) (+ z z)))) -> ('a3 : nat) -> (= nat (s (+ z z)) (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (s 'a0) 'a0))) -> ('a2 : (= z (+ (s 'a0) (+ (s 'a0) 'a0)))) -> (= 'a0 (+ z (+ (s 'a0) (+ (s 'a0) 'a0))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (s 'a0) 'a0))) -> ('a2 : (= nat z (+ (s 'a0) (+ (s 'a0) 'a0)))) -> (= nat 'a0 (+ z (+ (s 'a0) (+ (s 'a0) 'a0))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (s (+ z z)) (s (+ z z)))) -> ('a2 : (= z (+ (s z) z))) -> ('a3 : (= z (+ z (+ z z)))) -> (= (+ z (+ z z)) (s z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (s (+ z z)) (s (+ z z)))) -> ('a2 : (= nat z (+ (s z) z))) -> ('a3 : (= nat z (+ z (+ z z)))) -> (= nat (+ z (+ z z)) (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= (+ (+ z z) z) (+ z z))) -> ('a1 : (= z (+ (+ z z) (+ (s (+ z z)) z)))) -> (= z (+ (+ z z) (s (+ z (+ z z)))))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z z) z) (+ z z)) ) -> ('a1 : (= nat z (+ (+ z z) (+ (s (+ z z)) z)))) -> (= nat z (+ (+ z z) (s (+ z (+ z z)))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z z) z) (+ z z)) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (s (+ z z)) z)) -> ('a2 : (= z (+ (s z) (+ z (+ z z))))) -> (= z (+ (s z) z))]",
        "problem_raw": "[('a0 : (= nat z z)) -> ('a1 : (= nat (s (+ z z)) z)) -> ('a2 : (= nat z (+ (s z) (+ z (+ z z))))) -> (= nat z (+ (s z) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= z (+ z (+ z z)))) -> ('a1 : nat) -> ('a2 : (= z (+ z (+ z z)))) -> (= z (+ z (+ z (+ z z))))]",
        "problem_raw": "[ ('a0 :(= nat z (+ z (+ z z))) ) -> ('a1 : nat) -> ('a2 : (= nat z (+ z (+ z z)))) -> (= nat z (+ z (+ z (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z (+ z z))) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= (+ z (+ z z)) z)) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> (= 'a1 (s (+ z (+ z z))))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (+ z z)) z) ) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= nat z (+ z (+ z z)))) -> (= nat 'a1 (s (+ z (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (+ z z)) z) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= (+ (+ z z) z) z)) -> ('a1 : (= z (+ (+ z z) (+ (s (+ z z)) z)))) -> (= z (+ (+ z z) (+ (s (+ z (+ (+ z z) (+ (s (+ z z)) z)))) z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z z) z) z) ) -> ('a1 : (= nat z (+ (+ z z) (+ (s (+ z z)) z)))) -> (= nat z (+ (+ z z) (+ (s (+ z (+ (+ z z) (+ (s (+ z z)) z)))) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z z) z) z) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= z (+ z 'a0))) -> (= (+ 'a0 (s 'a0)) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= nat z (+ z 'a0))) -> (= nat (+ 'a0 (s 'a0)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= (+ z z) z)) -> ('a1 : (= z (+ z (+ (+ z (+ z z)) (s z))))) -> (= (s (+ z (s z))) (s (+ z (s z))))]",
        "problem_raw": "[('a0 : (= nat (+ z z) z)) -> ('a1 : (= nat z (+ z (+ (+ z (+ z z)) (s z))))) -> (= nat (s (+ z (s z))) (s (+ z (s z))))]",
        "proof": [
            "theorem t : [('a0 : (= (+ z z) z)) -> ('a1 : (= z (+ z (+ (+ z (+ z z)) (s z))))) -> (= (s (+ z (s z))) (s (+ z (s z))))] {",
            "intro x : (= (+ z z) z).",
            "intro x0 : (= z (+ z (+ (+ z (+ z z)) (s z)))).",
            "apply c0014.",
            "}"
        ],
        "logprob": -6.503019538018934,
        "actions": [
            "intro.",
            "intro.",
            "a c0014",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= (+ z z) z)) -> ('a1 : (= (+ z (+ z (+ (s (+ z (+ z z))) z))) (+ (+ z (+ z z)) z))) -> (= (+ z (+ z z)) (+ z (+ z z)))]",
        "problem_raw": "[('a0 : (= nat (+ z z) z)) -> ('a1 : (= nat (+ z (+ z (+ (s (+ z (+ z z))) z))) (+ (+ z (+ z z)) z))) -> (= nat (+ z (+ z z)) (+ z (+ z z)))]",
        "proof": [
            "theorem t : [('a0 : (= (+ z z) z)) -> ('a1 : (= (+ z (+ z (+ (s (+ z (+ z z))) z))) (+ (+ z (+ z z)) z))) -> (= (+ z (+ z z)) (+ z (+ z z)))] {",
            "intro x : (= (+ z z) z).",
            "show (= (+ z (+ z z)) (+ z (+ z z))) by c0174.",
            "intro _ : [('a1 : (= (+ z (+ z (+ (s (+ z (+ z z))) z))) (+ (+ z (+ z z)) z))) -> (= (+ z (+ z z)) (+ z (+ z z)))].",
            "}"
        ],
        "logprob": -4.679586664211433,
        "actions": [
            "intro.",
            "c c0174",
            "=> (= (+ z (+ z z)) (+ z (+ z z))).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= z 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= 'a0 z)) -> ('a5 : (= 'a0 z)) -> ('a6 : (= 'a0 z)) -> ('a7 : (= 'a0 'a0)) -> ('a8 : (= z 'a0)) -> ('a9 : (= z 'a0)) -> (= 'a0 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 z))  -> ('a5 : (= nat 'a0 z)) -> ('a6 : (= nat 'a0 z)) -> ('a7 : (= nat 'a0 'a0)) -> ('a8 : (= nat z 'a0)) -> ('a9 : (= nat z 'a0)) -> (= nat 'a0 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 z)) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= (+ 'a0 'a0) (s 'a0))) -> ('a4 : (= z (+ (+ 'a0 'a0) (s 'a0)))) -> (= (+ 'a0 (s 'a0)) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= nat (+ 'a0 'a0) (s 'a0))) -> ('a4 : (= nat z (+ (+ 'a0 'a0) (s 'a0))))  -> (= nat (+ 'a0 (s 'a0)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= nat (+ 'a0 'a0) (s 'a0))) -> ('a4 : (= nat z (+ (+ 'a0 'a0) (s 'a0)))) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= (s (+ 'a0 z)) z)) -> ('a3 : (= z (+ (+ z 'a0) z))) -> ('a4 : (= (+ (s (+ 'a0 z)) z) (+ (s (+ 'a0 z)) z))) -> (= z (+ (+ z 'a0) (+ z (+ (+ z 'a0) z))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat (s (+ 'a0 z)) z)) -> ('a3 : (= nat z (+ (+ z 'a0) z))) -> ('a4 : (= nat (+ (s (+ 'a0 z)) z) (+ (s (+ 'a0 z)) z)))  -> (= nat z (+ (+ z 'a0) (+ z (+ (+ z 'a0) z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat (s (+ 'a0 z)) z)) -> ('a3 : (= nat z (+ (+ z 'a0) z))) -> ('a4 : (= nat (+ (s (+ 'a0 z)) z) (+ (s (+ 'a0 z)) z))) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= (+ z z) (+ z z))) -> ('a1 : (= z (+ z (+ z (+ (+ z (+ z z)) (+ z z)))))) -> (= z (+ z (+ z (+ z (+ z z)))))]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) (+ z z)) ) -> ('a1 : (= nat z (+ z (+ z (+ (+ z (+ z z)) (+ z z)))))) -> (= nat z (+ z (+ z (+ z (+ z z)))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) (+ z z)) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= z (s (+ z (+ z (+ z z)))))) -> ('a1 : (= z (+ (+ z z) (+ z (+ z z))))) -> (= z (+ (+ z z) (+ z (+ z z))))]",
        "problem_raw": "[ ('a0 :(= nat z (s (+ z (+ z (+ z z))))) ) -> ('a1 : (= nat z (+ (+ z z) (+ z (+ z z))))) -> (= nat z (+ (+ z z) (+ z (+ z z))))]",
        "proof": [
            "theorem t : [('a0 : (= z (s (+ z (+ z (+ z z)))))) -> ('a1 : (= z (+ (+ z z) (+ z (+ z z))))) -> (= z (+ (+ z z) (+ z (+ z z))))] {",
            "intro x : (= z (s (+ z (+ z (+ z z))))).",
            "intro _ : [('a1 : (= z (+ (+ z z) (+ z (+ z z))))) -> (= z (+ (+ z z) (+ z (+ z z))))].",
            "}"
        ],
        "logprob": -3.831965219200293,
        "actions": [
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (s (+ z (+ z (+ z z))))) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= (+ (s (+ z z)) z) (+ (s (+ z z)) z))) -> ('a1 : nat) -> ('a2 : (= z (+ (s z) (+ z (+ z z))))) -> (= z (+ z (+ (s z) z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ (s (+ z z)) z) (+ (s (+ z z)) z)) ) -> ('a1 : nat) -> ('a2 : (= nat z (+ (s z) (+ z (+ z z))))) -> (= nat z (+ z (+ (s z) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (s (+ z z)) z) (+ (s (+ z z)) z)) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= z 'a0)) -> ('a3 : (= 'a0 'a0)) -> (= (s z) (+ z 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> (= nat (s z) (+ z 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= z (+ (+ z z) z))) -> ('a1 : (= z (+ (+ (+ z z) (+ z z)) z))) -> (= (+ z (+ (+ (+ z z) (+ z z)) z)) z)]",
        "problem_raw": "[ ('a0 :(= nat z (+ (+ z z) z)) ) -> ('a1 : (= nat z (+ (+ (+ z z) (+ z z)) z))) -> (= nat (+ z (+ (+ (+ z z) (+ z z)) z)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ (+ z z) z)) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ z (+ z (+ (+ z z) (+ z z)))))) -> ('a2 : (= z (+ z (+ z z)))) -> (= z (+ z (+ z (+ (+ z z) (+ z z)))))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z (+ z (+ z (+ (+ z z) (+ z z)))))) -> ('a2 : (= nat z (+ z (+ z z)))) -> (= nat z (+ z (+ z (+ (+ z z) (+ z z)))))]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> ('a1 : (= z (+ z (+ z (+ (+ z z) (+ z z)))))) -> ('a2 : (= z (+ z (+ z z)))) -> (= z (+ z (+ z (+ (+ z z) (+ z z)))))] {",
            "intro x : (= z z).",
            "intro x0 : (= z (+ z (+ z (+ (+ z z) (+ z z))))).",
            "intro _ : [('a2 : (= z (+ z (+ z z)))) -> (= z (+ z (+ z (+ (+ z z) (+ z z)))))].",
            "}"
        ],
        "logprob": -5.861257905045671,
        "actions": [
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 (s 'a0))) -> (= (+ (+ 'a0 'a0) (s 'a0)) 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 (s 'a0))) -> (= nat (+ (+ 'a0 'a0) (s 'a0)) 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ z z) (s z)))) -> (= z (+ (+ z z) (s (+ (+ z z) (s z)))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ z z) (s z)))) -> (= nat z (+ (+ z z) (s (+ (+ z z) (s z)))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= (+ (+ z 'a0) 'a0) 'a0)) -> ('a3 : (= (+ 'a0 'a0) (+ 'a0 'a0))) -> (= z (+ (+ z 'a0) 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> ('a3 : (= nat (+ 'a0 'a0) (+ 'a0 'a0)))  -> (= nat z (+ (+ z 'a0) 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> ('a3 : (= nat (+ 'a0 'a0) (+ 'a0 'a0))) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= (+ 'a0 'a0) 'a0)) -> ('a3 : (= (+ 'a0 (+ 'a0 'a0)) (+ 'a0 (+ 'a0 'a0)))) -> (= z (+ (+ (s 'a0) (+ 'a0 'a0)) 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= nat (+ 'a0 'a0) 'a0)) -> ('a3 : (= nat (+ 'a0 (+ 'a0 'a0)) (+ 'a0 (+ 'a0 'a0))))  -> (= nat z (+ (+ (s 'a0) (+ 'a0 'a0)) 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= nat (+ 'a0 'a0) 'a0)) -> ('a3 : (= nat (+ 'a0 (+ 'a0 'a0)) (+ 'a0 (+ 'a0 'a0)))) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= (+ 'a0 'a0) (s 'a0))) -> ('a4 : (= (+ (+ 'a0 'a0) (s 'a0)) z)) -> ('a5 : (= (+ (+ 'a0 'a0) (s 'a0)) z)) -> (= z (+ (+ 'a0 'a0) (s 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= nat (+ 'a0 'a0) (s 'a0))) -> ('a4 : (= nat (+ (+ 'a0 'a0) (s 'a0)) z)) -> ('a5 : (= nat (+ (+ 'a0 'a0) (s 'a0)) z))  -> (= nat z (+ (+ 'a0 'a0) (s 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= nat (+ 'a0 'a0) (s 'a0))) -> ('a4 : (= nat (+ (+ 'a0 'a0) (s 'a0)) z)) -> ('a5 : (= nat (+ (+ 'a0 'a0) (s 'a0)) z)) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= (+ (+ z z) z) (+ (+ z z) z))) -> ('a1 : nat) -> ('a2 : (= z (+ z (+ z (+ (s (+ z (s z))) z))))) -> (= z (+ (+ z z) (s (+ z z))))]",
        "problem_raw": "[('a0 : (= nat (+ (+ z z) z) (+ (+ z z) z))) -> ('a1 : nat) -> ('a2 : (= nat z (+ z (+ z (+ (s (+ z (s z))) z))))) -> (= nat z (+ (+ z z) (s (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= (+ z (+ z z)) (+ z (+ z z)))) -> ('a1 : (= z (+ (+ z z) z))) -> ('a2 : (= z (+ z z))) -> ('a3 : (= z (+ z z))) -> ('a4 : (= z (+ z (+ z z)))) -> (= z (+ z (+ (+ (+ z z) z) z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (+ z z)) (+ z (+ z z))) ) -> ('a1 : (= nat z (+ (+ z z) z))) -> ('a2 : (= nat z (+ z z))) -> ('a3 : (= nat z (+ z z))) -> ('a4 : (= nat z (+ z (+ z z)))) -> (= nat z (+ z (+ (+ (+ z z) z) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (+ z z)) (+ z (+ z z))) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= (+ z z) (+ z z))) -> ('a1 : (= z (+ (+ z (+ z z)) (+ (s (+ z z)) z)))) -> (= z (+ (+ (+ z z) (+ z z)) (+ (s (+ z z)) z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) (+ z z)) ) -> ('a1 : (= nat z (+ (+ z (+ z z)) (+ (s (+ z z)) z)))) -> (= nat z (+ (+ (+ z z) (+ z z)) (+ (s (+ z z)) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) (+ z z)) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= (s (+ 'a0 z)) z)) -> ('a3 : (= z (+ (+ z 'a0) z))) -> ('a4 : (= z (+ (+ z 'a0) z))) -> (= (+ (s z) (+ z (+ (+ z 'a0) z))) (s z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat (s (+ 'a0 z)) z)) -> ('a3 : (= nat z (+ (+ z 'a0) z))) -> ('a4 : (= nat z (+ (+ z 'a0) z)))  -> (= nat (+ (s z) (+ z (+ (+ z 'a0) z))) (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat (s (+ 'a0 z)) z)) -> ('a3 : (= nat z (+ (+ z 'a0) z))) -> ('a4 : (= nat z (+ (+ z 'a0) z))) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= z z)) -> ('a1 : nat) -> ('a2 : (= 'a1 z)) -> ('a3 : nat) -> ('a4 : (= 'a1 'a1)) -> ('a5 : (= z (+ 'a1 'a1))) -> (= 'a1 (+ 'a1 'a1))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : nat) -> ('a2 : (= nat 'a1 z)) -> ('a3 : nat) -> ('a4 : (= nat 'a1 'a1)) -> ('a5 : (= nat z (+ 'a1 'a1))) -> (= nat 'a1 (+ 'a1 'a1))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 (+ (+ 'a0 'a0) 'a0))) -> ('a3 : (= (+ 'a0 'a0) z)) -> (= z (+ (+ (+ 'a0 'a0) 'a0) (+ (+ 'a0 'a0) 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0))  -> ('a2 : (= nat 'a0 (+ (+ 'a0 'a0) 'a0))) -> ('a3 : (= nat (+ 'a0 'a0) z)) -> (= nat z (+ (+ (+ 'a0 'a0) 'a0) (+ (+ 'a0 'a0) 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= (+ (+ 'a0 'a0) 'a0) 'a0)) -> ('a5 : (= (+ (+ 'a0 'a0) 'a0) 'a0)) -> (= (+ z z) (+ z 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat (+ (+ 'a0 'a0) 'a0) 'a0)) -> ('a5 : (= nat (+ (+ 'a0 'a0) 'a0) 'a0))  -> (= nat (+ z z) (+ z 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat (+ (+ 'a0 'a0) 'a0) 'a0)) -> ('a5 : (= nat (+ (+ 'a0 'a0) 'a0) 'a0)) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 z) (s z)))) -> ('a2 : (= z (+ (+ 'a0 z) (s z)))) -> (= z (+ (+ 'a0 z) (s z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 z) (s z)))) -> ('a2 : (= nat z (+ (+ 'a0 z) (s z)))) -> (= nat z (+ (+ 'a0 z) (s z)))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 z) (s z)))) -> ('a2 : (= z (+ (+ 'a0 z) (s z)))) -> (= z (+ (+ 'a0 z) (s z)))] {",
            "intro x : nat.",
            "intro x0 : (= x (+ (+ x z) (s z))).",
            "intro _ : [('a2 : (= z (+ (+ x z) (s z)))) -> (= z (+ (+ x z) (s z)))].",
            "}"
        ],
        "logprob": -5.28518647190102,
        "actions": [
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 (+ (+ 'a0 'a0) 'a0))) -> ('a3 : (= 'a0 'a0)) -> (= z (+ z 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 (+ (+ 'a0 'a0) 'a0))) -> ('a3 : (= nat 'a0 'a0)) -> (= nat z (+ z 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ z 'a0) (+ (s (+ z (s z))) z)))) -> (= (+ z (+ (+ z 'a0) (s z))) (+ z (s z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ z 'a0) (+ (s (+ z (s z))) z)))) -> (= nat (+ z (+ (+ z 'a0) (s z))) (+ z (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= (+ 'a0 'a0) (s 'a0))) -> ('a4 : (= z (+ (+ 'a0 'a0) (s 'a0)))) -> (= (+ 'a0 'a0) (+ (+ 'a0 'a0) (s 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= nat (+ 'a0 'a0) (s 'a0))) -> ('a4 : (= nat z (+ (+ 'a0 'a0) (s 'a0))))  -> (= nat (+ 'a0 'a0) (+ (+ 'a0 'a0) (s 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= nat (+ 'a0 'a0) (s 'a0))) -> ('a4 : (= nat z (+ (+ 'a0 'a0) (s 'a0)))) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ z 'a0))) -> ('a2 : (= z (+ 'a0 (+ z (+ z z))))) -> (= (+ 'a0 (+ z (+ z z))) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ z 'a0))) -> ('a2 : (= nat z (+ 'a0 (+ z (+ z z))))) -> (= nat (+ 'a0 (+ z (+ z z))) z)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 (+ z 'a0))) -> ('a2 : (= z (+ 'a0 (+ z (+ z z))))) -> (= (+ 'a0 (+ z (+ z z))) z)] {",
            "intro x : nat.",
            "intro x0 : (= x (+ z x)).",
            "intro x1 : (= z (+ x (+ z (+ z z)))).",
            "show (= (+ x (+ z (+ z z))) z) by eq_symm.",
            "}"
        ],
        "logprob": -8.620224528385382,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "c eq_symm",
            "=> (= (+ x (+ z (+ z z))) z)."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= (+ z (+ z z)) z)) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> ('a4 : (= (+ z (+ z z)) (+ z z))) -> ('a5 : (= z (+ z z))) -> (= z (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (+ z z)) z) ) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= nat z (+ z (+ z z)))) -> ('a4 : (= nat (+ z (+ z z)) (+ z z))) -> ('a5 : (= nat z (+ z z))) -> (= nat z (+ z (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (+ z z)) z) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= (+ (+ z z) z) (+ z z))) -> ('a1 : (= z (+ (+ z (+ (+ z z) z)) z))) -> (= (+ (+ (+ (+ (+ z (+ (+ z z) z)) z) z) z) z) (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z z) z) (+ z z)) ) -> ('a1 : (= nat z (+ (+ z (+ (+ z z) z)) z))) -> (= nat (+ (+ (+ (+ (+ z (+ (+ z z) z)) z) z) z) z) (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z z) z) (+ z z)) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ (s z) z))) -> ('a2 : (= (s (+ z z)) z)) -> ('a3 : nat) -> ('a4 : (= z (+ z z))) -> (= (s (+ z (+ z 'a3))) z)]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z (+ (s z) z))) -> ('a2 : (= nat (s (+ z z)) z)) -> ('a3 : nat) -> ('a4 : (= nat z (+ z z))) -> (= nat (s (+ z (+ z 'a3))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= z (+ (+ 'a0 'a0) (s z)))) -> ('a3 : (= (+ (+ 'a0 'a0) (s z)) (+ (+ 'a0 'a0) (s z)))) -> ('a4 : (= z (+ (+ 'a0 'a0) (s z)))) -> (= (+ (+ 'a0 'a0) (s z)) (s (+ (+ 'a0 'a0) (s z))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat z (+ (+ 'a0 'a0) (s z)))) -> ('a3 : (= nat (+ (+ 'a0 'a0) (s z)) (+ (+ 'a0 'a0) (s z)))) -> ('a4 : (= nat z (+ (+ 'a0 'a0) (s z))))  -> (= nat (+ (+ 'a0 'a0) (s z)) (s (+ (+ 'a0 'a0) (s z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat z (+ (+ 'a0 'a0) (s z)))) -> ('a3 : (= nat (+ (+ 'a0 'a0) (s z)) (+ (+ 'a0 'a0) (s z)))) -> ('a4 : (= nat z (+ (+ 'a0 'a0) (s z)))) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= (+ (+ 'a0 'a0) 'a0) (s 'a0))) -> ('a3 : (= (+ (+ 'a0 'a0) 'a0) (s 'a0))) -> (= z (+ (+ 'a0 'a0) (s 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat (+ (+ 'a0 'a0) 'a0) (s 'a0))) -> ('a3 : (= nat (+ (+ 'a0 'a0) 'a0) (s 'a0)))  -> (= nat z (+ (+ 'a0 'a0) (s 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat (+ (+ 'a0 'a0) 'a0) (s 'a0))) -> ('a3 : (= nat (+ (+ 'a0 'a0) 'a0) (s 'a0))) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 z)) -> ('a3 : (= z 'a0)) -> ('a4 : (= (+ 'a0 'a0) 'a0)) -> ('a5 : (= z (+ z 'a0))) -> (= (+ 'a0 (+ 'a0 'a0)) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 z)) -> ('a3 : (= nat z 'a0)) -> ('a4 : (= nat (+ 'a0 'a0) 'a0)) -> ('a5 : (= nat z (+ z 'a0))) -> (= nat (+ 'a0 (+ 'a0 'a0)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= 'a0 z)) -> ('a4 : (= (+ z 'a0) z)) -> ('a5 : (= z z)) -> ('a6 : nat) -> ('a7 : (= 'a2 (+ 'a0 'a0))) -> (= (+ z 'a0) (s z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= nat 'a0 z)) -> ('a4 : (= nat (+ z 'a0) z)) -> ('a5 : (= nat z z)) -> ('a6 : nat) -> ('a7 : (= nat 'a2 (+ 'a0 'a0))) -> (= nat (+ z 'a0) (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= (s 'a0) (s 'a0))) -> ('a2 : (= (+ (+ 'a0 'a0) 'a0) (s 'a0))) -> ('a3 : (= (+ (+ 'a0 'a0) (s 'a0)) (+ (+ 'a0 'a0) (s 'a0)))) -> (= z (+ (+ 'a0 'a0) (s 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (s 'a0) (s 'a0))) -> ('a2 : (= nat (+ (+ 'a0 'a0) 'a0) (s 'a0))) -> ('a3 : (= nat (+ (+ 'a0 'a0) (s 'a0)) (+ (+ 'a0 'a0) (s 'a0))))  -> (= nat z (+ (+ 'a0 'a0) (s 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat (s 'a0) (s 'a0))) -> ('a2 : (= nat (+ (+ 'a0 'a0) 'a0) (s 'a0))) -> ('a3 : (= nat (+ (+ 'a0 'a0) (s 'a0)) (+ (+ 'a0 'a0) (s 'a0)))) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= z (+ z z))) -> ('a1 : (= z (+ (+ (+ z z) (+ z z)) (+ z z)))) -> (= z (+ (+ (+ z z) (+ z z)) (+ (+ (+ z z) (+ z z)) z)))]",
        "problem_raw": "[('a0 : (= nat z (+ z z))) -> ('a1 : (= nat z (+ (+ (+ z z) (+ z z)) (+ z z)))) -> (= nat z (+ (+ (+ z z) (+ z z)) (+ (+ (+ z z) (+ z z)) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= z (+ (+ z (+ (+ (+ z z) z) z)) z))) -> (= (+ (+ (+ z (+ (s (+ z z)) z)) z) z) z)]",
        "problem_raw": "[ ('a0 :(= nat z (+ (+ z (+ (+ (+ z z) z) z)) z)) ) -> (= nat (+ (+ (+ z (+ (s (+ z z)) z)) z) z) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ (+ z (+ (+ (+ z z) z) z)) z)) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= z (+ (+ z (+ (+ (+ z z) z) (+ z z))) z))) -> (= z (+ (+ (+ z z) z) z))]",
        "problem_raw": "[ ('a0 :(= nat z (+ (+ z (+ (+ (+ z z) z) (+ z z))) z)) ) -> (= nat z (+ (+ (+ z z) z) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ (+ z (+ (+ (+ z z) z) (+ z z))) z)) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= 'a0 z)) -> ('a3 : nat) -> ('a4 : (= (s 'a0) z)) -> ('a5 : (= z 'a0)) -> ('a6 : (= z 'a0)) -> (= 'a0 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat 'a0 z)) -> ('a3 : nat) -> ('a4 : (= nat (s 'a0) z)) -> ('a5 : (= nat z 'a0)) -> ('a6 : (= nat z 'a0)) -> (= nat 'a0 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= z 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= z 'a0)) -> ('a5 : (= z 'a0)) -> ('a6 : (= z 'a0)) -> (= 'a0 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat z 'a0)) -> ('a5 : (= nat z 'a0)) -> ('a6 : (= nat z 'a0)) -> (= nat 'a0 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= 'a0 z)) -> ('a3 : (= z 'a0)) -> ('a4 : (= 'a0 'a0)) -> ('a5 : (= 'a0 z)) -> (= (+ z (+ 'a0 'a0)) (+ z (+ 'a0 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat 'a0 z)) -> ('a3 : (= nat z 'a0)) -> ('a4 : (= nat 'a0 'a0)) -> ('a5 : (= nat 'a0 z)) -> (= nat (+ z (+ 'a0 'a0)) (+ z (+ 'a0 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= (+ z z) (+ z z))) -> ('a1 : (= z (+ (+ (+ z z) z) z))) -> ('a2 : (= z (+ z (+ z z)))) -> (= z (+ (+ (+ z (+ z z)) z) z))]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) (+ z z)) ) -> ('a1 : (= nat z (+ (+ (+ z z) z) z))) -> ('a2 : (= nat z (+ z (+ z z)))) -> (= nat z (+ (+ (+ z (+ z z)) z) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) (+ z z)) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= z (+ z z))) -> ('a1 : (= z (+ (+ (+ z z) (+ z z)) (+ z z)))) -> (= z (+ (+ z z) (+ z (+ z z))))]",
        "problem_raw": "[ ('a0 :(= nat z (+ z z)) ) -> ('a1 : (= nat z (+ (+ (+ z z) (+ z z)) (+ z z)))) -> (= nat z (+ (+ z z) (+ z (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z z)) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 z) (s z)))) -> ('a2 : (= (+ (+ 'a0 z) (+ z (s z))) z)) -> (= z (s (+ (+ 'a0 z) (s z))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 z) (s z)))) -> ('a2 : (= nat (+ (+ 'a0 z) (+ z (s z))) z)) -> (= nat z (s (+ (+ 'a0 z) (s z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 'a0) (+ z 'a0)))) -> (= 'a0 (+ (+ 'a0 'a0) (+ z (+ (s (+ 'a0 'a0)) z))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 'a0) (+ z 'a0)))) -> (= nat 'a0 (+ (+ 'a0 'a0) (+ z (+ (s (+ 'a0 'a0)) z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= z (+ (+ z z) z))) -> ('a1 : (= z (+ (+ (+ z z) (+ z z)) z))) -> (= (+ (s z) (+ z z)) (s (+ z z)))]",
        "problem_raw": "[('a0 : (= nat z (+ (+ z z) z))) -> ('a1 : (= nat z (+ (+ (+ z z) (+ z z)) z))) -> (= nat (+ (s z) (+ z z)) (s (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= z 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= z (+ 'a0 'a0))) -> ('a5 : (= z (+ 'a0 'a0))) -> (= 'a0 (+ z z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat z (+ 'a0 'a0))) -> ('a5 : (= nat z (+ 'a0 'a0))) -> (= nat 'a0 (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 z)) -> ('a4 : (= z 'a0)) -> ('a5 : (= z 'a0)) -> ('a6 : nat) -> ('a7 : (= z 'a0)) -> ('a8 : (= (s 'a0) 'a0)) -> (= z z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0))  -> ('a3 : (= nat 'a0 z)) -> ('a4 : (= nat z 'a0)) -> ('a5 : (= nat z 'a0)) -> ('a6 : nat) -> ('a7 : (= nat z 'a0)) -> ('a8 : (= nat (s 'a0) 'a0)) -> (= nat z z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 z)) -> ('a3 : (= z (+ 'a0 'a0))) -> ('a4 : (= z (+ 'a0 'a0))) -> (= (+ (+ z 'a0) 'a0) 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 z)) -> ('a3 : (= nat z (+ 'a0 'a0))) -> ('a4 : (= nat z (+ 'a0 'a0)))  -> (= nat (+ (+ z 'a0) 'a0) 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 z)) -> ('a3 : (= nat z (+ 'a0 'a0))) -> ('a4 : (= nat z (+ 'a0 'a0))) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 z) (+ z (s (+ z (s z))))))) -> (= (+ z (s (+ z (s z)))) (+ z (s (+ z (s (+ (+ 'a0 z) (+ z (s z))))))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 z) (+ z (s (+ z (s z))))))) -> (= nat (+ z (s (+ z (s z)))) (+ z (s (+ z (s (+ (+ 'a0 z) (+ z (s z))))))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= z 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= 'a0 'a0)) -> ('a5 : (= 'a0 'a0)) -> ('a6 : (= 'a0 'a0)) -> ('a7 : (= 'a0 'a0)) -> (= z (+ 'a0 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 'a0)) -> ('a5 : (= nat 'a0 'a0))  -> ('a6 : (= nat 'a0 'a0)) -> ('a7 : (= nat 'a0 'a0)) -> (= nat z (+ 'a0 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 'a0)) -> ('a5 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= (+ (+ 'a0 'a0) 'a0) 'a0)) -> ('a3 : (= (+ (+ 'a0 'a0) 'a0) 'a0)) -> (= (+ z (+ z 'a0)) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat (+ (+ 'a0 'a0) 'a0) 'a0)) -> ('a3 : (= nat (+ (+ 'a0 'a0) 'a0) 'a0))  -> (= nat (+ z (+ z 'a0)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat (+ (+ 'a0 'a0) 'a0) 'a0)) -> ('a3 : (= nat (+ (+ 'a0 'a0) 'a0) 'a0)) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= (+ 'a0 'a0) (s 'a0))) -> ('a4 : (= (+ (+ 'a0 'a0) (s 'a0)) (+ (+ 'a0 'a0) (s 'a0)))) -> (= (+ 'a0 (s 'a0)) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= nat (+ 'a0 'a0) (s 'a0))) -> ('a4 : (= nat (+ (+ 'a0 'a0) (s 'a0)) (+ (+ 'a0 'a0) (s 'a0))))  -> (= nat (+ 'a0 (s 'a0)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= nat (+ 'a0 'a0) (s 'a0))) -> ('a4 : (= nat (+ (+ 'a0 'a0) (s 'a0)) (+ (+ 'a0 'a0) (s 'a0)))) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= (+ z (s z)) (+ z (s z)))) -> ('a1 : nat) -> ('a2 : (= (+ 'a1 (s z)) (+ 'a1 (s z)))) -> ('a3 : nat) -> (= z (+ (+ 'a1 'a1) (s z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (s z)) (+ z (s z))) ) -> ('a1 : nat) -> ('a2 : (= nat (+ 'a1 (s z)) (+ 'a1 (s z)))) -> ('a3 : nat) -> (= nat z (+ (+ 'a1 'a1) (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (s z)) (+ z (s z))) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 z) (+ z z)))) -> (= 'a0 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 z) (+ z z)))) -> (= nat 'a0 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 z) (+ z z)))) -> (= 'a0 'a0)] {",
            "intro x : nat.",
            "show (= x x) by c0014.",
            "intro _ : [('a1 : (= x (+ (+ x z) (+ z z)))) -> (= x x)].",
            "}"
        ],
        "logprob": -4.932982221384462,
        "actions": [
            "intro.",
            "c c0014",
            "=> (= x x).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 z) (+ z 'a0)))) -> ('a2 : (= 'a0 (+ (+ 'a0 z) (+ z (+ (+ 'a0 z) (+ z 'a0)))))) -> (= 'a0 (+ (+ 'a0 z) (+ z (+ (+ 'a0 z) (+ z 'a0)))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 z) (+ z 'a0)))) -> ('a2 : (= nat 'a0 (+ (+ 'a0 z) (+ z (+ (+ 'a0 z) (+ z 'a0))))))  -> (= nat 'a0 (+ (+ 'a0 z) (+ z (+ (+ 'a0 z) (+ z 'a0)))))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 z) (+ z 'a0)))) -> ('a2 : (= 'a0 (+ (+ 'a0 z) (+ z (+ (+ 'a0 z) (+ z 'a0)))))) -> (= 'a0 (+ (+ 'a0 z) (+ z (+ (+ 'a0 z) (+ z 'a0)))))] {",
            "intro x : nat.",
            "intro x0 : (= x (+ (+ x z) (+ z x))).",
            "intro _ : [('a2 : (= x (+ (+ x z) (+ z (+ (+ x z) (+ z x)))))) -> (= x (+ (+ x z) (+ z (+ (+ x z) (+ z x)))))].",
            "}"
        ],
        "logprob": -5.381386308471822,
        "actions": [
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 z) (+ z 'a0)))) -> ('a2 : (= nat 'a0 (+ (+ 'a0 z) (+ z (+ (+ 'a0 z) (+ z 'a0)))))) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= z (+ 'a0 'a0))) -> (= z (+ z (+ z 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= nat z (+ 'a0 'a0))) -> (= nat z (+ z (+ z 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= 'a0 (+ (s 'a0) 'a0))) -> ('a3 : (= (s (+ 'a0 'a0)) 'a0)) -> (= (s (+ 'a0 'a0)) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat 'a0 (+ (s 'a0) 'a0))) -> ('a3 : (= nat (s (+ 'a0 'a0)) 'a0)) -> (= nat (s (+ 'a0 'a0)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= (+ 'a0 'a0) 'a0)) -> ('a3 : (= (+ 'a0 'a0) (+ 'a0 'a0))) -> (= (+ 'a0 'a0) (+ 'a0 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat (+ 'a0 'a0) 'a0)) -> ('a3 : (= nat (+ 'a0 'a0) (+ 'a0 'a0)))  -> (= nat (+ 'a0 'a0) (+ 'a0 'a0))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= (+ 'a0 'a0) 'a0)) -> ('a3 : (= (+ 'a0 'a0) (+ 'a0 'a0))) -> (= (+ 'a0 'a0) (+ 'a0 'a0))] {",
            "intro x : nat.",
            "intro x0 : (= z x).",
            "intro x1 : (= (+ x x) x).",
            "intro _ : [('a3 : (= (+ x x) (+ x x))) -> (= (+ x x) (+ x x))].",
            "}"
        ],
        "logprob": -7.651663723527675,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat (+ 'a0 'a0) 'a0)) -> ('a3 : (= nat (+ 'a0 'a0) (+ 'a0 'a0))) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> (= z (+ (s 'a0) (+ (+ (s 'a0) 'a0) (+ (+ (s 'a0) 'a0) 'a0))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> (= nat z (+ (s 'a0) (+ (+ (s 'a0) 'a0) (+ (+ (s 'a0) 'a0) 'a0))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= z z)) -> ('a1 : nat) -> ('a2 : (= z (+ 'a1 (+ z z)))) -> ('a3 : (= z (+ z (+ z z)))) -> ('a4 : (= z (+ z (+ (+ z z) (+ z z))))) -> (= z (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : nat) -> ('a2 : (= nat z (+ 'a1 (+ z z)))) -> ('a3 : (= nat z (+ z (+ z z)))) -> ('a4 : (= nat z (+ z (+ (+ z z) (+ z z))))) -> (= nat z (+ z (+ z z)))]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> ('a1 : nat) -> ('a2 : (= z (+ 'a1 (+ z z)))) -> ('a3 : (= z (+ z (+ z z)))) -> ('a4 : (= z (+ z (+ (+ z z) (+ z z))))) -> (= z (+ z (+ z z)))] {",
            "intro x : (= z z).",
            "intro x0 : nat.",
            "intro x1 : (= z (+ x0 (+ z z))).",
            "intro x2 : (= z (+ z (+ z z))).",
            "intro _ : [('a4 : (= z (+ z (+ (+ z z) (+ z z))))) -> (= z (+ z (+ z z)))].",
            "}"
        ],
        "logprob": -9.867179157511703,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 (s (+ (+ 'a0 (s z)) (s z)))) z))) -> ('a2 : nat) -> ('a3 : (= z (+ (s (+ z (+ z z))) z))) -> (= z (s (+ z (+ z z))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 (s (+ (+ 'a0 (s z)) (s z)))) z))) -> ('a2 : nat) -> ('a3 : (= nat z (+ (s (+ z (+ z z))) z))) -> (= nat z (s (+ z (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ (+ z (+ z z)) (+ (s (+ z z)) z)))) -> (= z (+ (+ z (+ z z)) z))]",
        "problem_raw": "[('a0 : (= nat z z)) -> ('a1 : (= nat z (+ (+ z (+ z z)) (+ (s (+ z z)) z)))) -> (= nat z (+ (+ z (+ z z)) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= z (+ (+ 'a0 'a0) (s 'a0)))) -> (= (s z) (+ (+ 'a0 'a0) (s 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat z (+ (+ 'a0 'a0) (s 'a0)))) -> (= nat (s z) (+ (+ 'a0 'a0) (s 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= z 'a0)) -> ('a4 : (= 'a0 'a0)) -> ('a5 : (= 'a0 'a0)) -> ('a6 : (= (+ (+ z 'a0) 'a0) 'a0)) -> (= z (+ (+ z 'a0) 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat z 'a0)) -> ('a4 : (= nat 'a0 'a0)) -> ('a5 : (= nat 'a0 'a0)) -> ('a6 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> (= nat z (+ (+ z 'a0) 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= z 'a0)) -> ('a4 : (= (+ 'a0 'a0) 'a0)) -> (= (+ 'a0 'a0) (s z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat z 'a0)) -> ('a4 : (= nat (+ 'a0 'a0) 'a0)) -> (= nat (+ 'a0 'a0) (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (s 'a0) 'a0))) -> ('a2 : (= z (+ (s 'a0) (+ (s 'a0) 'a0)))) -> (= 'a0 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (s 'a0) 'a0))) -> ('a2 : (= nat z (+ (s 'a0) (+ (s 'a0) 'a0)))) -> (= nat 'a0 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 (+ (s 'a0) 'a0))) -> ('a2 : (= z (+ (s 'a0) (+ (s 'a0) 'a0)))) -> (= 'a0 'a0)] {",
            "intro x : nat.",
            "intro x0 : (= x (+ (s x) x)).",
            "show (= x x) by c0014.",
            "intro _ : [('a2 : (= z (+ (s x) (+ (s x) x)))) -> (= x x)].",
            "}"
        ],
        "logprob": -7.847659334438989,
        "actions": [
            "intro.",
            "intro.",
            "c c0014",
            "=> (= x x).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= z (+ z z))) -> ('a1 : (= z (+ (+ (+ z z) (+ z z)) (+ z z)))) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> (= z (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z (+ z z)) ) -> ('a1 : (= nat z (+ (+ (+ z z) (+ z z)) (+ z z)))) -> ('a2 : nat) -> ('a3 : (= nat z (+ z (+ z z)))) -> (= nat z (+ z (+ z z)))]",
        "proof": [
            "theorem t : [('a0 : (= z (+ z z))) -> ('a1 : (= z (+ (+ (+ z z) (+ z z)) (+ z z)))) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> (= z (+ z (+ z z)))] {",
            "intro x : (= z (+ z z)).",
            "intro x0 : (= z (+ (+ (+ z z) (+ z z)) (+ z z))).",
            "intro x1 : nat.",
            "intro _ : [('a3 : (= z (+ z (+ z z)))) -> (= z (+ z (+ z z)))].",
            "}"
        ],
        "logprob": -8.017526909810675,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z z)) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= z (+ (+ z (+ (+ z z) z)) z))) -> (= z (+ (+ z (+ (+ z z) z)) z))]",
        "problem_raw": "[('a0 : (= nat z (+ (+ z (+ (+ z z) z)) z))) -> (= nat z (+ (+ z (+ (+ z z) z)) z))]",
        "proof": [
            "theorem t : [('a0 : (= z (+ (+ z (+ (+ z z) z)) z))) -> (= z (+ (+ z (+ (+ z z) z)) z))] {",
            "intro _ : [('a0 : (= z (+ (+ z (+ (+ z z) z)) z))) -> (= z (+ (+ z (+ (+ z z) z)) z))].",
            "}"
        ],
        "logprob": -1.5258431829773558,
        "actions": [
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= (+ (+ z 'a0) 'a0) 'a0)) -> ('a4 : (= 'a0 'a0)) -> (= 'a0 z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> ('a4 : (= nat 'a0 'a0))  -> (= nat 'a0 z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> ('a4 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= (+ 'a0 'a0) (s 'a0))) -> ('a4 : (= (+ (+ 'a0 'a0) (s 'a0)) z)) -> ('a5 : (= (+ (+ 'a0 'a0) (s 'a0)) z)) -> (= z (+ (+ 'a0 (s 'a0)) (s 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= nat (+ 'a0 'a0) (s 'a0))) -> ('a4 : (= nat (+ (+ 'a0 'a0) (s 'a0)) z)) -> ('a5 : (= nat (+ (+ 'a0 'a0) (s 'a0)) z))  -> (= nat z (+ (+ 'a0 (s 'a0)) (s 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= nat (+ 'a0 'a0) (s 'a0))) -> ('a4 : (= nat (+ (+ 'a0 'a0) (s 'a0)) z)) -> ('a5 : (= nat (+ (+ 'a0 'a0) (s 'a0)) z)) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= (+ 'a0 'a0) 'a0)) -> ('a3 : (= (+ 'a0 (+ 'a0 'a0)) (+ 'a0 (+ 'a0 'a0)))) -> (= z (+ (+ (s 'a0) 'a0) (+ 'a0 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= nat (+ 'a0 'a0) 'a0)) -> ('a3 : (= nat (+ 'a0 (+ 'a0 'a0)) (+ 'a0 (+ 'a0 'a0))))  -> (= nat z (+ (+ (s 'a0) 'a0) (+ 'a0 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= nat (+ 'a0 'a0) 'a0)) -> ('a3 : (= nat (+ 'a0 (+ 'a0 'a0)) (+ 'a0 (+ 'a0 'a0)))) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= (+ (+ z z) z) z)) -> ('a1 : (= (+ z (+ z (+ (s (+ z (s z))) z))) (+ (+ z (+ z z)) z))) -> (= z z)]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z z) z) z) ) -> ('a1 : (= nat (+ z (+ z (+ (s (+ z (s z))) z))) (+ (+ z (+ z z)) z))) -> (= nat z z)]",
        "proof": [
            "theorem t : [('a0 : (= (+ (+ z z) z) z)) -> ('a1 : (= (+ z (+ z (+ (s (+ z (s z))) z))) (+ (+ z (+ z z)) z))) -> (= z z)] {",
            "intro x : (= (+ (+ z z) z) z).",
            "show (= z z) by rewrite.",
            "intro _ : [('a1 : (= (+ z (+ z (+ (s (+ z (s z))) z))) (+ (+ z (+ z z)) z))) -> (= z z)].",
            "}"
        ],
        "logprob": -4.6858030588904045,
        "actions": [
            "intro.",
            "c rewrite",
            "=> (= z z).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z z) z) z) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (s (+ z (+ z z))) z)) -> ('a2 : nat) -> (= z (s (+ z (+ z z))))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (s (+ z (+ z z))) z)) -> ('a2 : nat) -> (= nat z (s (+ z (+ z z))))]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> ('a1 : (= (s (+ z (+ z z))) z)) -> ('a2 : nat) -> (= z (s (+ z (+ z z))))] {",
            "intro x : (= z z).",
            "intro x0 : (= (s (+ z (+ z z))) z).",
            "show (= z (s (+ z (+ z z)))) by eq_symm.",
            "intro _ : [('a2 : nat) -> (= z (s (+ z (+ z z))))].",
            "}"
        ],
        "logprob": -7.249463289586881,
        "actions": [
            "intro.",
            "intro.",
            "c eq_symm",
            "=> (= z (s (+ z (+ z z)))).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 'a0) (+ z 'a0)))) -> (= z (+ (+ 'a0 'a0) (s (+ z 'a0))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 'a0) (+ z 'a0)))) -> (= nat z (+ (+ 'a0 'a0) (s (+ z 'a0))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= 'a0 z)) -> ('a3 : nat) -> ('a4 : (= 'a0 'a0)) -> ('a5 : (= z 'a0)) -> ('a6 : (= 'a0 'a0)) -> ('a7 : (= z 'a0)) -> ('a8 : (= z 'a0)) -> (= z 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat 'a0 z)) -> ('a3 : nat) -> ('a4 : (= nat 'a0 'a0)) -> ('a5 : (= nat z 'a0)) -> ('a6 : (= nat 'a0 'a0)) -> ('a7 : (= nat z 'a0)) -> ('a8 : (= nat z 'a0)) -> (= nat z 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ z 'a0))) -> ('a2 : (= z (+ 'a0 (+ z (+ z 'a0))))) -> ('a3 : nat) -> (= z z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ z 'a0))) -> ('a2 : (= nat z (+ 'a0 (+ z (+ z 'a0))))) -> ('a3 : nat) -> (= nat z z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= (s 'a0) (s 'a0))) -> ('a2 : (= (+ (+ 'a0 'a0) 'a0) (s 'a0))) -> ('a3 : (= (+ (+ 'a0 'a0) (s 'a0)) (+ (+ 'a0 'a0) (s 'a0)))) -> (= (+ (+ 'a0 'a0) (s 'a0)) (s (s 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (s 'a0) (s 'a0))) -> ('a2 : (= nat (+ (+ 'a0 'a0) 'a0) (s 'a0))) -> ('a3 : (= nat (+ (+ 'a0 'a0) (s 'a0)) (+ (+ 'a0 'a0) (s 'a0))))  -> (= nat (+ (+ 'a0 'a0) (s 'a0)) (s (s 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat (s 'a0) (s 'a0))) -> ('a2 : (= nat (+ (+ 'a0 'a0) 'a0) (s 'a0))) -> ('a3 : (= nat (+ (+ 'a0 'a0) (s 'a0)) (+ (+ 'a0 'a0) (s 'a0)))) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= (+ (+ 'a0 'a0) (s 'a0)) 'a0)) -> ('a3 : (= (+ (+ 'a0 'a0) (s 'a0)) (+ (+ 'a0 'a0) (s 'a0)))) -> ('a4 : (= 'a0 (s (s 'a0)))) -> (= z (+ (+ 'a0 'a0) (s 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat (+ (+ 'a0 'a0) (s 'a0)) 'a0)) -> ('a3 : (= nat (+ (+ 'a0 'a0) (s 'a0)) (+ (+ 'a0 'a0) (s 'a0)))) -> ('a4 : (= nat 'a0 (s (s 'a0))))  -> (= nat z (+ (+ 'a0 'a0) (s 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat (+ (+ 'a0 'a0) (s 'a0)) 'a0)) -> ('a3 : (= nat (+ (+ 'a0 'a0) (s 'a0)) (+ (+ 'a0 'a0) (s 'a0)))) -> ('a4 : (= nat 'a0 (s (s 'a0)))) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 'a0) (+ z 'a0)))) -> (= 'a0 (+ (+ 'a0 'a0) (s z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 'a0) (+ z 'a0)))) -> (= nat 'a0 (+ (+ 'a0 'a0) (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= z (+ (+ 'a0 z) (+ z z)))) -> (= z (+ (+ 'a0 (+ (+ 'a0 z) (+ z z))) (+ (+ 'a0 z) z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z (+ (+ 'a0 z) (+ z z)))) -> (= nat z (+ (+ 'a0 (+ (+ 'a0 z) (+ z z))) (+ (+ 'a0 z) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ (+ z z) (+ z z)))) -> (= (+ (+ (+ z z) z) z) z)]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z (+ (+ z z) (+ z z)))) -> (= nat (+ (+ (+ z z) z) z) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= (+ z (s (+ z z))) (s (+ z (+ z z))))) -> ('a1 : (= z (+ z (s z)))) -> ('a2 : (= z (+ z (+ z z)))) -> (= z (+ z (+ (+ z (s z)) (s z))))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (s (+ z z))) (s (+ z (+ z z)))) ) -> ('a1 : (= nat z (+ z (s z)))) -> ('a2 : (= nat z (+ z (+ z z)))) -> (= nat z (+ z (+ (+ z (s z)) (s z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (s (+ z z))) (s (+ z (+ z z)))) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= (+ (+ z z) z) (+ z z))) -> ('a1 : (= z (+ (+ z (+ (+ z z) z)) z))) -> (= (+ z z) (+ (+ (+ z (+ (+ z z) z)) z) (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z z) z) (+ z z)) ) -> ('a1 : (= nat z (+ (+ z (+ (+ z z) z)) z))) -> (= nat (+ z z) (+ (+ (+ z (+ (+ z z) z)) z) (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z z) z) (+ z z)) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ z 'a0) (+ (s (+ z (s z))) z)))) -> (= 'a0 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ z 'a0) (+ (s (+ z (s z))) z)))) -> (= nat 'a0 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 (+ (+ z 'a0) (+ (s (+ z (s z))) z)))) -> (= 'a0 'a0)] {",
            "intro x : nat.",
            "show (= x x) by c0014.",
            "intro _ : [('a1 : (= x (+ (+ z x) (+ (s (+ z (s z))) z)))) -> (= x x)].",
            "}"
        ],
        "logprob": -4.8083095711805885,
        "actions": [
            "intro.",
            "c c0014",
            "=> (= x x).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 'a0) (+ z 'a0)))) -> (= 'a0 (+ (+ 'a0 'a0) (s 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 'a0) (+ z 'a0)))) -> (= nat 'a0 (+ (+ 'a0 'a0) (s 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ (+ z z) (s z)))) -> (= (+ (+ (+ z z) z) (s z)) (+ (+ z z) (s z)))]",
        "problem_raw": "[('a0 : (= nat z z)) -> ('a1 : (= nat z (+ (+ z z) (s z)))) -> (= nat (+ (+ (+ z z) z) (s z)) (+ (+ z z) (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= (+ z (+ z (+ (+ z (+ z z)) (s z)))) z)) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> (= (s (+ z (+ z z))) (s (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (+ z (+ (+ z (+ z z)) (s z)))) z) ) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= nat z (+ z (+ z z)))) -> (= nat (s (+ z (+ z z))) (s (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (+ z (+ (+ z (+ z z)) (s z)))) z) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= (+ (+ z (s z)) z) (+ z (s z)))) -> ('a1 : nat) -> ('a2 : (= z (+ (+ z (s (+ z z))) z))) -> (= z (+ z (s z)))]",
        "problem_raw": "[('a0 : (= nat (+ (+ z (s z)) z) (+ z (s z)))) -> ('a1 : nat) -> ('a2 : (= nat z (+ (+ z (s (+ z z))) z))) -> (= nat z (+ z (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ z 'a0) (s z)))) -> ('a2 : (= z (+ (+ z 'a0) (s z)))) -> (= (+ (+ z z) (s z)) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ z 'a0) (s z)))) -> ('a2 : (= nat z (+ (+ z 'a0) (s z)))) -> (= nat (+ (+ z z) (s z)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 z)) -> ('a4 : (= z 'a0)) -> ('a5 : (= z 'a0)) -> ('a6 : nat) -> ('a7 : (= 'a0 'a0)) -> ('a8 : (= 'a0 'a0)) -> ('a9 : (= z 'a0)) -> (= 'a0 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 z)) -> ('a4 : (= nat z 'a0)) -> ('a5 : (= nat z 'a0))  -> ('a6 : nat) -> ('a7 : (= nat 'a0 'a0)) -> ('a8 : (= nat 'a0 'a0)) -> ('a9 : (= nat z 'a0)) -> (= nat 'a0 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 z)) -> ('a4 : (= nat z 'a0)) -> ('a5 : (= nat z 'a0)) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= (+ (+ z (s z)) z) (+ z (s z)))) -> (= z (+ (+ z (+ z (s z))) (s z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z (s z)) z) (+ z (s z))) ) -> (= nat z (+ (+ z (+ z (s z))) (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z (s z)) z) (+ z (s z))) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= (+ (+ 'a0 'a0) 'a0) 'a0)) -> (= 'a0 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat (+ (+ 'a0 'a0) 'a0) 'a0)) -> (= nat 'a0 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= (+ (+ 'a0 'a0) 'a0) 'a0)) -> (= 'a0 'a0)] {",
            "intro x : nat.",
            "intro x0 : (= x x).",
            "intro _ : [('a2 : (= (+ (+ x x) x) x)) -> (= x x)].",
            "}"
        ],
        "logprob": -5.881217627022537,
        "actions": [
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= z 'a0)) -> ('a3 : nat) -> ('a4 : (= 'a0 (+ 'a0 'a0))) -> (= (+ (+ z 'a0) 'a0) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat z 'a0)) -> ('a3 : nat) -> ('a4 : (= nat 'a0 (+ 'a0 'a0))) -> (= nat (+ (+ z 'a0) 'a0) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= z 'a0)) -> ('a3 : (= z 'a0)) -> ('a4 : (= z 'a0)) -> (= z 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0))  -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat z 'a0)) -> ('a4 : (= nat z 'a0)) -> (= nat z 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= z (+ (+ z z) z))) -> ('a1 : (= z (+ z (+ z (+ (s (+ z (s z))) z))))) -> (= z (+ (+ (+ z (+ z (+ (s (+ z (s z))) z))) z) (+ z (+ z z))))]",
        "problem_raw": "[ ('a0 :(= nat z (+ (+ z z) z)) ) -> ('a1 : (= nat z (+ z (+ z (+ (s (+ z (s z))) z))))) -> (= nat z (+ (+ (+ z (+ z (+ (s (+ z (s z))) z))) z) (+ z (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ (+ z z) z)) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= z (+ (+ z z) z))) -> ('a1 : (= z (+ z (+ z (+ (s (+ z z)) z))))) -> (= z (+ (+ z (+ z (+ (s (+ z z)) z))) z))]",
        "problem_raw": "[ ('a0 :(= nat z (+ (+ z z) z)) ) -> ('a1 : (= nat z (+ z (+ z (+ (s (+ z z)) z))))) -> (= nat z (+ (+ z (+ z (+ (s (+ z z)) z))) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ (+ z z) z)) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= (s (+ 'a0 z)) z)) -> ('a3 : (= z (+ (+ z 'a0) z))) -> (= z (s (+ 'a0 (s (+ 'a0 z)))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat (s (+ 'a0 z)) z)) -> ('a3 : (= nat z (+ (+ z 'a0) z))) -> (= nat z (s (+ 'a0 (s (+ 'a0 z)))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= (s 'a0) (s 'a0))) -> ('a3 : (= z (+ (+ 'a0 'a0) (s 'a0)))) -> (= 'a0 z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat (s 'a0) (s 'a0))) -> ('a3 : (= nat z (+ (+ 'a0 'a0) (s 'a0)))) -> (= nat 'a0 z)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= (s 'a0) (s 'a0))) -> ('a3 : (= z (+ (+ 'a0 'a0) (s 'a0)))) -> (= 'a0 z)] {",
            "intro x : nat.",
            "intro x0 : (= x z).",
            "intro x1 : (= (s x) (s x)).",
            "intro _ : [('a3 : (= z (+ (+ x x) (s x)))) -> (= x z)].",
            "}"
        ],
        "logprob": -8.401425510480347,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> (= 'a0 (+ z 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0))  -> (= nat 'a0 (+ z 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ (+ z z) (+ z z)))) -> (= z (+ (+ z (+ (+ z z) (+ z z))) (s z)))]",
        "problem_raw": "[('a0 : (= nat z z)) -> ('a1 : (= nat z (+ (+ z z) (+ z z)))) -> (= nat z (+ (+ z (+ (+ z z) (+ z z))) (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= 'a0 z)) -> ('a3 : (= 'a0 'a0)) -> (= z (+ 'a0 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat 'a0 z)) -> ('a3 : (= nat 'a0 'a0)) -> (= nat z (+ 'a0 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 z) (s z)))) -> ('a2 : (= (+ (+ 'a0 z) (+ z (s z))) z)) -> (= (+ 'a0 (+ (+ 'a0 z) (+ z (s z)))) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 z) (s z)))) -> ('a2 : (= nat (+ (+ 'a0 z) (+ z (s z))) z)) -> (= nat (+ 'a0 (+ (+ 'a0 z) (+ z (s z)))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= 'a0 (+ (+ 'a0 z) (+ z 'a0)))) -> (= 'a0 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat 'a0 (+ (+ 'a0 z) (+ z 'a0)))) -> (= nat 'a0 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : nat) -> ('a2 : (= 'a0 (+ (+ 'a0 z) (+ z 'a0)))) -> (= 'a0 'a0)] {",
            "intro x : nat.",
            "intro x0 : nat.",
            "show (= x x) by c0014.",
            "intro _ : [('a2 : (= x (+ (+ x z) (+ z x)))) -> (= x x)].",
            "}"
        ],
        "logprob": -7.07064958640153,
        "actions": [
            "intro.",
            "intro.",
            "c c0014",
            "=> (= x x).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ z z))) -> ('a2 : (= z (+ z (+ z (+ z z))))) -> (= (+ z z) (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z (+ z z))) -> ('a2 : (= nat z (+ z (+ z (+ z z))))) -> (= nat (+ z z) (+ z (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= (+ (+ 'a0 'a0) 'a0) (+ (+ 'a0 'a0) 'a0))) -> (= (+ (+ 'a0 'a0) z) (+ (s (+ 'a0 'a0)) 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat (+ (+ 'a0 'a0) 'a0) (+ (+ 'a0 'a0) 'a0)))  -> (= nat (+ (+ 'a0 'a0) z) (+ (s (+ 'a0 'a0)) 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat (+ (+ 'a0 'a0) 'a0) (+ (+ 'a0 'a0) 'a0))) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : nat) -> ('a3 : (= z (+ 'a0 'a0))) -> (= (s 'a0) (+ 'a0 (+ z 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : nat) -> ('a3 : (= nat z (+ 'a0 'a0))) -> (= nat (s 'a0) (+ 'a0 (+ z 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 z)) -> ('a4 : (= z 'a0)) -> ('a5 : (= (+ 'a0 'a0) 'a0)) -> ('a6 : (= 'a0 z)) -> (= 'a0 z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 z)) -> ('a4 : (= nat z 'a0)) -> ('a5 : (= nat (+ 'a0 'a0) 'a0)) -> ('a6 : (= nat 'a0 z)) -> (= nat 'a0 z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 (+ (s 'a0) 'a0))) -> ('a3 : (= 'a0 'a0)) -> (= (+ (s 'a0) 'a0) (+ 'a0 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 (+ (s 'a0) 'a0))) -> ('a3 : (= nat 'a0 'a0)) -> (= nat (+ (s 'a0) 'a0) (+ 'a0 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= z (+ (+ z z) z))) -> ('a1 : (= z (+ (+ (+ z z) (+ z z)) z))) -> (= (+ (+ z z) (+ (+ z z) (+ z z))) z)]",
        "problem_raw": "[('a0 : (= nat z (+ (+ z z) z))) -> ('a1 : (= nat z (+ (+ (+ z z) (+ z z)) z))) -> (= nat (+ (+ z z) (+ (+ z z) (+ z z))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= z 'a0)) -> (= 'a0 z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat z 'a0)) -> (= nat 'a0 z)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= z 'a0)) -> (= 'a0 z)] {",
            "intro x : nat.",
            "intro x0 : (= z x).",
            "show (= x z) by eq_symm.",
            "intro _ : [('a2 : (= z x)) -> (= x z)].",
            "}"
        ],
        "logprob": -6.476240562333213,
        "actions": [
            "intro.",
            "intro.",
            "c eq_symm",
            "=> (= x z).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (s (+ z z)) z)) -> ('a2 : (= z (+ (s z) (+ z (+ z z))))) -> ('a3 : nat) -> (= z (+ (s z) (+ z (+ z z))))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (s (+ z z)) z)) -> ('a2 : (= nat z (+ (s z) (+ z (+ z z))))) -> ('a3 : nat) -> (= nat z (+ (s z) (+ z (+ z z))))]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> ('a1 : (= (s (+ z z)) z)) -> ('a2 : (= z (+ (s z) (+ z (+ z z))))) -> ('a3 : nat) -> (= z (+ (s z) (+ z (+ z z))))] {",
            "intro x : (= z z).",
            "intro x0 : (= (s (+ z z)) z).",
            "intro x1 : (= z (+ (s z) (+ z (+ z z)))).",
            "intro _ : [('a3 : nat) -> (= z (+ (s z) (+ z (+ z z))))].",
            "}"
        ],
        "logprob": -8.403926598460213,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 (+ (+ z z) z)) z))) -> (= 'a0 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 (+ (+ z z) z)) z))) -> (= nat 'a0 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 (+ (+ z z) z)) z))) -> (= 'a0 'a0)] {",
            "intro x : nat.",
            "show (= x x) by c0014.",
            "intro _ : [('a1 : (= x (+ (+ x (+ (+ z z) z)) z))) -> (= x x)].",
            "}"
        ],
        "logprob": -4.832964439121265,
        "actions": [
            "intro.",
            "c c0014",
            "=> (= x x).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (s (+ z (+ z z))) z)) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> ('a4 : (= z (+ z (+ (+ z z) (+ z z))))) -> (= z (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (s (+ z (+ z z))) z)) -> ('a2 : nat) -> ('a3 : (= nat z (+ z (+ z z)))) -> ('a4 : (= nat z (+ z (+ (+ z z) (+ z z))))) -> (= nat z (+ z (+ z z)))]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> ('a1 : (= (s (+ z (+ z z))) z)) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> ('a4 : (= z (+ z (+ (+ z z) (+ z z))))) -> (= z (+ z (+ z z)))] {",
            "intro x : (= z z).",
            "intro x0 : (= (s (+ z (+ z z))) z).",
            "intro x1 : nat.",
            "intro x2 : (= z (+ z (+ z z))).",
            "intro _ : [('a4 : (= z (+ z (+ (+ z z) (+ z z))))) -> (= z (+ z (+ z z)))].",
            "}"
        ],
        "logprob": -10.473463965890467,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= z z)) -> ('a1 : nat) -> ('a2 : (= 'a1 (s 'a1))) -> ('a3 : (= z (+ (+ 'a1 'a1) 'a1))) -> (= 'a1 z)]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : nat) -> ('a2 : (= nat 'a1 (s 'a1))) -> ('a3 : (= nat z (+ (+ 'a1 'a1) 'a1))) -> (= nat 'a1 z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (s 'a0) 'a0))) -> (= (+ (s 'a0) 'a0) (s 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (s 'a0) 'a0))) -> (= nat (+ (s 'a0) 'a0) (s 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= z (+ z (+ z z)))) -> (= z z)]",
        "problem_raw": "[ ('a0 :(= nat z (+ z (+ z z))) ) -> (= nat z z)]",
        "proof": [
            "theorem t : [('a0 : (= z (+ z (+ z z)))) -> (= z z)] {",
            "show (= z z) by c0014.",
            "intro _ : [('a0 : (= z (+ z (+ z z)))) -> (= z z)].",
            "}"
        ],
        "logprob": -2.6521265157878933,
        "actions": [
            "c c0014",
            "=> (= z z).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z (+ z z))) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= (+ z (+ z z)) (+ z z))) -> ('a1 : (= (+ (+ z z) z) (+ z (+ z z)))) -> (= (+ (+ z z) (+ z z)) (s (+ z (+ z z))))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (+ z z)) (+ z z)) ) -> ('a1 : (= nat (+ (+ z z) z) (+ z (+ z z)))) -> (= nat (+ (+ z z) (+ z z)) (s (+ z (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (+ z z)) (+ z z)) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= (s 'a0) (s 'a0))) -> ('a2 : (= (+ (+ 'a0 'a0) 'a0) (s 'a0))) -> ('a3 : (= (+ (+ 'a0 'a0) (s 'a0)) (+ (+ 'a0 'a0) (s 'a0)))) -> (= 'a0 z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (s 'a0) (s 'a0))) -> ('a2 : (= nat (+ (+ 'a0 'a0) 'a0) (s 'a0))) -> ('a3 : (= nat (+ (+ 'a0 'a0) (s 'a0)) (+ (+ 'a0 'a0) (s 'a0))))  -> (= nat 'a0 z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat (s 'a0) (s 'a0))) -> ('a2 : (= nat (+ (+ 'a0 'a0) 'a0) (s 'a0))) -> ('a3 : (= nat (+ (+ 'a0 'a0) (s 'a0)) (+ (+ 'a0 'a0) (s 'a0)))) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 (s (+ (+ (+ 'a0 (s z)) z) z))) z))) -> (= z (+ (+ z z) (s (+ (+ 'a0 (s z)) z))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 (s (+ (+ (+ 'a0 (s z)) z) z))) z))) -> (= nat z (+ (+ z z) (s (+ (+ 'a0 (s z)) z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= (+ (s 'a0) 'a0) 'a0)) -> ('a2 : nat) -> ('a3 : (= z (+ (s 'a0) 'a0))) -> (= z (+ (s 'a0) (+ (s 'a0) 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (+ (s 'a0) 'a0) 'a0)) -> ('a2 : nat) -> ('a3 : (= nat z (+ (s 'a0) 'a0))) -> (= nat z (+ (s 'a0) (+ (s 'a0) 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= 'a0 (+ (+ 'a0 'a0) (s z)))) -> (= (+ 'a0 (+ 'a0 'a0)) (s (+ (+ 'a0 'a0) z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat 'a0 (+ (+ 'a0 'a0) (s z)))) -> (= nat (+ 'a0 (+ 'a0 'a0)) (s (+ (+ 'a0 'a0) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (s (+ z (+ z (+ z z)))) (s (+ z (+ z (+ z z)))))) -> ('a2 : nat) -> ('a3 : (= z (+ z z))) -> (= (s (+ z (+ z z))) z)]",
        "problem_raw": "[('a0 : (= nat z z)) -> ('a1 : (= nat (s (+ z (+ z (+ z z)))) (s (+ z (+ z (+ z z)))))) -> ('a2 : nat) -> ('a3 : (= nat z (+ z z))) -> (= nat (s (+ z (+ z z))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 (+ (+ z z) z)) z))) -> (= (+ z z) (+ z (+ (+ 'a0 (+ (+ z z) z)) (+ (+ 'a0 (+ (+ z z) z)) z))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 (+ (+ z z) z)) z))) -> (= nat (+ z z) (+ z (+ (+ 'a0 (+ (+ z z) z)) (+ (+ 'a0 (+ (+ z z) z)) z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= z (+ z z))) -> ('a1 : (= (+ (+ (+ z (+ z z)) (+ z z)) (+ z z)) z)) -> (= (+ z (+ (+ (+ z (+ z z)) (+ z z)) z)) (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat z (+ z z)) ) -> ('a1 : (= nat (+ (+ (+ z (+ z z)) (+ z z)) (+ z z)) z)) -> (= nat (+ z (+ (+ (+ z (+ z z)) (+ z z)) z)) (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z z)) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= (+ z (+ z z)) (+ z (+ z z)))) -> ('a1 : (= z (+ z (+ z (+ (+ z z) (+ z z)))))) -> ('a2 : nat) -> (= (+ z (+ z (+ z z))) (s (+ z (+ z z))))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (+ z z)) (+ z (+ z z))) ) -> ('a1 : (= nat z (+ z (+ z (+ (+ z z) (+ z z)))))) -> ('a2 : nat) -> (= nat (+ z (+ z (+ z z))) (s (+ z (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (+ z z)) (+ z (+ z z))) "
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 z) (s z)))) -> ('a2 : (= z (+ (+ 'a0 z) (s z)))) -> (= z (+ (+ 'a0 (s z)) z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 z) (s z)))) -> ('a2 : (= nat z (+ (+ 'a0 z) (s z)))) -> (= nat z (+ (+ 'a0 (s z)) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ z 'a0) (+ (s (+ z 'a0)) z)))) -> (= 'a0 (+ 'a0 (s z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ z 'a0) (+ (s (+ z 'a0)) z)))) -> (= nat 'a0 (+ 'a0 (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 6,
        "problem": "[('a0 : (= (+ z z) z)) -> ('a1 : (= z (+ z (+ (+ z (+ z z)) (+ z z))))) -> (= z (+ (+ (+ z z) (+ (+ z z) z)) (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) z) ) -> ('a1 : (= nat z (+ z (+ (+ z (+ z z)) (+ z z))))) -> (= nat z (+ (+ (+ z z) (+ (+ z z) z)) (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) z) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 z) (s z)))) -> ('a2 : (= z (+ (+ 'a0 z) (s z)))) -> ('a3 : (= z (+ (+ 'a0 z) (s z)))) -> (= (+ (+ 'a0 z) (s z)) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 z) (s z)))) -> ('a2 : (= nat z (+ (+ 'a0 z) (s z)))) -> ('a3 : (= nat z (+ (+ 'a0 z) (s z))))  -> (= nat (+ (+ 'a0 z) (s z)) z)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 z) (s z)))) -> ('a2 : (= z (+ (+ 'a0 z) (s z)))) -> ('a3 : (= z (+ (+ 'a0 z) (s z)))) -> (= (+ (+ 'a0 z) (s z)) z)] {",
            "intro x : nat.",
            "intro x0 : (= x (+ (+ x z) (s z))).",
            "intro x1 : (= z (+ (+ x z) (s z))).",
            "show (= (+ (+ x z) (s z)) z) by eq_symm.",
            "intro _ : [('a3 : (= z (+ (+ x z) (s z)))) -> (= (+ (+ x z) (s z)) z)].",
            "}"
        ],
        "logprob": -6.803921616584847,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "c eq_symm",
            "=> (= (+ (+ x z) (s z)) z).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 z) (s z)))) -> ('a2 : (= nat z (+ (+ 'a0 z) (s z)))) -> ('a3 : (= nat z (+ (+ 'a0 z) (s z)))) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= 'a0 (+ 'a0 'a0))) -> (= z (+ (+ z 'a0) (+ 'a0 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= nat 'a0 (+ 'a0 'a0))) -> (= nat z (+ (+ z 'a0) (+ 'a0 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= z (+ (+ 'a0 'a0) (s 'a0)))) -> (= (+ (+ 'a0 'a0) (s 'a0)) 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat z (+ (+ 'a0 'a0) (s 'a0)))) -> (= nat (+ (+ 'a0 'a0) (s 'a0)) 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ z 'a0))) -> ('a2 : (= z (+ 'a0 (+ z (+ z 'a0))))) -> (= z (+ z (+ z (+ z (+ z 'a0)))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ z 'a0))) -> ('a2 : (= nat z (+ 'a0 (+ z (+ z 'a0))))) -> (= nat z (+ z (+ z (+ z (+ z 'a0)))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= (+ z z) (+ z z))) -> ('a1 : (= z (+ z (+ z (+ (+ z (+ z z)) (+ z z)))))) -> (= (+ (+ z (+ z z)) z) (s z))]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) (+ z z)) ) -> ('a1 : (= nat z (+ z (+ z (+ (+ z (+ z z)) (+ z z)))))) -> (= nat (+ (+ z (+ z z)) z) (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) (+ z z)) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (s 'a0) 'a0))) -> ('a2 : (= z (+ (s 'a0) (+ (s 'a0) 'a0)))) -> ('a3 : (= 'a0 'a0)) -> (= z (+ (s 'a0) (+ (s 'a0) 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (s 'a0) 'a0))) -> ('a2 : (= nat z (+ (s 'a0) (+ (s 'a0) 'a0)))) -> ('a3 : (= nat 'a0 'a0))  -> (= nat z (+ (s 'a0) (+ (s 'a0) 'a0)))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 (+ (s 'a0) 'a0))) -> ('a2 : (= z (+ (s 'a0) (+ (s 'a0) 'a0)))) -> ('a3 : (= 'a0 'a0)) -> (= z (+ (s 'a0) (+ (s 'a0) 'a0)))] {",
            "intro x : nat.",
            "intro x0 : (= x (+ (s x) x)).",
            "intro x1 : (= z (+ (s x) (+ (s x) x))).",
            "intro _ : [('a3 : (= x x)) -> (= z (+ (s x) (+ (s x) x)))].",
            "}"
        ],
        "logprob": -5.2550394085164065,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (s 'a0) 'a0))) -> ('a2 : (= nat z (+ (s 'a0) (+ (s 'a0) 'a0)))) -> ('a3 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= (s (+ z z)) (s (+ z z)))) -> ('a1 : (= z (+ (s z) z))) -> ('a2 : (= z (+ z (+ z z)))) -> (= z (+ z (+ z (+ (s z) z))))]",
        "problem_raw": "[ ('a0 :(= nat (s (+ z z)) (s (+ z z))) ) -> ('a1 : (= nat z (+ (s z) z))) -> ('a2 : (= nat z (+ z (+ z z)))) -> (= nat z (+ z (+ z (+ (s z) z))))]",
        "proof": [
            "theorem t : [('a0 : (= (s (+ z z)) (s (+ z z)))) -> ('a1 : (= z (+ (s z) z))) -> ('a2 : (= z (+ z (+ z z)))) -> (= z (+ z (+ z (+ (s z) z))))] {",
            "intro x : (= (s (+ z z)) (s (+ z z))).",
            "intro x0 : (= z (+ (s z) z)).",
            "intro x1 : (= z (+ z (+ z z))).",
            "show (= z (+ z (+ z (+ (s z) z)))) by rewrite.",
            "}"
        ],
        "logprob": -7.73846127004641,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "c rewrite",
            "=> (= z (+ z (+ z (+ (s z) z))))."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (s (+ z z)) (s (+ z z))) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= (s 'a0) z)) -> ('a2 : (= z (+ (s 'a0) z))) -> ('a3 : (= z (s 'a0))) -> (= z (s 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (s 'a0) z)) -> ('a2 : (= nat z (+ (s 'a0) z))) -> ('a3 : (= nat z (s 'a0)))  -> (= nat z (s 'a0))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= (s 'a0) z)) -> ('a2 : (= z (+ (s 'a0) z))) -> ('a3 : (= z (s 'a0))) -> (= z (s 'a0))] {",
            "intro x : nat.",
            "intro x0 : (= (s x) z).",
            "intro x1 : (= z (+ (s x) z)).",
            "intro _ : [('a3 : (= z (s x))) -> (= z (s x))].",
            "}"
        ],
        "logprob": -5.308990004290254,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat (s 'a0) z)) -> ('a2 : (= nat z (+ (s 'a0) z))) -> ('a3 : (= nat z (s 'a0))) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= (+ z z) z)) -> ('a1 : (= z (+ z (+ (+ z (+ z z)) (+ z z))))) -> (= (+ z (+ z (+ (+ z (+ z z)) (+ z z)))) z)]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) z) ) -> ('a1 : (= nat z (+ z (+ (+ z (+ z z)) (+ z z))))) -> (= nat (+ z (+ z (+ (+ z (+ z z)) (+ z z)))) z)]",
        "proof": [
            "theorem t : [('a0 : (= (+ z z) z)) -> ('a1 : (= z (+ z (+ (+ z (+ z z)) (+ z z))))) -> (= (+ z (+ z (+ (+ z (+ z z)) (+ z z)))) z)] {",
            "intro x : (= (+ z z) z).",
            "intro x0 : (= z (+ z (+ (+ z (+ z z)) (+ z z)))).",
            "show (= (+ z (+ z (+ (+ z (+ z z)) (+ z z)))) z) by rewrite.",
            "}"
        ],
        "logprob": -6.387799989903508,
        "actions": [
            "intro.",
            "intro.",
            "c rewrite",
            "=> (= (+ z (+ z (+ (+ z (+ z z)) (+ z z)))) z)."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) z) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ z 'a0) (s z)))) -> ('a2 : (= z (+ (+ z 'a0) (s z)))) -> (= (+ (+ z 'a0) (s z)) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ z 'a0) (s z)))) -> ('a2 : (= nat z (+ (+ z 'a0) (s z)))) -> (= nat (+ (+ z 'a0) (s z)) z)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 (+ (+ z 'a0) (s z)))) -> ('a2 : (= z (+ (+ z 'a0) (s z)))) -> (= (+ (+ z 'a0) (s z)) z)] {",
            "intro x : nat.",
            "intro x0 : (= x (+ (+ z x) (s z))).",
            "intro x1 : (= z (+ (+ z x) (s z))).",
            "apply c0307.",
            "}"
        ],
        "logprob": -6.784472369867268,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "a c0307",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ z 'a0) (+ (s (+ z (s z))) z)))) -> (= z (+ 'a0 (s z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ z 'a0) (+ (s (+ z (s z))) z)))) -> (= nat z (+ 'a0 (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= z (+ (s z) z))) -> ('a1 : (= z (+ (s z) (+ z z)))) -> (= (s (+ (s z) z)) (s (+ (s z) (+ (s z) z))))]",
        "problem_raw": "[ ('a0 :(= nat z (+ (s z) z)) ) -> ('a1 : (= nat z (+ (s z) (+ z z)))) -> (= nat (s (+ (s z) z)) (s (+ (s z) (+ (s z) z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ (s z) z)) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= (+ (+ 'a0 'a0) 'a0) (s 'a0))) -> ('a3 : (= 'a0 (s (+ (+ 'a0 'a0) 'a0)))) -> (= (+ (+ 'a0 'a0) (s 'a0)) (s (s (+ (+ 'a0 'a0) 'a0))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat (+ (+ 'a0 'a0) 'a0) (s 'a0))) -> ('a3 : (= nat 'a0 (s (+ (+ 'a0 'a0) 'a0)))) -> (= nat (+ (+ 'a0 'a0) (s 'a0)) (s (s (+ (+ 'a0 'a0) 'a0))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ (+ z z) (+ z z)))) -> (= z (+ (+ (+ z z) (+ (+ (+ (+ z z) (+ z z)) z) z)) z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z (+ (+ z z) (+ z z)))) -> (= nat z (+ (+ (+ z z) (+ (+ (+ (+ z z) (+ z z)) z) z)) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= z (+ z (+ z z)))) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> ('a4 : (= (+ z (+ z z)) (+ z z))) -> (= 'a1 (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z (+ z (+ z z))) ) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= nat z (+ z (+ z z)))) -> ('a4 : (= nat (+ z (+ z z)) (+ z z))) -> (= nat 'a1 (+ z (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z (+ z z))) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= z 'a0)) -> ('a4 : (= 'a0 'a0)) -> ('a5 : (= 'a0 'a0)) -> (= (+ z 'a0) (+ 'a0 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0))  -> ('a3 : (= nat z 'a0)) -> ('a4 : (= nat 'a0 'a0)) -> ('a5 : (= nat 'a0 'a0)) -> (= nat (+ z 'a0) (+ 'a0 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (s (+ z (+ z z))) z)) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> ('a4 : (= z (+ z (+ (+ z 'a2) (+ z z))))) -> (= z (s (+ z (+ z z))))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (s (+ z (+ z z))) z)) -> ('a2 : nat) -> ('a3 : (= nat z (+ z (+ z z)))) -> ('a4 : (= nat z (+ z (+ (+ z 'a2) (+ z z))))) -> (= nat z (s (+ z (+ z z))))]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> ('a1 : (= (s (+ z (+ z z))) z)) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> ('a4 : (= z (+ z (+ (+ z 'a2) (+ z z))))) -> (= z (s (+ z (+ z z))))] {",
            "intro x : (= z z).",
            "intro x0 : (= (s (+ z (+ z z))) z).",
            "intro x1 : nat.",
            "intro x2 : (= z (+ z (+ z z))).",
            "show (= z (s (+ z (+ z z)))) by eq_symm.",
            "intro _ : [('a4 : (= z (+ z (+ (+ z x1) (+ z z))))) -> (= z (s (+ z (+ z z))))].",
            "}"
        ],
        "logprob": -8.733798988365118,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "c eq_symm",
            "=> (= z (s (+ z (+ z z)))).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 'a0) (+ z 'a0)))) -> (= (+ (+ 'a0 'a0) (s (+ z 'a0))) (s (+ (+ 'a0 'a0) (s 'a0))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 'a0) (+ z 'a0)))) -> (= nat (+ (+ 'a0 'a0) (s (+ z 'a0))) (s (+ (+ 'a0 'a0) (s 'a0))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= (s 'a0) z)) -> ('a2 : nat) -> ('a3 : (= 'a0 z)) -> ('a4 : (= z (+ 'a0 'a0))) -> ('a5 : (= z (+ z (+ z 'a0)))) -> (= z (+ z (+ z 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (s 'a0) z)) -> ('a2 : nat) -> ('a3 : (= nat 'a0 z)) -> ('a4 : (= nat z (+ 'a0 'a0))) -> ('a5 : (= nat z (+ z (+ z 'a0)))) -> (= nat z (+ z (+ z 'a0)))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= (s 'a0) z)) -> ('a2 : nat) -> ('a3 : (= 'a0 z)) -> ('a4 : (= z (+ 'a0 'a0))) -> ('a5 : (= z (+ z (+ z 'a0)))) -> (= z (+ z (+ z 'a0)))] {",
            "intro x : nat.",
            "intro x0 : (= (s x) z).",
            "intro x1 : nat.",
            "intro x2 : (= x z).",
            "intro x3 : (= z (+ x x)).",
            "intro _ : [('a5 : (= z (+ z (+ z x)))) -> (= z (+ z (+ z x)))].",
            "}"
        ],
        "logprob": -7.497451302800851,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 z) (s z)))) -> ('a2 : (= z (+ (+ 'a0 z) (s (+ (+ 'a0 z) (s z)))))) -> (= z (+ (+ 'a0 z) (s z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 z) (s z)))) -> ('a2 : (= nat z (+ (+ 'a0 z) (s (+ (+ 'a0 z) (s z)))))) -> (= nat z (+ (+ 'a0 z) (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 (s (+ (+ (+ 'a0 (s z)) z) z))) z))) -> (= 'a0 (+ (+ 'a0 (s (+ (+ (+ 'a0 (s z)) z) z))) z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 (s (+ (+ (+ 'a0 (s z)) z) z))) z))) -> (= nat 'a0 (+ (+ 'a0 (s (+ (+ (+ 'a0 (s z)) z) z))) z))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 (s (+ (+ (+ 'a0 (s z)) z) z))) z))) -> (= 'a0 (+ (+ 'a0 (s (+ (+ (+ 'a0 (s z)) z) z))) z))] {",
            "intro x : nat.",
            "intro _ : [('a1 : (= x (+ (+ x (s (+ (+ (+ x (s z)) z) z))) z))) -> (= x (+ (+ x (s (+ (+ (+ x (s z)) z) z))) z))].",
            "}"
        ],
        "logprob": -2.650149484833897,
        "actions": [
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= z (s (+ z z)))) -> ('a1 : (= z (+ (+ z z) (+ z z)))) -> (= z (+ (+ z z) (s (+ z (+ (+ z z) (+ z z))))))]",
        "problem_raw": "[ ('a0 :(= nat z (s (+ z z))) ) -> ('a1 : (= nat z (+ (+ z z) (+ z z)))) -> (= nat z (+ (+ z z) (s (+ z (+ (+ z z) (+ z z))))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (s (+ z z))) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= z (+ z (+ z z)))) -> ('a1 : (= (+ (+ z z) (+ z z)) z)) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> (= (+ z (+ z z)) (s (+ z (+ z z))))]",
        "problem_raw": "[ ('a0 :(= nat z (+ z (+ z z))) ) -> ('a1 : (= nat (+ (+ z z) (+ z z)) z)) -> ('a2 : nat) -> ('a3 : (= nat z (+ z (+ z z)))) -> (= nat (+ z (+ z z)) (s (+ z (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z (+ z z))) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= (+ (+ 'a0 'a0) 'a0) (s 'a0))) -> ('a3 : (= 'a0 (s (s 'a0)))) -> (= (s (s 'a0)) (s z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat (+ (+ 'a0 'a0) 'a0) (s 'a0))) -> ('a3 : (= nat 'a0 (s (s 'a0)))) -> (= nat (s (s 'a0)) (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= 'a0 (+ (s 'a0) (+ (s (+ (+ (s 'a0) 'a0) 'a0)) 'a0)))) -> (= z z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= nat 'a0 (+ (s 'a0) (+ (s (+ (+ (s 'a0) 'a0) 'a0)) 'a0)))) -> (= nat z z)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= 'a0 (+ (s 'a0) (+ (s (+ (+ (s 'a0) 'a0) 'a0)) 'a0)))) -> (= z z)] {",
            "intro x : nat.",
            "intro x0 : (= x (+ (+ (s x) x) x)).",
            "show (= z z) by c0093.",
            "intro _ : [('a2 : (= x (+ (s x) (+ (s (+ (+ (s x) x) x)) x)))) -> (= z z)].",
            "}"
        ],
        "logprob": -5.224646679837552,
        "actions": [
            "intro.",
            "intro.",
            "c c0093",
            "=> (= z z).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= (s 'a0) z)) -> ('a2 : nat) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= z (+ 'a0 'a0))) -> (= 'a0 (+ z (+ z 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (s 'a0) z)) -> ('a2 : nat) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat z (+ 'a0 'a0))) -> (= nat 'a0 (+ z (+ z 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= z (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= (+ (s 'a0) 'a0) (+ (s 'a0) (+ (s 'a0) 'a0)))) -> (= 'a0 (+ (s 'a0) (+ (s 'a0) 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= nat (+ (s 'a0) 'a0) (+ (s 'a0) (+ (s 'a0) 'a0)))) -> (= nat 'a0 (+ (s 'a0) (+ (s 'a0) 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= (+ z z) (+ z z))) -> ('a1 : (= z (+ z (+ z (+ (+ z (+ z z)) (+ z z)))))) -> (= z (+ (+ z (+ z z)) (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) (+ z z)) ) -> ('a1 : (= nat z (+ z (+ z (+ (+ z (+ z z)) (+ z z)))))) -> (= nat z (+ (+ z (+ z z)) (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) (+ z z)) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= z (s (+ z z)))) -> ('a1 : (= z (+ (+ z z) (+ z (+ z z))))) -> (= z (+ (+ z z) (+ (s (+ (+ z z) (+ z z))) (+ z z))))]",
        "problem_raw": "[ ('a0 :(= nat z (s (+ z z))) ) -> ('a1 : (= nat z (+ (+ z z) (+ z (+ z z))))) -> (= nat z (+ (+ z z) (+ (s (+ (+ z z) (+ z z))) (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (s (+ z z))) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= (+ z z) z)) -> ('a1 : (= (+ z (+ z (+ (s (+ z (s z))) z))) (+ (+ z (+ z z)) z))) -> (= z (+ z (+ (s (+ z (s z))) z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) z) ) -> ('a1 : (= nat (+ z (+ z (+ (s (+ z (s z))) z))) (+ (+ z (+ z z)) z))) -> (= nat z (+ z (+ (s (+ z (s z))) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) z) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (+ z 'a0) (+ z z)) (s z)))) -> (= (+ (+ (+ (+ z 'a0) (+ z z)) 'a0) (s z)) (s (+ (+ (+ z 'a0) z) z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (+ z 'a0) (+ z z)) (s z)))) -> (= nat (+ (+ (+ (+ z 'a0) (+ z z)) 'a0) (s z)) (s (+ (+ (+ z 'a0) z) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 (+ (+ 'a0 z) 'a0))) -> ('a3 : (= 'a0 (+ (+ 'a0 'a0) (+ (+ 'a0 'a0) 'a0)))) -> (= 'a0 (+ (+ 'a0 'a0) (s 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 (+ (+ 'a0 z) 'a0))) -> ('a3 : (= nat 'a0 (+ (+ 'a0 'a0) (+ (+ 'a0 'a0) 'a0)))) -> (= nat 'a0 (+ (+ 'a0 'a0) (s 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 z) (+ z 'a0)))) -> ('a2 : (= (+ (+ 'a0 z) (+ z 'a0)) z)) -> (= z (+ (+ 'a0 z) (s 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 z) (+ z 'a0)))) -> ('a2 : (= nat (+ (+ 'a0 z) (+ z 'a0)) z)) -> (= nat z (+ (+ 'a0 z) (s 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= z z)) -> ('a1 : nat) -> ('a2 : (= (s (+ 'a1 z)) (s (+ 'a1 z)))) -> ('a3 : (= z (+ (+ 'a1 z) (+ z (+ z z))))) -> (= z (s (+ 'a1 z)))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : nat) -> ('a2 : (= nat (s (+ 'a1 z)) (s (+ 'a1 z)))) -> ('a3 : (= nat z (+ (+ 'a1 z) (+ z (+ z z))))) -> (= nat z (s (+ 'a1 z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= z 'a0)) -> ('a3 : (= 'a0 z)) -> ('a4 : (= z 'a0)) -> ('a5 : (= 'a0 'a0)) -> ('a6 : nat) -> ('a7 : (= z 'a0)) -> ('a8 : (= z 'a0)) -> ('a9 : (= z 'a0)) -> (= 'a0 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0))  -> ('a3 : (= nat 'a0 z)) -> ('a4 : (= nat z 'a0)) -> ('a5 : (= nat 'a0 'a0)) -> ('a6 : nat) -> ('a7 : (= nat z 'a0)) -> ('a8 : (= nat z 'a0)) -> ('a9 : (= nat z 'a0)) -> (= nat 'a0 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= z 'a0)) -> ('a3 : (= 'a0 z)) -> ('a4 : (= z 'a0)) -> ('a5 : (= 'a0 'a0)) -> ('a6 : nat) -> ('a7 : (= z 'a0)) -> ('a8 : (= z 'a0)) -> ('a9 : (= z 'a0)) -> (= 'a0 'a0)] {",
            "intro x : nat.",
            "intro x0 : (= x z).",
            "intro x1 : (= z x).",
            "intro x2 : (= x z).",
            "intro x3 : (= z x).",
            "intro x4 : (= x x).",
            "intro x5 : nat.",
            "intro x6 : (= z x).",
            "intro x7 : (= z x).",
            "intro _ : [('a9 : (= z x)) -> (= x x)].",
            "}"
        ],
        "logprob": -11.84689854612328,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 z)) -> ('a4 : (= z 'a0)) -> ('a5 : (= 'a0 'a0)) -> ('a6 : nat) -> ('a7 : (= 'a0 'a0)) -> (= 'a0 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 z)) -> ('a4 : (= nat z 'a0)) -> ('a5 : (= nat 'a0 'a0)) -> ('a6 : nat) -> ('a7 : (= nat 'a0 'a0)) -> (= nat 'a0 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 z)) -> ('a4 : (= z 'a0)) -> ('a5 : (= 'a0 'a0)) -> ('a6 : nat) -> ('a7 : (= 'a0 'a0)) -> (= 'a0 'a0)] {",
            "intro x : nat.",
            "intro x0 : (= z x).",
            "intro x1 : (= x x).",
            "intro x2 : (= x z).",
            "intro x3 : (= z x).",
            "intro x4 : (= x x).",
            "intro x5 : nat.",
            "intro _ : [('a7 : (= x x)) -> (= x x)].",
            "}"
        ],
        "logprob": -11.01458238357931,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= (+ (s z) (+ z (+ z z))) z)) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= (+ (s z) (+ z (+ z z))) z)) -> (= (+ z (+ (s z) z)) (s (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ (s z) (+ z (+ z z))) z) ) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= nat (+ (s z) (+ z (+ z z))) z)) -> (= nat (+ z (+ (s z) z)) (s (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (s z) (+ z (+ z z))) z) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 (+ (+ z z) z)) z))) -> (= (+ (+ (+ 'a0 (+ (+ z z) z)) z) z) 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 (+ (+ z z) z)) z))) -> (= nat (+ (+ (+ 'a0 (+ (+ z z) z)) z) z) 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= (+ z (+ z z)) (+ z (+ z z)))) -> ('a1 : (= z (+ (+ z z) z))) -> ('a2 : (= z (+ z z))) -> (= (+ (+ z z) z) (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (+ z z)) (+ z (+ z z))) ) -> ('a1 : (= nat z (+ (+ z z) z))) -> ('a2 : (= nat z (+ z z))) -> (= nat (+ (+ z z) z) (+ z z))]",
        "proof": [
            "theorem t : [('a0 : (= (+ z (+ z z)) (+ z (+ z z)))) -> ('a1 : (= z (+ (+ z z) z))) -> ('a2 : (= z (+ z z))) -> (= (+ (+ z z) z) (+ z z))] {",
            "intro x : (= (+ z (+ z z)) (+ z (+ z z))).",
            "intro x0 : (= z (+ (+ z z) z)).",
            "show (= (+ (+ z z) z) (+ z z)) by +_z.",
            "intro _ : [('a2 : (= z (+ z z))) -> (= (+ (+ z z) z) (+ z z))].",
            "}"
        ],
        "logprob": -6.545014757243833,
        "actions": [
            "intro.",
            "intro.",
            "c +_z",
            "=> (= (+ (+ z z) z) (+ z z)).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (+ z z)) (+ z (+ z z))) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= (+ z (+ z (+ z z))) z)) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= (+ z (+ z z)) (+ z (+ z z)))) -> (= (+ z (+ z z)) (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (+ z (+ z z))) z) ) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= nat (+ z (+ z z)) (+ z (+ z z)))) -> (= nat (+ z (+ z z)) (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (+ z (+ z z))) z) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (s 'a0) 'a0))) -> ('a2 : (= (+ (s (+ (s 'a0) 'a0)) 'a0) 'a0)) -> ('a3 : nat) -> (= (+ 'a0 (+ 'a0 'a0)) (+ (s (+ (s 'a0) 'a0)) (+ 'a0 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (s 'a0) 'a0))) -> ('a2 : (= nat (+ (s (+ (s 'a0) 'a0)) 'a0) 'a0)) -> ('a3 : nat) -> (= nat (+ 'a0 (+ 'a0 'a0)) (+ (s (+ (s 'a0) 'a0)) (+ 'a0 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= (+ 'a0 'a0) 'a0)) -> ('a3 : (= 'a0 (+ 'a0 (+ (+ 'a0 'a0) 'a0)))) -> (= z (+ (+ 'a0 'a0) (+ 'a0 (+ (+ 'a0 'a0) 'a0))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= nat (+ 'a0 'a0) 'a0)) -> ('a3 : (= nat 'a0 (+ 'a0 (+ (+ 'a0 'a0) 'a0)))) -> (= nat z (+ (+ 'a0 'a0) (+ 'a0 (+ (+ 'a0 'a0) 'a0))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 'a0) (+ z 'a0)))) -> (= 'a0 (+ (+ 'a0 'a0) (s 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 'a0) (+ z 'a0)))) -> (= nat 'a0 (+ (+ 'a0 'a0) (s 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (s 'a0) 'a0))) -> ('a2 : (= z (+ (s 'a0) (+ (s 'a0) 'a0)))) -> (= 'a0 (+ 'a0 (+ (s 'a0) (+ (s 'a0) (+ (s 'a0) (+ 'a0 'a0))))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (s 'a0) 'a0))) -> ('a2 : (= nat z (+ (s 'a0) (+ (s 'a0) 'a0)))) -> (= nat 'a0 (+ 'a0 (+ (s 'a0) (+ (s 'a0) (+ (s 'a0) (+ 'a0 'a0))))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= (+ (+ (+ z z) z) z) (+ z z))) -> ('a1 : nat) -> ('a2 : (= z (+ (+ z (+ (+ z z) z)) z))) -> (= (+ (+ (+ z z) z) z) (s z))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ (+ z z) z) z) (+ z z)) ) -> ('a1 : nat) -> ('a2 : (= nat z (+ (+ z (+ (+ z z) z)) z))) -> (= nat (+ (+ (+ z z) z) z) (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ (+ z z) z) z) (+ z z)) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (s (+ z z)) z)) -> ('a2 : (= z (+ (s z) (+ z z)))) -> ('a3 : nat) -> (= z (s (+ z (s (+ z z)))))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (s (+ z z)) z)) -> ('a2 : (= nat z (+ (s z) (+ z z)))) -> ('a3 : nat) -> (= nat z (s (+ z (s (+ z z)))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= (+ z z) z)) -> ('a1 : (= z (+ z (+ (+ z (+ z z)) (s z))))) -> (= (+ z (s z)) (s (+ z (+ (+ z (+ z z)) (s z)))))]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) z) ) -> ('a1 : (= nat z (+ z (+ (+ z (+ z z)) (s z))))) -> (= nat (+ z (s z)) (s (+ z (+ (+ z (+ z z)) (s z)))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) z) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 z) (+ z 'a0)))) -> (= 'a0 (s (+ (+ 'a0 z) (s z))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 z) (+ z 'a0)))) -> (= nat 'a0 (s (+ (+ 'a0 z) (s z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 z)) -> ('a4 : (= 'a0 'a0)) -> ('a5 : (= 'a0 (+ (+ 'a0 'a0) 'a0))) -> (= 'a0 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 z)) -> ('a4 : (= nat 'a0 'a0))  -> ('a5 : (= nat 'a0 (+ (+ 'a0 'a0) 'a0))) -> (= nat 'a0 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 z)) -> ('a4 : (= 'a0 'a0)) -> ('a5 : (= 'a0 (+ (+ 'a0 'a0) 'a0))) -> (= 'a0 'a0)] {",
            "intro x : nat.",
            "intro x0 : (= x z).",
            "intro x1 : (= x x).",
            "intro x2 : (= x z).",
            "intro x3 : (= x x).",
            "intro _ : [('a5 : (= x (+ (+ x x) x))) -> (= x x)].",
            "}"
        ],
        "logprob": -9.144815317791078,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 z)) -> ('a4 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 'a0) (+ z 'a0)))) -> ('a2 : (= 'a0 (+ (+ 'a0 'a0) (+ z 'a0)))) -> (= (+ 'a0 (+ (+ 'a0 'a0) (+ z 'a0))) (+ (+ 'a0 'a0) (+ z 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 'a0) (+ z 'a0)))) -> ('a2 : (= nat 'a0 (+ (+ 'a0 'a0) (+ z 'a0))))  -> (= nat (+ 'a0 (+ (+ 'a0 'a0) (+ z 'a0))) (+ (+ 'a0 'a0) (+ z 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 'a0) (+ z 'a0)))) -> ('a2 : (= nat 'a0 (+ (+ 'a0 'a0) (+ z 'a0)))) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= 'a0 z)) -> ('a3 : nat) -> ('a4 : (= 'a0 (+ 'a0 'a0))) -> (= (+ 'a0 'a0) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat 'a0 z)) -> ('a3 : nat) -> ('a4 : (= nat 'a0 (+ 'a0 'a0))) -> (= nat (+ 'a0 'a0) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (s (+ z (+ z (+ z z)))) z)) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> ('a4 : (= z (+ z (+ (+ z 'a2) (+ z z))))) -> (= z (+ (+ z 'a2) (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (s (+ z (+ z (+ z z)))) z)) -> ('a2 : nat) -> ('a3 : (= nat z (+ z (+ z z)))) -> ('a4 : (= nat z (+ z (+ (+ z 'a2) (+ z z))))) -> (= nat z (+ (+ z 'a2) (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= (+ (+ z z) z) (+ z z))) -> ('a1 : (= z (+ (+ z (+ (+ z z) z)) z))) -> (= (+ (+ z (+ (+ z z) z)) z) (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z z) z) (+ z z)) ) -> ('a1 : (= nat z (+ (+ z (+ (+ z z) z)) z))) -> (= nat (+ (+ z (+ (+ z z) z)) z) (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z z) z) (+ z z)) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= z (+ z z))) -> ('a1 : (= (+ (+ (+ z (+ z z)) (+ z z)) (+ z z)) z)) -> (= z (s (+ (+ (+ z (+ z z)) (+ z z)) z)))]",
        "problem_raw": "[ ('a0 :(= nat z (+ z z)) ) -> ('a1 : (= nat (+ (+ (+ z (+ z z)) (+ z z)) (+ z z)) z)) -> (= nat z (s (+ (+ (+ z (+ z z)) (+ z z)) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z z)) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= z (+ (+ 'a0 'a0) (s 'a0)))) -> (= (+ (+ 'a0 'a0) z) (s 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat z (+ (+ 'a0 'a0) (s 'a0)))) -> (= nat (+ (+ 'a0 'a0) z) (s 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= z 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= 'a0 'a0)) -> ('a5 : (= z 'a0)) -> ('a6 : (= z 'a0)) -> (= 'a0 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 'a0)) -> ('a5 : (= nat z 'a0)) -> ('a6 : (= nat z 'a0))  -> (= nat 'a0 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= z 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= 'a0 'a0)) -> ('a5 : (= z 'a0)) -> ('a6 : (= z 'a0)) -> (= 'a0 'a0)] {",
            "intro x : nat.",
            "intro x0 : (= x z).",
            "intro x1 : (= z x).",
            "intro x2 : (= x x).",
            "intro x3 : (= x x).",
            "intro x4 : (= z x).",
            "intro _ : [('a6 : (= z x)) -> (= x x)].",
            "}"
        ],
        "logprob": -9.405617852747472,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 'a0)) -> ('a5 : (= nat z 'a0)) -> ('a6 : (= nat z 'a0)) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= (+ (+ (+ z z) z) z) (+ (+ (+ z z) z) z))) -> ('a1 : nat) -> ('a2 : (= z (+ (+ z (+ (+ (s (+ z (s z))) z) z)) z))) -> (= z (+ z (+ (+ z z) z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ (+ z z) z) z) (+ (+ (+ z z) z) z)) ) -> ('a1 : nat) -> ('a2 : (= nat z (+ (+ z (+ (+ (s (+ z (s z))) z) z)) z))) -> (= nat z (+ z (+ (+ z z) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ (+ z z) z) z) (+ (+ (+ z z) z) z)) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= (+ z (s z)) (+ z (s z)))) -> ('a1 : (= z (+ (+ z (s (s z))) (s z)))) -> (= z (+ (+ (+ z (s (s z))) z) (s z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (s z)) (+ z (s z))) ) -> ('a1 : (= nat z (+ (+ z (s (s z))) (s z)))) -> (= nat z (+ (+ (+ z (s (s z))) z) (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (s z)) (+ z (s z))) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ z 'a0) (+ (s (+ (+ z 'a0) z)) z)))) -> (= (+ 'a0 (s z)) (s (+ (+ z 'a0) (+ (+ z 'a0) (+ (s (+ (+ z 'a0) z)) z)))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ z 'a0) (+ (s (+ (+ z 'a0) z)) z)))) -> (= nat (+ 'a0 (s z)) (s (+ (+ z 'a0) (+ (+ z 'a0) (+ (s (+ (+ z 'a0) z)) z)))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= (+ (+ (+ z z) z) z) (+ z z))) -> ('a1 : nat) -> ('a2 : (= 'a1 'a1)) -> ('a3 : (= z (+ z (+ z z)))) -> (= z (+ z (+ z (+ (s (+ 'a1 'a1)) z))))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ (+ z z) z) z) (+ z z)) ) -> ('a1 : nat) -> ('a2 : (= nat 'a1 'a1)) -> ('a3 : (= nat z (+ z (+ z z)))) -> (= nat z (+ z (+ z (+ (s (+ 'a1 'a1)) z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ (+ z z) z) z) (+ z z)) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= z (+ (s 'a0) (+ (s 'a0) 'a0)))) -> (= z (+ (s 'a0) (s 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= nat z (+ (s 'a0) (+ (s 'a0) 'a0)))) -> (= nat z (+ (s 'a0) (s 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ (+ z z) (+ z z)))) -> (= (+ z z) (s (+ (+ z z) (+ z z))))]",
        "problem_raw": "[('a0 : (= nat z z)) -> ('a1 : (= nat z (+ (+ z z) (+ z z)))) -> (= nat (+ z z) (s (+ (+ z z) (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= z (+ (s 'a0) (+ (s 'a0) 'a0)))) -> (= z (+ z (+ (s 'a0) 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= nat z (+ (s 'a0) (+ (s 'a0) 'a0)))) -> (= nat z (+ z (+ (s 'a0) 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ z 'a0) (s z)))) -> ('a2 : (= z (+ (+ z 'a0) (s z)))) -> (= (+ 'a0 (+ (+ z 'a0) z)) (+ 'a0 (+ (+ z 'a0) (+ (+ z 'a0) (s z)))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ z 'a0) (s z)))) -> ('a2 : (= nat z (+ (+ z 'a0) (s z)))) -> (= nat (+ 'a0 (+ (+ z 'a0) z)) (+ 'a0 (+ (+ z 'a0) (+ (+ z 'a0) (s z)))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= (+ z (+ z z)) (+ z z))) -> ('a1 : (= z (+ (+ z z) z))) -> ('a2 : (= z (+ z z))) -> (= z (+ z (+ (+ z z) z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (+ z z)) (+ z z)) ) -> ('a1 : (= nat z (+ (+ z z) z))) -> ('a2 : (= nat z (+ z z))) -> (= nat z (+ z (+ (+ z z) z)))]",
        "proof": [
            "theorem t : [('a0 : (= (+ z (+ z z)) (+ z z))) -> ('a1 : (= z (+ (+ z z) z))) -> ('a2 : (= z (+ z z))) -> (= z (+ z (+ (+ z z) z)))] {",
            "intro x : (= (+ z (+ z z)) (+ z z)).",
            "intro x0 : (= z (+ (+ z z) z)).",
            "intro x1 : (= z (+ z z)).",
            "show (= z (+ z (+ (+ z z) z))) by rewrite.",
            "}"
        ],
        "logprob": -7.88573839362061,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "c rewrite",
            "=> (= z (+ z (+ (+ z z) z)))."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (+ z z)) (+ z z)) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (s (+ z (+ z (+ z z)))) z)) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> ('a4 : (= z (+ z (+ z (+ z z))))) -> (= z (+ z (+ z (+ z (+ z z)))))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (s (+ z (+ z (+ z z)))) z)) -> ('a2 : nat) -> ('a3 : (= nat z (+ z (+ z z)))) -> ('a4 : (= nat z (+ z (+ z (+ z z))))) -> (= nat z (+ z (+ z (+ z (+ z z)))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= z (+ (+ z (+ (+ (+ z z) z) z)) z))) -> (= (+ (s (+ z z)) z) (s (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z (+ (+ z (+ (+ (+ z z) z) z)) z)) ) -> (= nat (+ (s (+ z z)) z) (s (+ z z)))]",
        "proof": [
            "theorem t : [('a0 : (= z (+ (+ z (+ (+ (+ z z) z) z)) z))) -> (= (+ (s (+ z z)) z) (s (+ z z)))] {",
            "intro x : (= z (+ (+ z (+ (+ (+ z z) z) z)) z)).",
            "show (= (+ (s (+ z z)) z) (s (+ z z))) by +_z.",
            "}"
        ],
        "logprob": -4.435602193761044,
        "actions": [
            "intro.",
            "c +_z",
            "=> (= (+ (s (+ z z)) z) (s (+ z z)))."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ (+ z (+ (+ (+ z z) z) z)) z)) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 (s (+ (+ (+ (+ 'a0 (s z)) z) z) z))) z))) -> (= (+ (+ 'a0 (s (+ (+ (+ 'a0 (s z)) z) z))) z) 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 (s (+ (+ (+ (+ 'a0 (s z)) z) z) z))) z))) -> (= nat (+ (+ 'a0 (s (+ (+ (+ 'a0 (s z)) z) z))) z) 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 z)) -> ('a3 : (= z (+ 'a0 'a0))) -> ('a4 : (= z (+ 'a0 'a0))) -> (= 'a0 (+ 'a0 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 z)) -> ('a3 : (= nat z (+ 'a0 'a0))) -> ('a4 : (= nat z (+ 'a0 'a0)))  -> (= nat 'a0 (+ 'a0 'a0))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 z)) -> ('a3 : (= z (+ 'a0 'a0))) -> ('a4 : (= z (+ 'a0 'a0))) -> (= 'a0 (+ 'a0 'a0))] {",
            "intro x : nat.",
            "intro x0 : (= x x).",
            "intro x1 : (= x z).",
            "intro x2 : (= z (+ x x)).",
            "show (= x (+ x x)) by rewrite.",
            "intro _ : [('a4 : (= z (+ x x))) -> (= x (+ x x))].",
            "}"
        ],
        "logprob": -10.017804620004531,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "c rewrite",
            "=> (= x (+ x x)).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 z)) -> ('a3 : (= nat z (+ 'a0 'a0))) -> ('a4 : (= nat z (+ 'a0 'a0))) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= z (+ (s 'a0) (+ (s 'a0) 'a0)))) -> (= z (+ (s 'a0) (+ (s 'a0) 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= nat z (+ (s 'a0) (+ (s 'a0) 'a0)))) -> (= nat z (+ (s 'a0) (+ (s 'a0) 'a0)))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= z (+ (s 'a0) (+ (s 'a0) 'a0)))) -> (= z (+ (s 'a0) (+ (s 'a0) 'a0)))] {",
            "intro x : nat.",
            "intro x0 : (= x (+ (+ (s x) x) x)).",
            "intro _ : [('a2 : (= z (+ (s x) (+ (s x) x)))) -> (= z (+ (s x) (+ (s x) x)))].",
            "}"
        ],
        "logprob": -3.88932820763912,
        "actions": [
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ 'a0 (+ z 'a0)))) -> ('a2 : (= 'a0 (+ 'a0 (+ z 'a0)))) -> (= 'a0 (+ (+ 'a0 (+ z (+ 'a0 'a0))) 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ 'a0 (+ z 'a0)))) -> ('a2 : (= nat 'a0 (+ 'a0 (+ z 'a0)))) -> (= nat 'a0 (+ (+ 'a0 (+ z (+ 'a0 'a0))) 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= (+ (+ 'a0 'a0) 'a0) (s 'a0))) -> ('a3 : (= 'a0 (s 'a0))) -> (= (+ (+ 'a0 'a0) (s 'a0)) (s (s (s 'a0))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat (+ (+ 'a0 'a0) 'a0) (s 'a0))) -> ('a3 : (= nat 'a0 (s 'a0))) -> (= nat (+ (+ 'a0 'a0) (s 'a0)) (s (s (s 'a0))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= 'a0 (+ (s 'a0) (+ (s (+ (s 'a0) 'a0)) 'a0)))) -> (= (+ (s 'a0) 'a0) 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= nat 'a0 (+ (s 'a0) (+ (s (+ (s 'a0) 'a0)) 'a0)))) -> (= nat (+ (s 'a0) 'a0) 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 z) (s z)))) -> ('a2 : (= (+ (+ 'a0 z) (+ z (s z))) z)) -> (= (+ (+ 'a0 z) (+ z (s z))) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 z) (s z)))) -> ('a2 : (= nat (+ (+ 'a0 z) (+ z (s z))) z)) -> (= nat (+ (+ 'a0 z) (+ z (s z))) z)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 z) (s z)))) -> ('a2 : (= (+ (+ 'a0 z) (+ z (s z))) z)) -> (= (+ (+ 'a0 z) (+ z (s z))) z)] {",
            "intro x : nat.",
            "intro x0 : (= x (+ (+ x z) (s z))).",
            "intro _ : [('a2 : (= (+ (+ x z) (+ z (s z))) z)) -> (= (+ (+ x z) (+ z (s z))) z)].",
            "}"
        ],
        "logprob": -4.183165558724377,
        "actions": [
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= z (+ (+ z z) (s z)))) -> ('a2 : (= (+ (+ z z) (+ z (s z))) z)) -> (= (+ (s z) (+ z (+ (+ z z) (s z)))) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z (+ (+ z z) (s z)))) -> ('a2 : (= nat (+ (+ z z) (+ z (s z))) z)) -> (= nat (+ (s z) (+ z (+ (+ z z) (s z)))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= 'a0 'a0)) -> ('a5 : nat) -> ('a6 : (= 'a0 z)) -> (= 'a0 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 'a0)) -> ('a5 : nat) -> ('a6 : (= nat 'a0 z)) -> (= nat 'a0 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= 'a0 'a0)) -> ('a5 : nat) -> ('a6 : (= 'a0 z)) -> (= 'a0 'a0)] {",
            "intro x : nat.",
            "intro x0 : (= z x).",
            "intro x1 : (= x x).",
            "intro x2 : (= x x).",
            "intro x3 : (= x x).",
            "intro x4 : nat.",
            "intro _ : [('a6 : (= x z)) -> (= x x)].",
            "}"
        ],
        "logprob": -9.836036674414819,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 z)) -> ('a4 : (= (+ 'a0 'a0) (+ 'a0 'a0))) -> (= (+ 'a0 'a0) (+ (+ 'a0 'a0) (+ 'a0 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0))  -> ('a3 : (= nat 'a0 z)) -> ('a4 : (= nat (+ 'a0 'a0) (+ 'a0 'a0))) -> (= nat (+ 'a0 'a0) (+ (+ 'a0 'a0) (+ 'a0 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= z (+ z z))) -> ('a1 : nat) -> ('a2 : (= 'a1 (+ z (+ z (+ z z))))) -> ('a3 : nat) -> (= z (+ 'a1 (+ z (+ z z))))]",
        "problem_raw": "[ ('a0 :(= nat z (+ z z)) ) -> ('a1 : nat) -> ('a2 : (= nat 'a1 (+ z (+ z (+ z z))))) -> ('a3 : nat) -> (= nat z (+ 'a1 (+ z (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z z)) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ 'a0 (+ z 'a0)))) -> ('a2 : nat) -> ('a3 : (= 'a0 (+ 'a0 (+ z (+ z 'a0))))) -> (= 'a0 (s (+ 'a0 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ 'a0 (+ z 'a0)))) -> ('a2 : nat) -> ('a3 : (= nat 'a0 (+ 'a0 (+ z (+ z 'a0))))) -> (= nat 'a0 (s (+ 'a0 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= z (+ z z))) -> ('a1 : (= (+ (+ (+ z (+ z z)) (+ z z)) (+ z z)) z)) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z (+ z z))))) -> (= z (+ z (+ z z)))]",
        "problem_raw": "[('a0 : (= nat z (+ z z))) -> ('a1 : (= nat (+ (+ (+ z (+ z z)) (+ z z)) (+ z z)) z)) -> ('a2 : nat) -> ('a3 : (= nat z (+ z (+ z (+ z z))))) -> (= nat z (+ z (+ z z)))]",
        "proof": [
            "theorem t : [('a0 : (= z (+ z z))) -> ('a1 : (= (+ (+ (+ z (+ z z)) (+ z z)) (+ z z)) z)) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z (+ z z))))) -> (= z (+ z (+ z z)))] {",
            "intro x : (= z (+ z z)).",
            "intro x0 : (= (+ (+ (+ z (+ z z)) (+ z z)) (+ z z)) z).",
            "intro x1 : nat.",
            "show (= z (+ z (+ z z))) by rewrite.",
            "intro _ : [('a3 : (= z (+ z (+ z (+ z z))))) -> (= z (+ z (+ z z)))].",
            "}"
        ],
        "logprob": -9.040549406366688,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "c rewrite",
            "=> (= z (+ z (+ z z))).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= 'a0 (+ (+ 'a0 z) (+ z 'a0)))) -> (= (+ 'a0 z) (s (+ (+ 'a0 z) z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat 'a0 (+ (+ 'a0 z) (+ z 'a0)))) -> (= nat (+ 'a0 z) (s (+ (+ 'a0 z) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= z (+ (s 'a0) (+ (s 'a0) 'a0)))) -> (= 'a0 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= nat z (+ (s 'a0) (+ (s 'a0) 'a0)))) -> (= nat 'a0 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= z (+ (s 'a0) (+ (s 'a0) 'a0)))) -> (= 'a0 'a0)] {",
            "intro x : nat.",
            "intro x0 : (= x (+ (+ (s x) x) x)).",
            "intro x1 : (= z (+ (s x) (+ (s x) x))).",
            "apply c0014.",
            "}"
        ],
        "logprob": -6.629073786398454,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "a c0014",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= (+ z (+ z z)) z)) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> ('a4 : (= (+ z (+ z z)) (+ z z))) -> ('a5 : nat) -> ('a6 : (= z (+ z z))) -> (= z (+ z (+ z (+ z z))))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (+ z z)) z) ) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= nat z (+ z (+ z z)))) -> ('a4 : (= nat (+ z (+ z z)) (+ z z))) -> ('a5 : nat) -> ('a6 : (= nat z (+ z z))) -> (= nat z (+ z (+ z (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (+ z z)) z) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= (+ z (s z)) (+ z (s z)))) -> ('a1 : (= z (+ (+ z (s (s z))) (s z)))) -> (= (+ (+ (+ z (s (s z))) (s z)) z) (s z))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (s z)) (+ z (s z))) ) -> ('a1 : (= nat z (+ (+ z (s (s z))) (s z)))) -> (= nat (+ (+ (+ z (s (s z))) (s z)) z) (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (s z)) (+ z (s z))) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= (s z) (s z))) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= 'a1 'a1)) -> ('a4 : (= 'a1 'a1)) -> ('a5 : (= 'a1 'a1)) -> (= z (+ 'a1 'a1))]",
        "problem_raw": "[ ('a0 :(= nat (s z) (s z)) ) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= nat 'a1 'a1)) -> ('a4 : (= nat 'a1 'a1)) -> ('a5 : (= nat 'a1 'a1)) -> (= nat z (+ 'a1 'a1))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (s z) (s z)) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 (s (+ (+ 'a0 (s z)) z))) z))) -> (= (+ 'a0 (s z)) (s (+ (+ 'a0 (s (+ (+ 'a0 (s z)) z))) z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 (s (+ (+ 'a0 (s z)) z))) z))) -> (= nat (+ 'a0 (s z)) (s (+ (+ 'a0 (s (+ (+ 'a0 (s z)) z))) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= z (+ z z))) -> ('a1 : (= z (+ (+ (+ z z) (+ z z)) (+ z z)))) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> (= (+ z (+ z z)) (s (+ z (+ z z))))]",
        "problem_raw": "[('a0 : (= nat z (+ z z))) -> ('a1 : (= nat z (+ (+ (+ z z) (+ z z)) (+ z z)))) -> ('a2 : nat) -> ('a3 : (= nat z (+ z (+ z z)))) -> (= nat (+ z (+ z z)) (s (+ z (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (s (+ z z)) (s (+ z z)))) -> ('a2 : (= z (+ (s z) z))) -> ('a3 : (= z (+ z (+ z z)))) -> (= (s (+ z z)) (s (+ z (+ (s z) z))))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (s (+ z z)) (s (+ z z)))) -> ('a2 : (= nat z (+ (s z) z))) -> ('a3 : (= nat z (+ z (+ z z)))) -> (= nat (s (+ z z)) (s (+ z (+ (s z) z))))]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> ('a1 : (= (s (+ z z)) (s (+ z z)))) -> ('a2 : (= z (+ (s z) z))) -> ('a3 : (= z (+ z (+ z z)))) -> (= (s (+ z z)) (s (+ z (+ (s z) z))))] {",
            "intro x : (= z z).",
            "intro x0 : (= (s (+ z z)) (s (+ z z))).",
            "intro x1 : (= z (+ (s z) z)).",
            "show (= (s (+ z z)) (s (+ z (+ (s z) z)))) by rewrite.",
            "intro _ : [('a3 : (= z (+ z (+ z z)))) -> (= (s (+ z z)) (s (+ z (+ (s z) z))))].",
            "}"
        ],
        "logprob": -8.362008109938508,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "c rewrite",
            "=> (= (s (+ z z)) (s (+ z (+ (s z) z)))).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= z (+ 'a0 'a0))) -> (= z (+ 'a0 (+ (+ (s 'a0) 'a0) 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= nat z (+ 'a0 'a0))) -> (= nat z (+ 'a0 (+ (+ (s 'a0) 'a0) 'a0)))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= z (+ 'a0 'a0))) -> (= z (+ 'a0 (+ (+ (s 'a0) 'a0) 'a0)))] {",
            "intro x : nat.",
            "intro x0 : (= x (+ (+ (s x) x) x)).",
            "intro x1 : (= z (+ x x)).",
            "show (= z (+ x (+ (+ (s x) x) x))) by rewrite.",
            "}"
        ],
        "logprob": -7.014472651648192,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "c rewrite",
            "=> (= z (+ x (+ (+ (s x) x) x)))."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ z 'a0))) -> ('a2 : (= z (+ 'a0 (+ z (+ z 'a0))))) -> (= 'a0 z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ z 'a0))) -> ('a2 : (= nat z (+ 'a0 (+ z (+ z 'a0))))) -> (= nat 'a0 z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : nat) -> ('a4 : (= (+ 'a0 'a0) 'a0)) -> ('a5 : (= z (+ z 'a0))) -> (= 'a0 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0))  -> ('a3 : nat) -> ('a4 : (= nat (+ 'a0 'a0) 'a0)) -> ('a5 : (= nat z (+ z 'a0))) -> (= nat 'a0 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : nat) -> ('a4 : (= (+ 'a0 'a0) 'a0)) -> ('a5 : (= z (+ z 'a0))) -> (= 'a0 'a0)] {",
            "intro x : nat.",
            "intro x0 : (= z x).",
            "intro x1 : (= x x).",
            "intro x2 : nat.",
            "intro x3 : (= (+ x x) x).",
            "intro _ : [('a5 : (= z (+ z x))) -> (= x x)].",
            "}"
        ],
        "logprob": -8.361302237042388,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 (+ (+ z 'a0) 'a0))) -> ('a3 : (= (+ 'a0 (s 'a0)) (+ 'a0 (s 'a0)))) -> (= 'a0 (s (+ (+ z 'a0) 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 (+ (+ z 'a0) 'a0))) -> ('a3 : (= nat (+ 'a0 (s 'a0)) (+ 'a0 (s 'a0))))  -> (= nat 'a0 (s (+ (+ z 'a0) 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 (+ (+ z 'a0) 'a0))) -> ('a3 : (= nat (+ 'a0 (s 'a0)) (+ 'a0 (s 'a0)))) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= (+ z 'a0) (+ (s (+ z (s z))) z))) -> ('a2 : nat) -> ('a3 : (= 'a0 (+ (s (+ z (s z))) z))) -> (= (+ z (+ z (s z))) (s z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (+ z 'a0) (+ (s (+ z (s z))) z))) -> ('a2 : nat) -> ('a3 : (= nat 'a0 (+ (s (+ z (s z))) z))) -> (= nat (+ z (+ z (s z))) (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (s (+ z z)) z)) -> ('a2 : nat) -> ('a3 : (= z (+ (+ z 'a2) 'a2))) -> (= (s (+ z (+ (+ z 'a2) 'a2))) z)]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (s (+ z z)) z)) -> ('a2 : nat) -> ('a3 : (= nat z (+ (+ z 'a2) 'a2))) -> (= nat (s (+ z (+ (+ z 'a2) 'a2))) z)]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> ('a1 : (= (s (+ z z)) z)) -> ('a2 : nat) -> ('a3 : (= z (+ (+ z 'a2) 'a2))) -> (= (s (+ z (+ (+ z 'a2) 'a2))) z)] {",
            "intro x : (= z z).",
            "intro x0 : (= (s (+ z z)) z).",
            "intro x1 : nat.",
            "intro x2 : (= z (+ (+ z x1) x1)).",
            "show (= (s (+ z (+ (+ z x1) x1))) z) by rewrite.",
            "}"
        ],
        "logprob": -9.006586974632835,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "c rewrite",
            "=> (= (s (+ z (+ (+ z x1) x1))) z)."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= (+ (+ (+ z z) z) z) (+ (+ (+ z z) z) z))) -> ('a1 : nat) -> ('a2 : (= z (+ (+ z (+ (+ z z) z)) z))) -> (= z (+ (+ (+ (+ (+ z (+ (+ (+ z z) z) z)) 'a1) z) z) z))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ (+ z z) z) z) (+ (+ (+ z z) z) z)) ) -> ('a1 : nat) -> ('a2 : (= nat z (+ (+ z (+ (+ z z) z)) z))) -> (= nat z (+ (+ (+ (+ (+ z (+ (+ (+ z z) z) z)) 'a1) z) z) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ (+ z z) z) z) (+ (+ (+ z z) z) z)) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= z (+ (+ z z) (+ z (+ (+ z z) (+ z z)))))) -> ('a1 : nat) -> ('a2 : (= (s (+ z (+ z z))) z)) -> (= z (s (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z (+ (+ z z) (+ z (+ (+ z z) (+ z z))))) ) -> ('a1 : nat) -> ('a2 : (= nat (s (+ z (+ z z))) z)) -> (= nat z (s (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ (+ z z) (+ z (+ (+ z z) (+ z z))))) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= (+ (+ z z) z) z)) -> ('a1 : (= z (+ (+ z z) (+ (s (+ z z)) z)))) -> (= (+ (+ z z) (+ (s (+ z z)) z)) z)]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z z) z) z) ) -> ('a1 : (= nat z (+ (+ z z) (+ (s (+ z z)) z)))) -> (= nat (+ (+ z z) (+ (s (+ z z)) z)) z)]",
        "proof": [
            "theorem t : [('a0 : (= (+ (+ z z) z) z)) -> ('a1 : (= z (+ (+ z z) (+ (s (+ z z)) z)))) -> (= (+ (+ z z) (+ (s (+ z z)) z)) z)] {",
            "intro x : (= (+ (+ z z) z) z).",
            "intro x0 : (= z (+ (+ z z) (+ (s (+ z z)) z))).",
            "apply c0307.",
            "}"
        ],
        "logprob": -5.951940853838934,
        "actions": [
            "intro.",
            "intro.",
            "a c0307",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z z) z) z) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= (+ (+ 'a0 z) z) (+ z z))) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> (= 'a2 z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (+ (+ 'a0 z) z) (+ z z))) -> ('a2 : nat) -> ('a3 : (= nat z (+ z (+ z z)))) -> (= nat 'a2 z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= z (+ 'a0 (+ z z)))) -> (= (+ z (+ (+ (s 'a0) 'a0) 'a0)) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= nat z (+ 'a0 (+ z z)))) -> (= nat (+ z (+ (+ (s 'a0) 'a0) 'a0)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= (+ z (+ z z)) (+ z (+ z z)))) -> ('a1 : (= z (+ (+ z z) z))) -> ('a2 : (= (+ z (+ z z)) (+ z z))) -> (= (+ z (+ z z)) (+ z (+ (+ z z) z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (+ z z)) (+ z (+ z z))) ) -> ('a1 : (= nat z (+ (+ z z) z))) -> ('a2 : (= nat (+ z (+ z z)) (+ z z))) -> (= nat (+ z (+ z z)) (+ z (+ (+ z z) z)))]",
        "proof": [
            "theorem t : [('a0 : (= (+ z (+ z z)) (+ z (+ z z)))) -> ('a1 : (= z (+ (+ z z) z))) -> ('a2 : (= (+ z (+ z z)) (+ z z))) -> (= (+ z (+ z z)) (+ z (+ (+ z z) z)))] {",
            "intro x : (= (+ z (+ z z)) (+ z (+ z z))).",
            "intro x0 : (= z (+ (+ z z) z)).",
            "intro x1 : (= (+ z (+ z z)) (+ z z)).",
            "show (= (+ z (+ z z)) (+ z (+ (+ z z) z))) by rewrite.",
            "}"
        ],
        "logprob": -7.8516022255752915,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "c rewrite",
            "=> (= (+ z (+ z z)) (+ z (+ (+ z z) z)))."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (+ z z)) (+ z (+ z z))) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= z (+ 'a0 'a0))) -> (= (+ (s 'a0) z) (+ (s 'a0) (s 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= nat z (+ 'a0 'a0))) -> (= nat (+ (s 'a0) z) (+ (s 'a0) (s 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= (+ (s 'a0) 'a0) 'a0)) -> ('a3 : (= 'a0 (+ (s 'a0) (+ (s 'a0) 'a0)))) -> (= 'a0 (+ (s (+ (s 'a0) 'a0)) 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat (+ (s 'a0) 'a0) 'a0)) -> ('a3 : (= nat 'a0 (+ (s 'a0) (+ (s 'a0) 'a0)))) -> (= nat 'a0 (+ (s (+ (s 'a0) 'a0)) 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ 'a0 (s z)))) -> ('a2 : (= z (+ (+ 'a0 z) (s z)))) -> (= (+ (+ 'a0 (+ (+ 'a0 z) (s z))) z) (+ (+ 'a0 (+ (+ 'a0 z) z)) (s z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ 'a0 (s z)))) -> ('a2 : (= nat z (+ (+ 'a0 z) (s z)))) -> (= nat (+ (+ 'a0 (+ (+ 'a0 z) (s z))) z) (+ (+ 'a0 (+ (+ 'a0 z) z)) (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= (+ 'a0 (+ z z)) (+ (s (+ z (s z))) z))) -> (= (+ 'a0 (+ (+ 'a0 (+ z z)) z)) (+ 'a0 (s (+ z (s z)))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (+ 'a0 (+ z z)) (+ (s (+ z (s z))) z))) -> (= nat (+ 'a0 (+ (+ 'a0 (+ z z)) z)) (+ 'a0 (s (+ z (s z)))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= (+ z (+ z z)) (+ z (+ z z)))) -> ('a1 : (= z (+ (+ z z) z))) -> ('a2 : (= (+ z (+ z z)) (+ z (+ z z)))) -> (= z (+ (+ (+ z (+ (+ z z) z)) z) (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (+ z z)) (+ z (+ z z))) ) -> ('a1 : (= nat z (+ (+ z z) z))) -> ('a2 : (= nat (+ z (+ z z)) (+ z (+ z z)))) -> (= nat z (+ (+ (+ z (+ (+ z z) z)) z) (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (+ z z)) (+ z (+ z z))) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= z (+ (+ z (+ (+ (+ z z) z) z)) z))) -> (= (+ (+ (+ (+ (+ z (+ (+ (+ z z) z) z)) z) z) z) z) (+ z z))]",
        "problem_raw": "[('a0 : (= nat z (+ (+ z (+ (+ (+ z z) z) z)) z))) -> (= nat (+ (+ (+ (+ (+ z (+ (+ (+ z z) z) z)) z) z) z) z) (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= 'a0 (+ (+ 'a0 'a0) (s z)))) -> (= (s (+ (+ 'a0 'a0) z)) (s (+ (+ 'a0 'a0) z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= nat 'a0 (+ (+ 'a0 'a0) (s z)))) -> (= nat (s (+ (+ 'a0 'a0) z)) (s (+ (+ 'a0 'a0) z)))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= 'a0 (+ (+ 'a0 'a0) (s z)))) -> (= (s (+ (+ 'a0 'a0) z)) (s (+ (+ 'a0 'a0) z)))] {",
            "intro x : nat.",
            "intro x0 : nat.",
            "intro x1 : nat.",
            "intro x2 : (= x (+ (+ x x) (s z))).",
            "apply c0014.",
            "}"
        ],
        "logprob": -7.650593093067247,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "a c0014",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 z)) -> ('a4 : (= 'a0 'a0)) -> ('a5 : (= (+ 'a0 'a0) 'a0)) -> (= (+ 'a0 'a0) 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0))  -> ('a3 : (= nat 'a0 z)) -> ('a4 : (= nat 'a0 'a0)) -> ('a5 : (= nat (+ 'a0 'a0) 'a0)) -> (= nat (+ 'a0 'a0) 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 z)) -> ('a4 : (= 'a0 'a0)) -> ('a5 : (= (+ 'a0 'a0) 'a0)) -> (= (+ 'a0 'a0) 'a0)] {",
            "intro x : nat.",
            "intro x0 : (= z x).",
            "intro x1 : (= x x).",
            "intro x2 : (= x z).",
            "intro x3 : (= x x).",
            "intro _ : [('a5 : (= (+ x x) x)) -> (= (+ x x) x)].",
            "}"
        ],
        "logprob": -8.427741624797397,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (s (+ z z)) z)) -> ('a2 : (= z (+ (s z) (+ z z)))) -> ('a3 : nat) -> ('a4 : (= z (+ z (+ z z)))) -> (= z (+ z (+ (s z) (+ z z))))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (s (+ z z)) z)) -> ('a2 : (= nat z (+ (s z) (+ z z)))) -> ('a3 : nat) -> ('a4 : (= nat z (+ z (+ z z)))) -> (= nat z (+ z (+ (s z) (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 (s 'a0))) -> (= (+ (+ 'a0 'a0) 'a0) (s 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0))  -> ('a3 : (= nat 'a0 (s 'a0))) -> (= nat (+ (+ 'a0 'a0) 'a0) (s 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= z (s z))) -> ('a1 : (= z (+ (+ z z) (s z)))) -> ('a2 : (= (+ (+ z z) (+ z (s z))) z)) -> (= (+ (+ z z) (+ z (s z))) (s z))]",
        "problem_raw": "[ ('a0 :(= nat z (s z)) ) -> ('a1 : (= nat z (+ (+ z z) (s z)))) -> ('a2 : (= nat (+ (+ z z) (+ z (s z))) z)) -> (= nat (+ (+ z z) (+ z (s z))) (s z))]",
        "proof": [
            "theorem t : [('a0 : (= z (s z))) -> ('a1 : (= z (+ (+ z z) (s z)))) -> ('a2 : (= (+ (+ z z) (+ z (s z))) z)) -> (= (+ (+ z z) (+ z (s z))) (s z))] {",
            "intro x : (= z (s z)).",
            "intro x0 : (= z (+ (+ z z) (s z))).",
            "intro x1 : (= (+ (+ z z) (+ z (s z))) z).",
            "show (= (+ (+ z z) (+ z (s z))) (s z)) by rewrite.",
            "}"
        ],
        "logprob": -7.510740468644464,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "c rewrite",
            "=> (= (+ (+ z z) (+ z (s z))) (s z))."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (s z)) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= z (+ z (+ z z)))) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> ('a4 : (= (+ z (+ z z)) z)) -> (= z (s (+ z (+ z (s z)))))]",
        "problem_raw": "[ ('a0 :(= nat z (+ z (+ z z))) ) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= nat z (+ z (+ z z)))) -> ('a4 : (= nat (+ z (+ z z)) z)) -> (= nat z (s (+ z (+ z (s z)))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z (+ z z))) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= z (+ (s z) (+ z (+ z z))))) -> (= z (+ (s z) (+ z (+ (s z) (+ z (+ z z))))))]",
        "problem_raw": "[ ('a0 :(= nat z (+ (s z) (+ z (+ z z)))) ) -> (= nat z (+ (s z) (+ z (+ (s z) (+ z (+ z z))))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ (s z) (+ z (+ z z)))) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= (+ z z) z)) -> ('a1 : (= (+ z (+ z (+ (s (+ z (s z))) z))) (+ (+ z (+ z z)) z))) -> (= z (s (+ z (+ z (s z)))))]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) z) ) -> ('a1 : (= nat (+ z (+ z (+ (s (+ z (s z))) z))) (+ (+ z (+ z z)) z))) -> (= nat z (s (+ z (+ z (s z)))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) z) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 'a0) (+ z 'a0)))) -> (= 'a0 (+ (+ 'a0 'a0) (s (+ (+ 'a0 (+ (+ 'a0 'a0) (s 'a0))) 'a0))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 'a0) (+ z 'a0)))) -> (= nat 'a0 (+ (+ 'a0 'a0) (s (+ (+ 'a0 (+ (+ 'a0 'a0) (s 'a0))) 'a0))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= z (+ z (+ z z)))) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> ('a4 : (= z (+ z (+ (+ z 'a1) (+ z z))))) -> (= z (+ z (+ (+ z (+ z z)) (s z))))]",
        "problem_raw": "[ ('a0 :(= nat z (+ z (+ z z))) ) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= nat z (+ z (+ z z)))) -> ('a4 : (= nat z (+ z (+ (+ z 'a1) (+ z z))))) -> (= nat z (+ z (+ (+ z (+ z z)) (s z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z (+ z z))) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= (s (+ z (+ z (+ z z)))) (s (+ z (+ z (+ z z)))))) -> ('a1 : (= z (+ z (+ z (+ z z))))) -> (= z (+ z (+ z (s (+ z (+ z (+ z z)))))))]",
        "problem_raw": "[ ('a0 :(= nat (s (+ z (+ z (+ z z)))) (s (+ z (+ z (+ z z))))) ) -> ('a1 : (= nat z (+ z (+ z (+ z z))))) -> (= nat z (+ z (+ z (s (+ z (+ z (+ z z)))))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (s (+ z (+ z (+ z z)))) (s (+ z (+ z (+ z z))))) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= z (+ (s 'a0) (+ (s 'a0) 'a0)))) -> (= z (+ (s (+ (s 'a0) 'a0)) (+ (s 'a0) 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= nat z (+ (s 'a0) (+ (s 'a0) 'a0)))) -> (= nat z (+ (s (+ (s 'a0) 'a0)) (+ (s 'a0) 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> (= 'a0 (+ (s (+ (+ (s 'a0) 'a0) 'a0)) 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> (= nat 'a0 (+ (s (+ (+ (s 'a0) 'a0) 'a0)) 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= (+ z (+ z z)) (+ (+ z (+ z z)) z))) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> (= (+ z (+ z z)) (s (+ z z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (+ z (+ z z)) (+ (+ z (+ z z)) z))) -> ('a2 : nat) -> ('a3 : (= nat z (+ z (+ z z)))) -> (= nat (+ z (+ z z)) (s (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= z (+ (+ z z) (s z)))) -> ('a2 : (= (+ (+ z z) (+ z (s z))) z)) -> (= (+ (+ z z) (+ z (s z))) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z (+ (+ z z) (s z)))) -> ('a2 : (= nat (+ (+ z z) (+ z (s z))) z)) -> (= nat (+ (+ z z) (+ z (s z))) z)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= z (+ (+ z z) (s z)))) -> ('a2 : (= (+ (+ z z) (+ z (s z))) z)) -> (= (+ (+ z z) (+ z (s z))) z)] {",
            "intro x : nat.",
            "intro x0 : (= z (+ (+ z z) (s z))).",
            "intro _ : [('a2 : (= (+ (+ z z) (+ z (s z))) z)) -> (= (+ (+ z z) (+ z (s z))) z)].",
            "}"
        ],
        "logprob": -4.2640493172116605,
        "actions": [
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ z 'a0) (+ (s (+ z (s z))) z)))) -> (= 'a0 (+ (+ z 'a0) (+ (s (+ z (s z))) z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ z 'a0) (+ (s (+ z (s z))) z)))) -> (= nat 'a0 (+ (+ z 'a0) (+ (s (+ z (s z))) z)))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 (+ (+ z 'a0) (+ (s (+ z (s z))) z)))) -> (= 'a0 (+ (+ z 'a0) (+ (s (+ z (s z))) z)))] {",
            "intro x : nat.",
            "intro _ : [('a1 : (= x (+ (+ z x) (+ (s (+ z (s z))) z)))) -> (= x (+ (+ z x) (+ (s (+ z (s z))) z)))].",
            "}"
        ],
        "logprob": -2.8189025538530474,
        "actions": [
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= (+ (+ 'a0 'a0) 'a0) 'a0)) -> ('a3 : (= 'a0 'a0)) -> (= z (+ (+ 'a0 'a0) 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat (+ (+ 'a0 'a0) 'a0) 'a0)) -> ('a3 : (= nat 'a0 'a0))  -> (= nat z (+ (+ 'a0 'a0) 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat (+ (+ 'a0 'a0) 'a0) 'a0)) -> ('a3 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= (+ z z) z)) -> ('a1 : (= z (+ z (+ (+ z (+ z z)) (+ z z))))) -> (= (s z) (s (+ z (+ z z))))]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) z) ) -> ('a1 : (= nat z (+ z (+ (+ z (+ z z)) (+ z z))))) -> (= nat (s z) (s (+ z (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) z) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ z 'a0) (s z)))) -> ('a2 : (= z (+ (+ z 'a0) (s z)))) -> (= 'a0 (+ (+ z (+ (+ z 'a0) (s z))) z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ z 'a0) (s z)))) -> ('a2 : (= nat z (+ (+ z 'a0) (s z)))) -> (= nat 'a0 (+ (+ z (+ (+ z 'a0) (s z))) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= (s (+ 'a0 z)) z)) -> ('a2 : (= z (+ (+ z 'a0) (+ z (+ z z))))) -> ('a3 : (= z (s (+ 'a0 z)))) -> (= z (s (+ 'a0 z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (s (+ 'a0 z)) z)) -> ('a2 : (= nat z (+ (+ z 'a0) (+ z (+ z z))))) -> ('a3 : (= nat z (s (+ 'a0 z))))  -> (= nat z (s (+ 'a0 z)))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= (s (+ 'a0 z)) z)) -> ('a2 : (= z (+ (+ z 'a0) (+ z (+ z z))))) -> ('a3 : (= z (s (+ 'a0 z)))) -> (= z (s (+ 'a0 z)))] {",
            "intro x : nat.",
            "intro x0 : (= (s (+ x z)) z).",
            "intro x1 : (= z (+ (+ z x) (+ z (+ z z)))).",
            "intro _ : [('a3 : (= z (s (+ x z)))) -> (= z (s (+ x z)))].",
            "}"
        ],
        "logprob": -5.140616940188963,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat (s (+ 'a0 z)) z)) -> ('a2 : (= nat z (+ (+ z 'a0) (+ z (+ z z))))) -> ('a3 : (= nat z (s (+ 'a0 z)))) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (s 'a0) 'a0))) -> ('a2 : nat) -> ('a3 : (= 'a0 (+ (s 'a0) (+ (s 'a0) 'a0)))) -> (= (+ (s 'a0) 'a0) 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (s 'a0) 'a0))) -> ('a2 : nat) -> ('a3 : (= nat 'a0 (+ (s 'a0) (+ (s 'a0) 'a0)))) -> (= nat (+ (s 'a0) 'a0) 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 (+ (s 'a0) 'a0))) -> ('a2 : nat) -> ('a3 : (= 'a0 (+ (s 'a0) (+ (s 'a0) 'a0)))) -> (= (+ (s 'a0) 'a0) 'a0)] {",
            "intro x : nat.",
            "intro x0 : (= x (+ (s x) x)).",
            "intro x1 : nat.",
            "show (= (+ (s x) x) x) by eq_symm.",
            "intro _ : [('a3 : (= x (+ (s x) (+ (s x) x)))) -> (= (+ (s x) x) x)].",
            "}"
        ],
        "logprob": -6.074606576989471,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "c eq_symm",
            "=> (= (+ (s x) x) x).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= (+ z z) z)) -> ('a1 : (= (+ z (+ z (+ (s (+ z (s z))) z))) (+ (+ z (+ z z)) z))) -> (= z (+ z (+ z (+ (s (+ z (s z))) z))))]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) z) ) -> ('a1 : (= nat (+ z (+ z (+ (s (+ z (s z))) z))) (+ (+ z (+ z z)) z))) -> (= nat z (+ z (+ z (+ (s (+ z (s z))) z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) z) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= z (+ z (+ z z)))) -> ('a1 : (= (+ (+ z z) (+ z z)) z)) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> (= (+ z (+ z (+ z z))) (s (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z (+ z (+ z z))) ) -> ('a1 : (= nat (+ (+ z z) (+ z z)) z)) -> ('a2 : nat) -> ('a3 : (= nat z (+ z (+ z z)))) -> (= nat (+ z (+ z (+ z z))) (s (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z (+ z z))) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= z (+ (+ z z) (s z)))) -> (= z (+ (+ (+ (+ (+ z z) (s z)) z) (s (+ (+ z z) (s z)))) (s z)))]",
        "problem_raw": "[ ('a0 :(= nat z (+ (+ z z) (s z))) ) -> (= nat z (+ (+ (+ (+ (+ z z) (s z)) z) (s (+ (+ z z) (s z)))) (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ (+ z z) (s z))) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 z) (s z)))) -> ('a2 : (= (+ (+ 'a0 z) (+ z (s z))) z)) -> (= (+ (+ (+ 'a0 z) (+ z (s z))) z) (+ z (s z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 z) (s z)))) -> ('a2 : (= nat (+ (+ 'a0 z) (+ z (s z))) z)) -> (= nat (+ (+ (+ 'a0 z) (+ z (s z))) z) (+ z (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= z (+ (+ z z) z))) -> ('a1 : (= z (+ (+ (+ z z) (+ z z)) z))) -> (= (+ (+ z z) (+ (+ (+ z z) (+ z z)) z)) z)]",
        "problem_raw": "[('a0 : (= nat z (+ (+ z z) z))) -> ('a1 : (= nat z (+ (+ (+ z z) (+ z z)) z))) -> (= nat (+ (+ z z) (+ (+ (+ z z) (+ z z)) z)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= z (+ (+ 'a0 (s z)) (s z)))) -> ('a2 : (= z (+ (+ 'a0 (s z)) (s z)))) -> (= z (+ (+ 'a0 (s (+ (+ 'a0 (s z)) (s z)))) (s z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z (+ (+ 'a0 (s z)) (s z)))) -> ('a2 : (= nat z (+ (+ 'a0 (s z)) (s z))))  -> (= nat z (+ (+ 'a0 (s (+ (+ 'a0 (s z)) (s z)))) (s z)))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= z (+ (+ 'a0 (s z)) (s z)))) -> ('a2 : (= z (+ (+ 'a0 (s z)) (s z)))) -> (= z (+ (+ 'a0 (s (+ (+ 'a0 (s z)) (s z)))) (s z)))] {",
            "intro x : nat.",
            "intro x0 : (= z (+ (+ x (s z)) (s z))).",
            "intro x1 : (= z (+ (+ x (s z)) (s z))).",
            "show (= z (+ (+ x (s (+ (+ x (s z)) (s z)))) (s z))) by rewrite.",
            "}"
        ],
        "logprob": -6.039478025993589,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "c rewrite",
            "=> (= z (+ (+ x (s (+ (+ x (s z)) (s z)))) (s z)))."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat z (+ (+ 'a0 (s z)) (s z)))) -> ('a2 : (= nat z (+ (+ 'a0 (s z)) (s z)))) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 z) (+ z z)))) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= (+ (+ 'a0 z) (+ z 'a0)) 'a0)) -> (= (+ (+ 'a0 z) (+ z (+ (+ 'a0 z) (+ z 'a0)))) 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 z) (+ z z)))) -> ('a2 : (= nat 'a0 'a0))  -> ('a3 : (= nat (+ (+ 'a0 z) (+ z 'a0)) 'a0)) -> (= nat (+ (+ 'a0 z) (+ z (+ (+ 'a0 z) (+ z 'a0)))) 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 z) (+ z z)))) -> ('a2 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= z (+ (+ 'a0 z) (+ z (s (+ z (s z))))))) -> (= z (+ (+ 'a0 (+ (+ 'a0 z) (+ z (s (+ z (s z)))))) (s (s z))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z (+ (+ 'a0 z) (+ z (s (+ z (s z))))))) -> (= nat z (+ (+ 'a0 (+ (+ 'a0 z) (+ z (s (+ z (s z)))))) (s (s z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (s (+ z z)) z)) -> ('a2 : (= z (+ (s z) (+ z z)))) -> ('a3 : nat) -> (= z (+ (s z) (+ z (+ (s z) (+ z z)))))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (s (+ z z)) z)) -> ('a2 : (= nat z (+ (s z) (+ z z)))) -> ('a3 : nat) -> (= nat z (+ (s z) (+ z (+ (s z) (+ z z)))))]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> ('a1 : (= (s (+ z z)) z)) -> ('a2 : (= z (+ (s z) (+ z z)))) -> ('a3 : nat) -> (= z (+ (s z) (+ z (+ (s z) (+ z z)))))] {",
            "intro x : (= z z).",
            "intro x0 : (= (s (+ z z)) z).",
            "intro x1 : (= z (+ (s z) (+ z z))).",
            "show (= z (+ (s z) (+ z (+ (s z) (+ z z))))) by rewrite.",
            "intro _ : [('a3 : nat) -> (= z (+ (s z) (+ z (+ (s z) (+ z z)))))].",
            "}"
        ],
        "logprob": -8.603185635818681,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "c rewrite",
            "=> (= z (+ (s z) (+ z (+ (s z) (+ z z))))).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (s 'a0) 'a0))) -> (= 'a0 (+ (s (+ (s 'a0) 'a0)) 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (s 'a0) 'a0))) -> (= nat 'a0 (+ (s (+ (s 'a0) 'a0)) 'a0))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 (+ (s 'a0) 'a0))) -> (= 'a0 (+ (s (+ (s 'a0) 'a0)) 'a0))] {",
            "intro x : nat.",
            "intro x0 : (= x (+ (s x) x)).",
            "show (= x (+ (s (+ (s x) x)) x)) by rewrite.",
            "}"
        ],
        "logprob": -5.200628666255724,
        "actions": [
            "intro.",
            "intro.",
            "c rewrite",
            "=> (= x (+ (s (+ (s x) x)) x))."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ z 'a0) (+ (s (+ z (s z))) z)))) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 (+ (+ z 'a0) (s z)))) -> (= z (+ (+ z 'a0) (s z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ z 'a0) (+ (s (+ z (s z))) z)))) -> ('a2 : (= nat 'a0 'a0))  -> ('a3 : (= nat 'a0 (+ (+ z 'a0) (s z)))) -> (= nat z (+ (+ z 'a0) (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ z 'a0) (+ (s (+ z (s z))) z)))) -> ('a2 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 (+ (+ z z) z)) z))) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= (+ 'a0 (+ z z)) (+ z (+ z z)))) -> (= (+ 'a0 (+ z z)) (s (+ z z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 (+ (+ z z) z)) z))) -> ('a2 : (= nat 'a0 'a0))  -> ('a3 : (= nat (+ 'a0 (+ z z)) (+ z (+ z z)))) -> (= nat (+ 'a0 (+ z z)) (s (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 (+ (+ z z) z)) z))) -> ('a2 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ z 'a0) (s z)))) -> ('a2 : (= 'a0 (+ (+ z (+ (+ z 'a0) (s z))) (s z)))) -> (= (+ (+ z (s z)) (s z)) 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ z 'a0) (s z)))) -> ('a2 : (= nat 'a0 (+ (+ z (+ (+ z 'a0) (s z))) (s z)))) -> (= nat (+ (+ z (s z)) (s z)) 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= (+ 'a0 'a0) (+ 'a0 (+ (+ (s 'a0) 'a0) 'a0)))) -> (= z (+ (+ (s 'a0) 'a0) 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= nat (+ 'a0 'a0) (+ 'a0 (+ (+ (s 'a0) 'a0) 'a0)))) -> (= nat z (+ (+ (s 'a0) 'a0) 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= z z)) -> ('a1 : nat) -> ('a2 : (= z (+ 'a1 (+ z z)))) -> ('a3 : nat) -> ('a4 : (= 'a1 (+ z (+ z z)))) -> ('a5 : (= z (+ z (+ z z)))) -> (= (+ 'a1 (+ z z)) (s z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : nat) -> ('a2 : (= nat z (+ 'a1 (+ z z)))) -> ('a3 : nat) -> ('a4 : (= nat 'a1 (+ z (+ z z)))) -> ('a5 : (= nat z (+ z (+ z z)))) -> (= nat (+ 'a1 (+ z z)) (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= z 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= 'a0 'a0)) -> ('a5 : (= z 'a0)) -> ('a6 : (= 'a0 'a0)) -> (= 'a0 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 'a0)) -> ('a5 : (= nat z 'a0)) -> ('a6 : (= nat 'a0 'a0))  -> (= nat 'a0 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= z 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= 'a0 'a0)) -> ('a5 : (= z 'a0)) -> ('a6 : (= 'a0 'a0)) -> (= 'a0 'a0)] {",
            "intro x : nat.",
            "intro x0 : (= x z).",
            "intro x1 : (= z x).",
            "intro x2 : (= x x).",
            "intro x3 : (= x x).",
            "intro x4 : (= z x).",
            "intro _ : [('a6 : (= x x)) -> (= x x)].",
            "}"
        ],
        "logprob": -9.517736162184875,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 'a0)) -> ('a5 : (= nat z 'a0)) -> ('a6 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (s (+ z z)) z)) -> ('a2 : (= z (+ (s z) (+ z z)))) -> ('a3 : nat) -> (= (s (+ z (+ (s z) (+ z z)))) (s (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (s (+ z z)) z)) -> ('a2 : (= nat z (+ (s z) (+ z z)))) -> ('a3 : nat) -> (= nat (s (+ z (+ (s z) (+ z z)))) (s (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= (+ z z) (+ z z))) -> ('a1 : (= z (+ (+ (+ z z) z) z))) -> ('a2 : (= z (+ z (+ z z)))) -> (= (+ (+ (+ z (+ z z)) z) z) (+ z z))]",
        "problem_raw": "[('a0 : (= nat (+ z z) (+ z z))) -> ('a1 : (= nat z (+ (+ (+ z z) z) z))) -> ('a2 : (= nat z (+ z (+ z z)))) -> (= nat (+ (+ (+ z (+ z z)) z) z) (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= (+ (+ z 'a0) 'a0) 'a0)) -> ('a3 : (= (+ 'a0 'a0) (+ 'a0 'a0))) -> (= z (+ (+ z 'a0) 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> ('a3 : (= nat (+ 'a0 'a0) (+ 'a0 'a0)))  -> (= nat z (+ (+ z 'a0) 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> ('a3 : (= nat (+ 'a0 'a0) (+ 'a0 'a0))) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= z (+ (+ (s 'a0) 'a0) 'a0))) -> (= (+ (+ (s 'a0) 'a0) 'a0) 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z (+ (+ (s 'a0) 'a0) 'a0))) -> (= nat (+ (+ (s 'a0) 'a0) 'a0) 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 z)) -> ('a3 : (= z (+ 'a0 'a0))) -> ('a4 : (= z (+ 'a0 'a0))) -> (= 'a0 (+ z (+ z 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 z)) -> ('a3 : (= nat z (+ 'a0 'a0))) -> ('a4 : (= nat z (+ 'a0 'a0)))  -> (= nat 'a0 (+ z (+ z 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 z)) -> ('a3 : (= nat z (+ 'a0 'a0))) -> ('a4 : (= nat z (+ 'a0 'a0))) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= z (+ (s z) z))) -> ('a1 : (= z (+ (s z) (+ z z)))) -> (= (s (+ (s z) z)) (s (+ z (+ (s z) (+ z z)))))]",
        "problem_raw": "[ ('a0 :(= nat z (+ (s z) z)) ) -> ('a1 : (= nat z (+ (s z) (+ z z)))) -> (= nat (s (+ (s z) z)) (s (+ z (+ (s z) (+ z z)))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ (s z) z)) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= 'a0 'a0)) -> ('a5 : (= z 'a0)) -> (= 'a0 z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 'a0)) -> ('a5 : (= nat z 'a0))  -> (= nat 'a0 z)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= 'a0 'a0)) -> ('a5 : (= z 'a0)) -> (= 'a0 z)] {",
            "intro x : nat.",
            "intro x0 : (= x z).",
            "intro x1 : (= x x).",
            "intro x2 : (= x x).",
            "intro x3 : (= x x).",
            "intro _ : [('a5 : (= z x)) -> (= x z)].",
            "}"
        ],
        "logprob": -9.27969343063866,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 'a0)) -> ('a5 : (= nat z 'a0)) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ z 'a0) (s z)))) -> ('a2 : (= z (+ (+ z 'a0) (s (+ (+ z 'a0) (s z)))))) -> (= 'a0 (s z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ z 'a0) (s z)))) -> ('a2 : (= nat z (+ (+ z 'a0) (s (+ (+ z 'a0) (s z)))))) -> (= nat 'a0 (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (s 'a0) 'a0))) -> ('a2 : (= (+ (s 'a0) (+ 'a0 'a0)) 'a0)) -> (= 'a0 (+ (s 'a0) (+ 'a0 (+ (s 'a0) 'a0))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (s 'a0) 'a0))) -> ('a2 : (= nat (+ (s 'a0) (+ 'a0 'a0)) 'a0)) -> (= nat 'a0 (+ (s 'a0) (+ 'a0 (+ (s 'a0) 'a0))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ z 'a0) (s z)))) -> ('a2 : (= z (+ (+ z 'a0) (s z)))) -> (= 'a0 z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ z 'a0) (s z)))) -> ('a2 : (= nat z (+ (+ z 'a0) (s z)))) -> (= nat 'a0 z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 z) (s z)))) -> ('a2 : (= (+ (+ 'a0 z) (+ z (s z))) z)) -> (= 'a0 (+ (+ 'a0 z) (s z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 z) (s z)))) -> ('a2 : (= nat (+ (+ 'a0 z) (+ z (s z))) z)) -> (= nat 'a0 (+ (+ 'a0 z) (s z)))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 z) (s z)))) -> ('a2 : (= (+ (+ 'a0 z) (+ z (s z))) z)) -> (= 'a0 (+ (+ 'a0 z) (s z)))] {",
            "intro x : nat.",
            "intro x0 : (= x (+ (+ x z) (s z))).",
            "intro _ : [('a2 : (= (+ (+ x z) (+ z (s z))) z)) -> (= x (+ (+ x z) (s z)))].",
            "}"
        ],
        "logprob": -4.194600978084049,
        "actions": [
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (s 'a0) 'a0))) -> ('a2 : (= z (+ (s 'a0) (+ (s 'a0) 'a0)))) -> ('a3 : (= 'a0 'a0)) -> (= 'a0 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (s 'a0) 'a0))) -> ('a2 : (= nat z (+ (s 'a0) (+ (s 'a0) 'a0)))) -> ('a3 : (= nat 'a0 'a0))  -> (= nat 'a0 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 (+ (s 'a0) 'a0))) -> ('a2 : (= z (+ (s 'a0) (+ (s 'a0) 'a0)))) -> ('a3 : (= 'a0 'a0)) -> (= 'a0 'a0)] {",
            "intro x : nat.",
            "intro x0 : (= x (+ (s x) x)).",
            "intro x1 : (= z (+ (s x) (+ (s x) x))).",
            "intro _ : [('a3 : (= x x)) -> (= x x)].",
            "}"
        ],
        "logprob": -5.45266648662692,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (s 'a0) 'a0))) -> ('a2 : (= nat z (+ (s 'a0) (+ (s 'a0) 'a0)))) -> ('a3 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= (+ 'a0 'a0) (s 'a0))) -> ('a4 : (= (+ (+ 'a0 'a0) (s 'a0)) z)) -> ('a5 : (= (+ (+ 'a0 'a0) (s 'a0)) z)) -> (= (+ (+ 'a0 'a0) (s 'a0)) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= nat (+ 'a0 'a0) (s 'a0))) -> ('a4 : (= nat (+ (+ 'a0 'a0) (s 'a0)) z)) -> ('a5 : (= nat (+ (+ 'a0 'a0) (s 'a0)) z))  -> (= nat (+ (+ 'a0 'a0) (s 'a0)) z)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= (+ 'a0 'a0) (s 'a0))) -> ('a4 : (= (+ (+ 'a0 'a0) (s 'a0)) z)) -> ('a5 : (= (+ (+ 'a0 'a0) (s 'a0)) z)) -> (= (+ (+ 'a0 'a0) (s 'a0)) z)] {",
            "intro x : nat.",
            "intro x0 : (= x (s x)).",
            "intro x1 : (= z (+ (+ x x) (s x))).",
            "intro x2 : (= (+ x x) (s x)).",
            "intro x3 : (= (+ (+ x x) (s x)) z).",
            "intro _ : [('a5 : (= (+ (+ x x) (s x)) z)) -> (= (+ (+ x x) (s x)) z)].",
            "}"
        ],
        "logprob": -6.907228043770483,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= nat (+ 'a0 'a0) (s 'a0))) -> ('a4 : (= nat (+ (+ 'a0 'a0) (s 'a0)) z)) -> ('a5 : (= nat (+ (+ 'a0 'a0) (s 'a0)) z)) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (s 'a0) 'a0))) -> ('a2 : (= z (+ (s 'a0) (+ (s 'a0) z)))) -> (= 'a0 (+ 'a0 (s (+ (s 'a0) 'a0))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (s 'a0) 'a0))) -> ('a2 : (= nat z (+ (s 'a0) (+ (s 'a0) z)))) -> (= nat 'a0 (+ 'a0 (s (+ (s 'a0) 'a0))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= (+ z (+ z z)) (+ z (+ z z)))) -> ('a1 : (= z (+ (+ z z) z))) -> ('a2 : (= z (+ z z))) -> (= (+ z (+ z z)) (s (+ z (+ z z))))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (+ z z)) (+ z (+ z z))) ) -> ('a1 : (= nat z (+ (+ z z) z))) -> ('a2 : (= nat z (+ z z))) -> (= nat (+ z (+ z z)) (s (+ z (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (+ z z)) (+ z (+ z z))) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> (= z (+ (+ (s 'a0) (+ (+ (s 'a0) 'a0) 'a0)) 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> (= nat z (+ (+ (s 'a0) (+ (+ (s 'a0) 'a0) 'a0)) 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= z (+ (+ z (s (+ (+ (+ z (s z)) z) z))) z))) -> (= (+ (+ (+ (+ (+ (+ z (s z)) z) z) (s z)) z) (s z)) (s z))]",
        "problem_raw": "[('a0 : (= nat z (+ (+ z (s (+ (+ (+ z (s z)) z) z))) z))) -> (= nat (+ (+ (+ (+ (+ (+ z (s z)) z) z) (s z)) z) (s z)) (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= (+ 'a0 'a0) 'a0)) -> ('a3 : (= (+ (+ 'a0 'a0) (+ 'a0 'a0)) 'a0)) -> (= (+ z (+ z 'a0)) (+ z (+ 'a0 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= nat (+ 'a0 'a0) 'a0)) -> ('a3 : (= nat (+ (+ 'a0 'a0) (+ 'a0 'a0)) 'a0)) -> (= nat (+ z (+ z 'a0)) (+ z (+ 'a0 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (s 'a0) 'a0))) -> ('a2 : (= z (+ (s 'a0) (+ (s 'a0) 'a0)))) -> (= 'a0 (+ z (+ (s 'a0) 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (s 'a0) 'a0))) -> ('a2 : (= nat z (+ (s 'a0) (+ (s 'a0) 'a0)))) -> (= nat 'a0 (+ z (+ (s 'a0) 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= (s (+ (+ (s 'a0) 'a0) 'a0)) 'a0)) -> ('a3 : (= (s (+ z (+ (s 'a0) 'a0))) (s (+ z (+ (s 'a0) 'a0))))) -> (= (s (+ z (+ (s 'a0) 'a0))) (s (+ z (+ (s 'a0) 'a0))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= nat (s (+ (+ (s 'a0) 'a0) 'a0)) 'a0)) -> ('a3 : (= nat (s (+ z (+ (s 'a0) 'a0))) (s (+ z (+ (s 'a0) 'a0)))))  -> (= nat (s (+ z (+ (s 'a0) 'a0))) (s (+ z (+ (s 'a0) 'a0))))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= (s (+ (+ (s 'a0) 'a0) 'a0)) 'a0)) -> ('a3 : (= (s (+ z (+ (s 'a0) 'a0))) (s (+ z (+ (s 'a0) 'a0))))) -> (= (s (+ z (+ (s 'a0) 'a0))) (s (+ z (+ (s 'a0) 'a0))))] {",
            "intro x : nat.",
            "intro x0 : (= x (+ (+ (s x) x) x)).",
            "intro x1 : (= (s (+ (+ (s x) x) x)) x).",
            "intro _ : [('a3 : (= (s (+ z (+ (s x) x))) (s (+ z (+ (s x) x))))) -> (= (s (+ z (+ (s x) x))) (s (+ z (+ (s x) x))))].",
            "}"
        ],
        "logprob": -4.8160352698818905,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= nat (s (+ (+ (s 'a0) 'a0) 'a0)) 'a0)) -> ('a3 : (= nat (s (+ z (+ (s 'a0) 'a0))) (s (+ z (+ (s 'a0) 'a0))))) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ z 'a0) (+ (s (+ z (s z))) z)))) -> (= 'a0 (+ (+ z (+ (+ z 'a0) (+ (s (+ z (s z))) z))) (+ z 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ z 'a0) (+ (s (+ z (s z))) z)))) -> (= nat 'a0 (+ (+ z (+ (+ z 'a0) (+ (s (+ z (s z))) z))) (+ z 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= z (+ z z))) -> ('a1 : (= z (+ (+ (+ z z) (+ z z)) (+ z z)))) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> (= (+ z z) (+ z (+ z (+ z z))))]",
        "problem_raw": "[ ('a0 :(= nat z (+ z z)) ) -> ('a1 : (= nat z (+ (+ (+ z z) (+ z z)) (+ z z)))) -> ('a2 : nat) -> ('a3 : (= nat z (+ z (+ z z)))) -> (= nat (+ z z) (+ z (+ z (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z z)) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= (s z) (s z))) -> ('a1 : nat) -> ('a2 : (= 'a1 (+ (+ 'a1 'a1) 'a1))) -> ('a3 : (= 'a1 'a1)) -> (= (s z) (+ (+ 'a1 'a1) 'a1))]",
        "problem_raw": "[ ('a0 :(= nat (s z) (s z)) ) -> ('a1 : nat) -> ('a2 : (= nat 'a1 (+ (+ 'a1 'a1) 'a1))) -> ('a3 : (= nat 'a1 'a1)) -> (= nat (s z) (+ (+ 'a1 'a1) 'a1))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (s z) (s z)) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= (+ (+ z 'a0) z) 'a0)) -> ('a2 : nat) -> ('a3 : (= (+ (+ z 'a0) 'a0) 'a0)) -> (= 'a0 (+ (s 'a0) (+ (s 'a0) 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (+ (+ z 'a0) z) 'a0)) -> ('a2 : nat) -> ('a3 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> (= nat 'a0 (+ (s 'a0) (+ (s 'a0) 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ z 'a0) (+ (s (+ z (s z))) z)))) -> (= 'a0 (+ (+ z (+ (+ z 'a0) (+ (s (+ z (s z))) z))) (s z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ z 'a0) (+ (s (+ z (s z))) z)))) -> (= nat 'a0 (+ (+ z (+ (+ z 'a0) (+ (s (+ z (s z))) z))) (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 'a0) (+ z 'a0)))) -> (= (+ 'a0 (s (+ (+ 'a0 'a0) (s 'a0)))) (s (+ (+ 'a0 'a0) (s 'a0))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 'a0) (+ z 'a0)))) -> (= nat (+ 'a0 (s (+ (+ 'a0 'a0) (s 'a0)))) (s (+ (+ 'a0 'a0) (s 'a0))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (s (+ z z)) z)) -> ('a2 : (= z (+ (s z) (+ z z)))) -> (= (s (+ z z)) (s (+ z (+ (s z) (+ z z)))))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (s (+ z z)) z)) -> ('a2 : (= nat z (+ (s z) (+ z z)))) -> (= nat (s (+ z z)) (s (+ z (+ (s z) (+ z z)))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ z 'a0) (+ (s (+ z (s z))) z)))) -> (= 'a0 (+ (+ z (+ (+ z 'a0) (+ (s (+ z (s z))) z))) (+ (s (+ z (s z))) z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ z 'a0) (+ (s (+ z (s z))) z)))) -> (= nat 'a0 (+ (+ z (+ (+ z 'a0) (+ (s (+ z (s z))) z))) (+ (s (+ z (s z))) z)))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 (+ (+ z 'a0) (+ (s (+ z (s z))) z)))) -> (= 'a0 (+ (+ z (+ (+ z 'a0) (+ (s (+ z (s z))) z))) (+ (s (+ z (s z))) z)))] {",
            "intro x : nat.",
            "intro x0 : (= x (+ (+ z x) (+ (s (+ z (s z))) z))).",
            "show (= x (+ (+ z (+ (+ z x) (+ (s (+ z (s z))) z))) (+ (s (+ z (s z))) z))) by rewrite.",
            "}"
        ],
        "logprob": -4.91574420903938,
        "actions": [
            "intro.",
            "intro.",
            "c rewrite",
            "=> (= x (+ (+ z (+ (+ z x) (+ (s (+ z (s z))) z))) (+ (s (+ z (s z))) z)))."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= z (+ (+ 'a0 z) (+ z z)))) -> (= 'a0 (+ 'a0 (+ (+ 'a0 z) (+ z z))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z (+ (+ 'a0 z) (+ z z)))) -> (= nat 'a0 (+ 'a0 (+ (+ 'a0 z) (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= z 'a0)) -> ('a3 : (= z (+ (+ z 'a0) (s z)))) -> ('a4 : (= z (+ (+ z 'a0) (s z)))) -> (= z (+ (+ z 'a0) (s z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat z (+ (+ z 'a0) (s z)))) -> ('a4 : (= nat z (+ (+ z 'a0) (s z))))  -> (= nat z (+ (+ z 'a0) (s z)))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= z 'a0)) -> ('a3 : (= z (+ (+ z 'a0) (s z)))) -> ('a4 : (= z (+ (+ z 'a0) (s z)))) -> (= z (+ (+ z 'a0) (s z)))] {",
            "intro x : nat.",
            "intro x0 : (= x x).",
            "intro x1 : (= z x).",
            "intro x2 : (= z (+ (+ z x) (s z))).",
            "intro _ : [('a4 : (= z (+ (+ z x) (s z)))) -> (= z (+ (+ z x) (s z)))].",
            "}"
        ],
        "logprob": -6.429121899770462,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat z (+ (+ z 'a0) (s z)))) -> ('a4 : (= nat z (+ (+ z 'a0) (s z)))) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ z (+ z (+ (+ z z) (+ z z)))))) -> ('a2 : (= z (+ z (+ z (+ z z))))) -> (= (+ z (+ z (+ (+ z z) (+ z z)))) z)]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z (+ z (+ z (+ (+ z z) (+ z z)))))) -> ('a2 : (= nat z (+ z (+ z (+ z z))))) -> (= nat (+ z (+ z (+ (+ z z) (+ z z)))) z)]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> ('a1 : (= z (+ z (+ z (+ (+ z z) (+ z z)))))) -> ('a2 : (= z (+ z (+ z (+ z z))))) -> (= (+ z (+ z (+ (+ z z) (+ z z)))) z)] {",
            "intro x : (= z z).",
            "intro x0 : (= z (+ z (+ z (+ (+ z z) (+ z z))))).",
            "show (= (+ z (+ z (+ (+ z z) (+ z z)))) z) by eq_symm.",
            "intro _ : [('a2 : (= z (+ z (+ z (+ z z))))) -> (= (+ z (+ z (+ (+ z z) (+ z z)))) z)].",
            "}"
        ],
        "logprob": -5.15954839314239,
        "actions": [
            "intro.",
            "intro.",
            "c eq_symm",
            "=> (= (+ z (+ z (+ (+ z z) (+ z z)))) z).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (s (+ z (+ z z))) z)) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> ('a4 : (= (+ z (+ z z)) z)) -> (= (+ z (+ (+ 'a2 (+ z z)) z)) z)]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (s (+ z (+ z z))) z)) -> ('a2 : nat) -> ('a3 : (= nat z (+ z (+ z z)))) -> ('a4 : (= nat (+ z (+ z z)) z)) -> (= nat (+ z (+ (+ 'a2 (+ z z)) z)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= z (+ (+ z (+ (+ (+ z z) z) (+ z z))) z))) -> (= z (+ (+ z (+ (+ (+ (+ (+ z z) z) z) (+ z z)) z)) (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z (+ (+ z (+ (+ (+ z z) z) (+ z z))) z)) ) -> (= nat z (+ (+ z (+ (+ (+ (+ (+ z z) z) z) (+ z z)) z)) (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ (+ z (+ (+ (+ z z) z) (+ z z))) z)) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= (+ z 'a0) (+ z 'a0))) -> ('a3 : (= 'a0 (s z))) -> ('a4 : (= 'a0 'a0)) -> ('a5 : (= 'a0 (s z))) -> (= z (+ (+ 'a0 'a0) (s z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat (+ z 'a0) (+ z 'a0)))  -> ('a3 : (= nat 'a0 (s z))) -> ('a4 : (= nat 'a0 'a0)) -> ('a5 : (= nat 'a0 (s z))) -> (= nat z (+ (+ 'a0 'a0) (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat (+ z 'a0) (+ z 'a0))) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 z) (s z)))) -> ('a2 : (= (+ (+ 'a0 z) (+ z (s z))) z)) -> (= 'a0 (+ (+ 'a0 z) (+ z (s z))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 z) (s z)))) -> ('a2 : (= nat (+ (+ 'a0 z) (+ z (s z))) z)) -> (= nat 'a0 (+ (+ 'a0 z) (+ z (s z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= z 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= 'a0 'a0)) -> ('a5 : (= 'a0 'a0)) -> (= (s (+ 'a0 'a0)) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 'a0))  -> ('a5 : (= nat 'a0 'a0)) -> (= nat (s (+ 'a0 'a0)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= (+ (+ z z) z) (+ (+ z z) z))) -> (= z (+ (+ z (+ (+ z z) z)) z))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z z) z) (+ (+ z z) z)) ) -> (= nat z (+ (+ z (+ (+ z z) z)) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z z) z) (+ (+ z z) z)) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 z)) -> ('a3 : (= z (+ 'a0 'a0))) -> ('a4 : (= z (+ 'a0 'a0))) -> (= 'a0 (s z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 z)) -> ('a3 : (= nat z (+ 'a0 'a0))) -> ('a4 : (= nat z (+ 'a0 'a0)))  -> (= nat 'a0 (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 z)) -> ('a3 : (= nat z (+ 'a0 'a0))) -> ('a4 : (= nat z (+ 'a0 'a0))) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 z) (+ z 'a0)))) -> ('a2 : (= 'a0 (+ (+ 'a0 z) (+ z (+ (+ 'a0 z) (+ z 'a0)))))) -> ('a3 : (= 'a0 (+ (+ 'a0 z) (+ z (+ (+ 'a0 z) (+ z 'a0)))))) -> (= 'a0 (+ (+ 'a0 z) (+ z (+ (+ 'a0 z) (+ z 'a0)))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 z) (+ z 'a0)))) -> ('a2 : (= nat 'a0 (+ (+ 'a0 z) (+ z (+ (+ 'a0 z) (+ z 'a0)))))) -> ('a3 : (= nat 'a0 (+ (+ 'a0 z) (+ z (+ (+ 'a0 z) (+ z 'a0))))))  -> (= nat 'a0 (+ (+ 'a0 z) (+ z (+ (+ 'a0 z) (+ z 'a0)))))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 z) (+ z 'a0)))) -> ('a2 : (= 'a0 (+ (+ 'a0 z) (+ z (+ (+ 'a0 z) (+ z 'a0)))))) -> ('a3 : (= 'a0 (+ (+ 'a0 z) (+ z (+ (+ 'a0 z) (+ z 'a0)))))) -> (= 'a0 (+ (+ 'a0 z) (+ z (+ (+ 'a0 z) (+ z 'a0)))))] {",
            "intro x : nat.",
            "intro x0 : (= x (+ (+ x z) (+ z x))).",
            "intro x1 : (= x (+ (+ x z) (+ z (+ (+ x z) (+ z x))))).",
            "intro _ : [('a3 : (= x (+ (+ x z) (+ z (+ (+ x z) (+ z x)))))) -> (= x (+ (+ x z) (+ z (+ (+ x z) (+ z x)))))].",
            "}"
        ],
        "logprob": -5.411045219569286,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 z) (+ z 'a0)))) -> ('a2 : (= nat 'a0 (+ (+ 'a0 z) (+ z (+ (+ 'a0 z) (+ z 'a0)))))) -> ('a3 : (= nat 'a0 (+ (+ 'a0 z) (+ z (+ (+ 'a0 z) (+ z 'a0)))))) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= (+ (s (+ z z)) z) (+ (s (+ z z)) z))) -> ('a1 : nat) -> ('a2 : (= z (+ (s z) (+ z (+ z z))))) -> (= (+ (s z) (+ z (+ z z))) z)]",
        "problem_raw": "[ ('a0 :(= nat (+ (s (+ z z)) z) (+ (s (+ z z)) z)) ) -> ('a1 : nat) -> ('a2 : (= nat z (+ (s z) (+ z (+ z z))))) -> (= nat (+ (s z) (+ z (+ z z))) z)]",
        "proof": [
            "theorem t : [('a0 : (= (+ (s (+ z z)) z) (+ (s (+ z z)) z))) -> ('a1 : nat) -> ('a2 : (= z (+ (s z) (+ z (+ z z))))) -> (= (+ (s z) (+ z (+ z z))) z)] {",
            "intro x : (= (+ (s (+ z z)) z) (+ (s (+ z z)) z)).",
            "intro x0 : nat.",
            "intro x1 : (= z (+ (s z) (+ z (+ z z)))).",
            "apply c0307.",
            "}"
        ],
        "logprob": -7.077127192886875,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "a c0307",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (s (+ z z)) z) (+ (s (+ z z)) z)) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ z 'a0) (s z)))) -> ('a2 : (= z (+ (+ z 'a0) (s z)))) -> (= z (s (+ (+ z 'a0) z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ z 'a0) (s z)))) -> ('a2 : (= nat z (+ (+ z 'a0) (s z)))) -> (= nat z (s (+ (+ z 'a0) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= (+ 'a0 (+ 'a0 'a0)) (+ 'a0 (+ 'a0 'a0)))) -> (= 'a0 (+ 'a0 (+ (+ 'a0 (+ 'a0 'a0)) z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (+ 'a0 (+ 'a0 'a0)) (+ 'a0 (+ 'a0 'a0))))  -> (= nat 'a0 (+ 'a0 (+ (+ 'a0 (+ 'a0 'a0)) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat (+ 'a0 (+ 'a0 'a0)) (+ 'a0 (+ 'a0 'a0)))) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= 'a0 (+ (+ 'a0 z) (s z)))) -> ('a3 : (= 'a0 (+ (+ 'a0 z) (s z)))) -> (= z (+ (+ (+ (+ 'a0 z) (s z)) z) (s z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : nat) -> ('a2 : (= nat 'a0 (+ (+ 'a0 z) (s z)))) -> ('a3 : (= nat 'a0 (+ (+ 'a0 z) (s z)))) -> (= nat z (+ (+ (+ (+ 'a0 z) (s z)) z) (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= 'a0 (+ (+ (s 'a0) (+ (+ (s 'a0) 'a0) 'a0)) 'a0))) -> (= (+ 'a0 (+ 'a0 'a0)) 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= nat 'a0 (+ (+ (s 'a0) (+ (+ (s 'a0) 'a0) 'a0)) 'a0)))  -> (= nat (+ 'a0 (+ 'a0 'a0)) 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= nat 'a0 (+ (+ (s 'a0) (+ (+ (s 'a0) 'a0) 'a0)) 'a0))) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= (+ z z) (+ z z))) -> ('a1 : (= (+ (+ z (+ z z)) (+ (s (+ z z)) z)) (+ z z))) -> (= (+ (+ z (+ z z)) z) (s z))]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) (+ z z)) ) -> ('a1 : (= nat (+ (+ z (+ z z)) (+ (s (+ z z)) z)) (+ z z))) -> (= nat (+ (+ z (+ z z)) z) (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) (+ z z)) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= z 'a0)) -> ('a3 : nat) -> ('a4 : (= (+ 'a0 'a0) 'a0)) -> ('a5 : nat) -> (= 'a0 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) -> ('a3 : nat) -> ('a4 : (= nat (+ 'a0 'a0) 'a0)) -> ('a5 : nat) -> (= nat 'a0 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> (= z (+ (+ (s (+ (+ (s 'a0) (+ (+ (s 'a0) 'a0) 'a0)) 'a0)) 'a0) (+ (+ (s 'a0) 'a0) 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> (= nat z (+ (+ (s (+ (+ (s 'a0) (+ (+ (s 'a0) 'a0) 'a0)) 'a0)) 'a0) (+ (+ (s 'a0) 'a0) 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= z (+ (+ z z) z))) -> ('a1 : (= z (+ z (+ z (+ (s (+ z (s z))) z))))) -> (= z (+ (+ (+ z (+ z (+ (s (+ z (s z))) z))) z) z))]",
        "problem_raw": "[('a0 : (= nat z (+ (+ z z) z))) -> ('a1 : (= nat z (+ z (+ z (+ (s (+ z (s z))) z))))) -> (= nat z (+ (+ (+ z (+ z (+ (s (+ z (s z))) z))) z) z))]",
        "proof": [
            "theorem t : [('a0 : (= z (+ (+ z z) z))) -> ('a1 : (= z (+ z (+ z (+ (s (+ z (s z))) z))))) -> (= z (+ (+ (+ z (+ z (+ (s (+ z (s z))) z))) z) z))] {",
            "intro x : (= z (+ (+ z z) z)).",
            "intro x0 : (= z (+ z (+ z (+ (s (+ z (s z))) z)))).",
            "show (= z (+ (+ (+ z (+ z (+ (s (+ z (s z))) z))) z) z)) by rewrite.",
            "}"
        ],
        "logprob": -6.571021201563751,
        "actions": [
            "intro.",
            "intro.",
            "c rewrite",
            "=> (= z (+ (+ (+ z (+ z (+ (s (+ z (s z))) z))) z) z))."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ z 'a0) (+ (s (+ z (s z))) z)))) -> (= (+ 'a0 (+ 'a0 'a0)) (s (+ 'a0 (+ (+ z 'a0) (+ (s (+ z (s z))) z)))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ z 'a0) (+ (s (+ z (s z))) z)))) -> (= nat (+ 'a0 (+ 'a0 'a0)) (s (+ 'a0 (+ (+ z 'a0) (+ (s (+ z (s z))) z)))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ z 'a0) (+ (s (+ z 'a0)) z)))) -> (= 'a0 (+ z (+ (s (+ z 'a0)) z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ z 'a0) (+ (s (+ z 'a0)) z)))) -> (= nat 'a0 (+ z (+ (s (+ z 'a0)) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= (+ (+ z 'a0) 'a0) 'a0)) -> ('a4 : (= 'a0 'a0)) -> ('a5 : (= 'a0 'a0)) -> (= (+ (+ 'a0 'a0) 'a0) 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> ('a4 : (= nat 'a0 'a0))  -> ('a5 : (= nat 'a0 'a0)) -> (= nat (+ (+ 'a0 'a0) 'a0) 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> ('a4 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (s (+ z z)) (s (+ z z)))) -> ('a2 : (= z (+ (s z) z))) -> ('a3 : (= z (+ z (+ z z)))) -> (= (+ (s z) z) (+ z (+ z (+ (s z) z))))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (s (+ z z)) (s (+ z z)))) -> ('a2 : (= nat z (+ (s z) z))) -> ('a3 : (= nat z (+ z (+ z z)))) -> (= nat (+ (s z) z) (+ z (+ z (+ (s z) z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= (+ (+ z 'a0) 'a0) (+ (+ z 'a0) 'a0))) -> (= 'a0 (s (+ 'a0 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat (+ (+ z 'a0) 'a0) (+ (+ z 'a0) 'a0)))  -> (= nat 'a0 (s (+ 'a0 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat (+ (+ z 'a0) 'a0) (+ (+ z 'a0) 'a0))) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 (s (+ (+ (+ 'a0 (s z)) z) z))) 'a0))) -> (= 'a0 (+ 'a0 (s (+ (+ (+ 'a0 (s z)) z) z))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 (s (+ (+ (+ 'a0 (s z)) z) z))) 'a0))) -> (= nat 'a0 (+ 'a0 (s (+ (+ (+ 'a0 (s z)) z) z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 z) (+ z (s (+ z (s z))))))) -> (= (+ 'a0 (+ (+ 'a0 z) (+ z (s (+ z (s z)))))) 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 z) (+ z (s (+ z (s z))))))) -> (= nat (+ 'a0 (+ (+ 'a0 z) (+ z (s (+ z (s z)))))) 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 7,
        "problem": "[('a0 : (= z (s (+ z (+ z (+ z z)))))) -> ('a1 : nat) -> ('a2 : (= z (+ z (+ z (+ z z))))) -> ('a3 : nat) -> (= (s (+ z (+ z (+ z z)))) z)]",
        "problem_raw": "[ ('a0 :(= nat z (s (+ z (+ z (+ z z))))) ) -> ('a1 : nat) -> ('a2 : (= nat z (+ z (+ z (+ z z))))) -> ('a3 : nat) -> (= nat (s (+ z (+ z (+ z z)))) z)]",
        "proof": [
            "theorem t : [('a0 : (= z (s (+ z (+ z (+ z z)))))) -> ('a1 : nat) -> ('a2 : (= z (+ z (+ z (+ z z))))) -> ('a3 : nat) -> (= (s (+ z (+ z (+ z z)))) z)] {",
            "intro x : (= z (s (+ z (+ z (+ z z))))).",
            "intro x0 : nat.",
            "intro x1 : (= z (+ z (+ z (+ z z)))).",
            "show (= (s (+ z (+ z (+ z z)))) z) by eq_symm.",
            "intro _ : [('a3 : nat) -> (= (s (+ z (+ z (+ z z)))) z)].",
            "}"
        ],
        "logprob": -7.776916055493691,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "c eq_symm",
            "=> (= (s (+ z (+ z (+ z z)))) z).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (s (+ z (+ z (+ z z))))) "
    },
    {
        "iteration": 7,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 z) (s z)))) -> ('a2 : (= 'a0 (+ (+ 'a0 z) (s (+ (+ 'a0 z) (s z)))))) -> (= (+ (+ 'a0 z) (s (+ (+ 'a0 z) z))) 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 z) (s z)))) -> ('a2 : (= nat 'a0 (+ (+ 'a0 z) (s (+ (+ 'a0 z) (s z)))))) -> (= nat (+ (+ 'a0 z) (s (+ (+ 'a0 z) z))) 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ z (+ z (+ (+ z z) (+ z z)))))) -> ('a2 : (= z (+ z (+ z z)))) -> (= z (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z (+ z (+ z (+ (+ z z) (+ z z)))))) -> ('a2 : (= nat z (+ z (+ z z)))) -> (= nat z (+ z (+ z z)))]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> ('a1 : (= z (+ z (+ z (+ (+ z z) (+ z z)))))) -> ('a2 : (= z (+ z (+ z z)))) -> (= z (+ z (+ z z)))] {",
            "intro x : (= z z).",
            "intro x0 : (= z (+ z (+ z (+ (+ z z) (+ z z))))).",
            "intro _ : [('a2 : (= z (+ z (+ z z)))) -> (= z (+ z (+ z z)))].",
            "}"
        ],
        "logprob": -2.8716538179392477,
        "actions": [
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= (+ (+ z 'a0) 'a0) 'a0)) -> ('a4 : (= (+ (+ z 'a0) 'a0) 'a0)) -> (= (+ (+ z 'a0) 'a0) 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> ('a4 : (= nat (+ (+ z 'a0) 'a0) 'a0))  -> (= nat (+ (+ z 'a0) 'a0) 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= (+ (+ z 'a0) 'a0) 'a0)) -> ('a4 : (= (+ (+ z 'a0) 'a0) 'a0)) -> (= (+ (+ z 'a0) 'a0) 'a0)] {",
            "intro x : nat.",
            "intro x0 : (= z x).",
            "intro x1 : (= x x).",
            "intro x2 : (= (+ (+ z x) x) x).",
            "intro _ : [('a4 : (= (+ (+ z x) x) x)) -> (= (+ (+ z x) x) x)].",
            "}"
        ],
        "logprob": -3.5636200804300073,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> ('a4 : (= nat (+ (+ z 'a0) 'a0) 'a0)) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 z) (+ z z)))) -> (= (s (+ (+ 'a0 z) (+ z z))) (s (+ (+ 'a0 z) (+ z z))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 z) (+ z z)))) -> (= nat (s (+ (+ 'a0 z) (+ z z))) (s (+ (+ 'a0 z) (+ z z))))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 z) (+ z z)))) -> (= (s (+ (+ 'a0 z) (+ z z))) (s (+ (+ 'a0 z) (+ z z))))] {",
            "intro x : nat.",
            "intro x0 : (= x (+ (+ x z) (+ z z))).",
            "apply c0014.",
            "}"
        ],
        "logprob": -4.177155630993018,
        "actions": [
            "intro.",
            "intro.",
            "a c0014",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= 'a0 (+ (s 'a0) (+ (s (+ (+ (s 'a0) 'a0) 'a0)) 'a0)))) -> (= 'a0 (+ (s 'a0) (+ (s (+ (+ (s 'a0) 'a0) 'a0)) 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= nat 'a0 (+ (s 'a0) (+ (s (+ (+ (s 'a0) 'a0) 'a0)) 'a0)))) -> (= nat 'a0 (+ (s 'a0) (+ (s (+ (+ (s 'a0) 'a0) 'a0)) 'a0)))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= 'a0 (+ (s 'a0) (+ (s (+ (+ (s 'a0) 'a0) 'a0)) 'a0)))) -> (= 'a0 (+ (s 'a0) (+ (s (+ (+ (s 'a0) 'a0) 'a0)) 'a0)))] {",
            "intro x : nat.",
            "intro x0 : (= x (+ (+ (s x) x) x)).",
            "intro _ : [('a2 : (= x (+ (s x) (+ (s (+ (+ (s x) x) x)) x)))) -> (= x (+ (s x) (+ (s (+ (+ (s x) x) x)) x)))].",
            "}"
        ],
        "logprob": -2.7279276964855237,
        "actions": [
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= (s (+ z (+ z z))) (s (+ z (+ z z))))) -> ('a1 : (= z (+ z (+ z z)))) -> ('a2 : (= z (+ z (+ z z)))) -> (= z (+ z (+ z (+ z (+ z z)))))]",
        "problem_raw": "[ ('a0 :(= nat (s (+ z (+ z z))) (s (+ z (+ z z)))) ) -> ('a1 : (= nat z (+ z (+ z z)))) -> ('a2 : (= nat z (+ z (+ z z)))) -> (= nat z (+ z (+ z (+ z (+ z z)))))]",
        "proof": [
            "theorem t : [('a0 : (= (s (+ z (+ z z))) (s (+ z (+ z z))))) -> ('a1 : (= z (+ z (+ z z)))) -> ('a2 : (= z (+ z (+ z z)))) -> (= z (+ z (+ z (+ z (+ z z)))))] {",
            "intro x : (= (s (+ z (+ z z))) (s (+ z (+ z z)))).",
            "intro x0 : (= z (+ z (+ z z))).",
            "show (= z (+ z (+ z (+ z (+ z z))))) by rewrite.",
            "intro _ : [('a2 : (= z (+ z (+ z z)))) -> (= z (+ z (+ z (+ z (+ z z)))))].",
            "}"
        ],
        "logprob": -6.882520057537692,
        "actions": [
            "intro.",
            "intro.",
            "c rewrite",
            "=> (= z (+ z (+ z (+ z (+ z z))))).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (s (+ z (+ z z))) (s (+ z (+ z z)))) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= (+ (+ 'a0 'a0) 'a0) (s 'a0))) -> (= (+ (+ 'a0 'a0) 'a0) (s 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat (+ (+ 'a0 'a0) 'a0) (s 'a0))) -> (= nat (+ (+ 'a0 'a0) 'a0) (s 'a0))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= (+ (+ 'a0 'a0) 'a0) (s 'a0))) -> (= (+ (+ 'a0 'a0) 'a0) (s 'a0))] {",
            "intro x : nat.",
            "intro x0 : (= x (s x)).",
            "intro _ : [('a2 : (= (+ (+ x x) x) (s x))) -> (= (+ (+ x x) x) (s x))].",
            "}"
        ],
        "logprob": -2.2409155181683187,
        "actions": [
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= (+ (+ z 'a0) 'a0) (+ (+ z 'a0) 'a0))) -> (= z (+ z (+ (+ z 'a0) 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat (+ (+ z 'a0) 'a0) (+ (+ z 'a0) 'a0)))  -> (= nat z (+ z (+ (+ z 'a0) 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat (+ (+ z 'a0) 'a0) (+ (+ z 'a0) 'a0))) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= z (+ 'a0 'a0))) -> ('a4 : (= (+ 'a0 'a0) 'a0)) -> ('a5 : (= z (+ 'a0 'a0))) -> ('a6 : (= z (+ 'a0 'a0))) -> (= z (+ 'a0 (+ z 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat z (+ 'a0 'a0))) -> ('a4 : (= nat (+ 'a0 'a0) 'a0)) -> ('a5 : (= nat z (+ 'a0 'a0))) -> ('a6 : (= nat z (+ 'a0 'a0)))  -> (= nat z (+ 'a0 (+ z 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat z (+ 'a0 'a0))) -> ('a4 : (= nat (+ 'a0 'a0) 'a0)) -> ('a5 : (= nat z (+ 'a0 'a0))) -> ('a6 : (= nat z (+ 'a0 'a0))) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= (+ (+ 'a0 'a0) 'a0) (s 'a0))) -> (= 'a0 (s (s (+ (+ 'a0 'a0) 'a0))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat (+ (+ 'a0 'a0) 'a0) (s 'a0))) -> (= nat 'a0 (s (s (+ (+ 'a0 'a0) 'a0))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= (+ (+ z (s z)) z) (+ (+ z (s z)) z))) -> (= (+ (+ z (s (+ (+ (+ z (s (+ z z))) z) (s z)))) z) (s (+ (+ z z) z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z (s z)) z) (+ (+ z (s z)) z)) ) -> (= nat (+ (+ z (s (+ (+ (+ z (s (+ z z))) z) (s z)))) z) (s (+ (+ z z) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z (s z)) z) (+ (+ z (s z)) z)) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= (+ (+ 'a0 'a0) 'a0) (s 'a0))) -> ('a3 : (= 'a0 (s (s 'a0)))) -> (= (s (s (s 'a0))) (+ (+ 'a0 'a0) (s 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat (+ (+ 'a0 'a0) 'a0) (s 'a0))) -> ('a3 : (= nat 'a0 (s (s 'a0)))) -> (= nat (s (s (s 'a0))) (+ (+ 'a0 'a0) (s 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ (+ z z) (+ z z)))) -> (= (+ (+ z z) z) (+ (+ z z) (+ z z)))]",
        "problem_raw": "[('a0 : (= nat z z)) -> ('a1 : (= nat z (+ (+ z z) (+ z z)))) -> (= nat (+ (+ z z) z) (+ (+ z z) (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= (+ (+ 'a0 'a0) 'a0) (s 'a0))) -> (= z (+ (+ 'a0 (s 'a0)) 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat (+ (+ 'a0 'a0) 'a0) (s 'a0))) -> (= nat z (+ (+ 'a0 (s 'a0)) 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= (s z) (s z))) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= 'a1 'a1)) -> ('a4 : (= (+ (+ 'a1 'a1) 'a1) (s 'a1))) -> (= (s z) (+ (+ 'a1 'a1) (s 'a1)))]",
        "problem_raw": "[('a0 : (= nat (s z) (s z))) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= nat 'a1 'a1)) -> ('a4 : (= nat (+ (+ 'a1 'a1) 'a1) (s 'a1))) -> (= nat (s z) (+ (+ 'a1 'a1) (s 'a1)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= z (+ z (+ z z)))) -> ('a1 : (= (+ (+ z z) (+ z z)) z)) -> ('a2 : (= z (+ z z))) -> ('a3 : (= z (+ z (+ z z)))) -> ('a4 : (= z (+ z (+ z z)))) -> (= z (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z (+ z (+ z z))) ) -> ('a1 : (= nat (+ (+ z z) (+ z z)) z)) -> ('a2 : (= nat z (+ z z))) -> ('a3 : (= nat z (+ z (+ z z)))) -> ('a4 : (= nat z (+ z (+ z z)))) -> (= nat z (+ z (+ z z)))]",
        "proof": [
            "theorem t : [('a0 : (= z (+ z (+ z z)))) -> ('a1 : (= (+ (+ z z) (+ z z)) z)) -> ('a2 : (= z (+ z z))) -> ('a3 : (= z (+ z (+ z z)))) -> ('a4 : (= z (+ z (+ z z)))) -> (= z (+ z (+ z z)))] {",
            "intro x : (= z (+ z (+ z z))).",
            "intro x0 : (= (+ (+ z z) (+ z z)) z).",
            "intro x1 : (= z (+ z z)).",
            "intro x2 : (= z (+ z (+ z z))).",
            "intro _ : [('a4 : (= z (+ z (+ z z)))) -> (= z (+ z (+ z z)))].",
            "}"
        ],
        "logprob": -8.444288095106492,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z (+ z z))) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= z (+ (+ z z) z))) -> ('a1 : (= z (+ (+ (+ z z) (+ z z)) z))) -> (= z (+ (+ (+ (+ z z) (+ z z)) z) z))]",
        "problem_raw": "[ ('a0 :(= nat z (+ (+ z z) z)) ) -> ('a1 : (= nat z (+ (+ (+ z z) (+ z z)) z))) -> (= nat z (+ (+ (+ (+ z z) (+ z z)) z) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ (+ z z) z)) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= z (s (+ z (+ z (+ z z)))))) -> ('a1 : nat) -> ('a2 : (= z (+ z (+ z z)))) -> ('a3 : nat) -> (= (s (+ z (+ z z))) z)]",
        "problem_raw": "[('a0 : (= nat z (s (+ z (+ z (+ z z)))))) -> ('a1 : nat) -> ('a2 : (= nat z (+ z (+ z z)))) -> ('a3 : nat) -> (= nat (s (+ z (+ z z))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= z z)) -> ('a1 : nat) -> ('a2 : (= z (+ 'a1 (+ z z)))) -> ('a3 : nat) -> ('a4 : (= 'a1 (+ z (+ z z)))) -> (= z (+ 'a1 (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : nat) -> ('a2 : (= nat z (+ 'a1 (+ z z)))) -> ('a3 : nat) -> ('a4 : (= nat 'a1 (+ z (+ z z)))) -> (= nat z (+ 'a1 (+ z z)))]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> ('a1 : nat) -> ('a2 : (= z (+ 'a1 (+ z z)))) -> ('a3 : nat) -> ('a4 : (= 'a1 (+ z (+ z z)))) -> (= z (+ 'a1 (+ z z)))] {",
            "intro x : (= z z).",
            "intro x0 : nat.",
            "intro x1 : (= z (+ x0 (+ z z))).",
            "intro x2 : nat.",
            "intro _ : [('a4 : (= x0 (+ z (+ z z)))) -> (= z (+ x0 (+ z z)))].",
            "}"
        ],
        "logprob": -4.415324149798024,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= 'a0 'a0)) -> ('a5 : (= z 'a0)) -> ('a6 : (= 'a0 z)) -> (= 'a0 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 'a0)) -> ('a5 : (= nat z 'a0)) -> ('a6 : (= nat 'a0 z))  -> (= nat 'a0 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= 'a0 'a0)) -> ('a5 : (= z 'a0)) -> ('a6 : (= 'a0 z)) -> (= 'a0 'a0)] {",
            "intro x : nat.",
            "intro x0 : (= x z).",
            "intro x1 : (= x x).",
            "intro x2 : (= x x).",
            "intro x3 : (= x x).",
            "intro x4 : (= z x).",
            "intro _ : [('a6 : (= x z)) -> (= x x)].",
            "}"
        ],
        "logprob": -4.6815870017275625,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 'a0)) -> ('a5 : (= nat z 'a0)) -> ('a6 : (= nat 'a0 z)) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 z)) -> ('a3 : (= z (+ 'a0 'a0))) -> ('a4 : (= z (+ 'a0 'a0))) -> (= z (+ 'a0 (+ z 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 z)) -> ('a3 : (= nat z (+ 'a0 'a0))) -> ('a4 : (= nat z (+ 'a0 'a0))) -> (= nat z (+ 'a0 (+ z 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= (+ (+ z z) (+ (s (+ z z)) z)) z)) -> ('a1 : nat) -> ('a2 : (= z (+ (+ z z) (+ (s (+ z z)) z)))) -> (= z (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z z) (+ (s (+ z z)) z)) z) ) -> ('a1 : nat) -> ('a2 : (= nat z (+ (+ z z) (+ (s (+ z z)) z)))) -> (= nat z (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z z) (+ (s (+ z z)) z)) z) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= (+ (+ (+ (+ z z) z) z) z) (+ (+ (+ z z) z) z))) -> ('a1 : nat) -> ('a2 : (= z (+ z (+ z (+ (s (+ z (s z))) z))))) -> (= (+ z (+ z (s z))) z)]",
        "problem_raw": "[('a0 : (= nat (+ (+ (+ (+ z z) z) z) z) (+ (+ (+ z z) z) z))) -> ('a1 : nat) -> ('a2 : (= nat z (+ z (+ z (+ (s (+ z (s z))) z))))) -> (= nat (+ z (+ z (s z))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 (+ (+ 'a0 z) 'a0))) -> ('a3 : (= 'a0 (+ (+ 'a0 'a0) (+ (+ 'a0 z) 'a0)))) -> (= 'a0 (s (+ (+ 'a0 z) (+ (+ 'a0 z) 'a0))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 (+ (+ 'a0 z) 'a0))) -> ('a3 : (= nat 'a0 (+ (+ 'a0 'a0) (+ (+ 'a0 z) 'a0)))) -> (= nat 'a0 (s (+ (+ 'a0 z) (+ (+ 'a0 z) 'a0))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= (+ (+ 'a0 'a0) 'a0) (s 'a0))) -> ('a3 : (= 'a0 (s (+ (+ 'a0 'a0) 'a0)))) -> (= z (s (s (+ (+ 'a0 'a0) 'a0))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat (+ (+ 'a0 'a0) 'a0) (s 'a0))) -> ('a3 : (= nat 'a0 (s (+ (+ 'a0 'a0) 'a0)))) -> (= nat z (s (s (+ (+ 'a0 'a0) 'a0))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 z) (+ z z)))) -> ('a2 : (= (+ (+ 'a0 z) (+ z z)) z)) -> (= (+ 'a0 (+ (+ 'a0 z) (+ z z))) (s z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 z) (+ z z)))) -> ('a2 : (= nat (+ (+ 'a0 z) (+ z z)) z)) -> (= nat (+ 'a0 (+ (+ 'a0 z) (+ z z))) (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= (+ z (s z)) (s (+ z z)))) -> ('a1 : (= z (+ (+ z (s (s z))) (s z)))) -> (= z (+ (+ z (s (s z))) (s z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (s z)) (s (+ z z))) ) -> ('a1 : (= nat z (+ (+ z (s (s z))) (s z)))) -> (= nat z (+ (+ z (s (s z))) (s z)))]",
        "proof": [
            "theorem t : [('a0 : (= (+ z (s z)) (s (+ z z)))) -> ('a1 : (= z (+ (+ z (s (s z))) (s z)))) -> (= z (+ (+ z (s (s z))) (s z)))] {",
            "intro x : (= (+ z (s z)) (s (+ z z))).",
            "intro _ : [('a1 : (= z (+ (+ z (s (s z))) (s z)))) -> (= z (+ (+ z (s (s z))) (s z)))].",
            "}"
        ],
        "logprob": -2.431894490466468,
        "actions": [
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (s z)) (s (+ z z))) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= (s 'a0) (s 'a0))) -> ('a2 : (= (+ (+ 'a0 'a0) 'a0) (s 'a0))) -> ('a3 : (= 'a0 (s (+ (+ 'a0 'a0) 'a0)))) -> (= (s 'a0) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (s 'a0) (s 'a0))) -> ('a2 : (= nat (+ (+ 'a0 'a0) 'a0) (s 'a0))) -> ('a3 : (= nat 'a0 (s (+ (+ 'a0 'a0) 'a0)))) -> (= nat (s 'a0) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= z 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= 'a0 'a0)) -> ('a5 : (= 'a0 'a0)) -> (= 'a0 z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 'a0)) -> ('a5 : (= nat 'a0 'a0)) -> (= nat 'a0 z)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= z 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= 'a0 'a0)) -> ('a5 : (= 'a0 'a0)) -> (= 'a0 z)] {",
            "intro x : nat.",
            "intro x0 : (= x x).",
            "intro x1 : (= z x).",
            "intro x2 : (= x x).",
            "intro x3 : (= x x).",
            "show (= x z) by eq_symm.",
            "intro _ : [('a5 : (= x x)) -> (= x z)].",
            "}"
        ],
        "logprob": -5.569050785254978,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "c eq_symm",
            "=> (= x z).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= (s (+ z (+ z z))) (s (+ z (+ z z))))) -> ('a1 : (= z (+ z (+ z (+ z z))))) -> (= z (+ z (+ z (+ z z))))]",
        "problem_raw": "[ ('a0 :(= nat (s (+ z (+ z z))) (s (+ z (+ z z)))) ) -> ('a1 : (= nat z (+ z (+ z (+ z z))))) -> (= nat z (+ z (+ z (+ z z))))]",
        "proof": [
            "theorem t : [('a0 : (= (s (+ z (+ z z))) (s (+ z (+ z z))))) -> ('a1 : (= z (+ z (+ z (+ z z))))) -> (= z (+ z (+ z (+ z z))))] {",
            "intro x : (= (s (+ z (+ z z))) (s (+ z (+ z z)))).",
            "intro _ : [('a1 : (= z (+ z (+ z (+ z z))))) -> (= z (+ z (+ z (+ z z))))].",
            "}"
        ],
        "logprob": -2.3507731735247357,
        "actions": [
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (s (+ z (+ z z))) (s (+ z (+ z z)))) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= z (+ z (+ z z)))) -> ('a1 : (= (+ (+ z z) (+ z z)) z)) -> ('a2 : nat) -> ('a3 : (= (+ z z) (+ z z))) -> ('a4 : (= z (+ z z))) -> (= z (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z (+ z (+ z z))) ) -> ('a1 : (= nat (+ (+ z z) (+ z z)) z)) -> ('a2 : nat) -> ('a3 : (= nat (+ z z) (+ z z))) -> ('a4 : (= nat z (+ z z))) -> (= nat z (+ z (+ z z)))]",
        "proof": [
            "theorem t : [('a0 : (= z (+ z (+ z z)))) -> ('a1 : (= (+ (+ z z) (+ z z)) z)) -> ('a2 : nat) -> ('a3 : (= (+ z z) (+ z z))) -> ('a4 : (= z (+ z z))) -> (= z (+ z (+ z z)))] {",
            "intro x : (= z (+ z (+ z z))).",
            "intro x0 : (= (+ (+ z z) (+ z z)) z).",
            "intro x1 : nat.",
            "intro x2 : (= (+ z z) (+ z z)).",
            "intro _ : [('a4 : (= z (+ z z))) -> (= z (+ z (+ z z)))].",
            "}"
        ],
        "logprob": -7.879809481719457,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z (+ z z))) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= (+ z (s z)) (+ z (s z)))) -> ('a1 : (= z (+ (+ z (s (s z))) (s z)))) -> (= (+ (+ z (s (s z))) z) (+ z (s z)))]",
        "problem_raw": "[('a0 : (= nat (+ z (s z)) (+ z (s z)))) -> ('a1 : (= nat z (+ (+ z (s (s z))) (s z)))) -> (= nat (+ (+ z (s (s z))) z) (+ z (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= (+ z (s z)) (s (+ z z)))) -> ('a1 : (= z (+ (+ z (s z)) (s z)))) -> (= (s (+ z z)) (s (+ (+ (+ z (s z)) (s z)) z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (s z)) (s (+ z z))) ) -> ('a1 : (= nat z (+ (+ z (s z)) (s z)))) -> (= nat (s (+ z z)) (s (+ (+ (+ z (s z)) (s z)) z)))]",
        "proof": [
            "theorem t : [('a0 : (= (+ z (s z)) (s (+ z z)))) -> ('a1 : (= z (+ (+ z (s z)) (s z)))) -> (= (s (+ z z)) (s (+ (+ (+ z (s z)) (s z)) z)))] {",
            "intro x : (= (+ z (s z)) (s (+ z z))).",
            "show (= (s (+ z z)) (s (+ z z))) by rewrite.",
            "intro x0 : (= z (+ (+ z (s z)) (s z))).",
            "show (= (s (+ z z)) (s (+ (+ (+ z (s z)) (s z)) z))) by rewrite.",
            "}"
        ],
        "logprob": -5.451780829756055,
        "actions": [
            "intro.",
            "c rewrite",
            "=> (= (s (+ z z)) (s (+ z z))).",
            "intro.",
            "c rewrite",
            "=> (= (s (+ z z)) (s (+ (+ (+ z (s z)) (s z)) z)))."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (s z)) (s (+ z z))) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= z (+ (s 'a0) (+ (s 'a0) 'a0)))) -> (= z (+ (s 'a0) (+ (s (+ (s 'a0) 'a0)) 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= nat z (+ (s 'a0) (+ (s 'a0) 'a0)))) -> (= nat z (+ (s 'a0) (+ (s (+ (s 'a0) 'a0)) 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= z (+ z (+ z z)))) -> ('a1 : (= (+ (+ z z) (+ z z)) z)) -> ('a2 : nat) -> ('a3 : (= z (+ z z))) -> (= z (+ z (+ z z)))]",
        "problem_raw": "[('a0 : (= nat z (+ z (+ z z)))) -> ('a1 : (= nat (+ (+ z z) (+ z z)) z)) -> ('a2 : nat) -> ('a3 : (= nat z (+ z z))) -> (= nat z (+ z (+ z z)))]",
        "proof": [
            "theorem t : [('a0 : (= z (+ z (+ z z)))) -> ('a1 : (= (+ (+ z z) (+ z z)) z)) -> ('a2 : nat) -> ('a3 : (= z (+ z z))) -> (= z (+ z (+ z z)))] {",
            "intro x : (= z (+ z (+ z z))).",
            "intro x0 : (= (+ (+ z z) (+ z z)) z).",
            "intro x1 : nat.",
            "intro _ : [('a3 : (= z (+ z z))) -> (= z (+ z (+ z z)))].",
            "}"
        ],
        "logprob": -6.315086100766718,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= z (+ (+ z (s (+ (+ (+ z (s z)) z) z))) z))) -> (= (+ z (s (+ (+ (+ z (s z)) z) z))) (s (+ z (+ (+ z (s z)) z))))]",
        "problem_raw": "[('a0 : (= nat z (+ (+ z (s (+ (+ (+ z (s z)) z) z))) z))) -> (= nat (+ z (s (+ (+ (+ z (s z)) z) z))) (s (+ z (+ (+ z (s z)) z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= z (+ z z))) -> ('a1 : (= (+ (+ (+ z (+ z z)) (+ z z)) (+ z z)) z)) -> (= (+ (+ (+ z (+ z z)) (+ z (+ z z))) z) (+ z (+ z (+ z z))))]",
        "problem_raw": "[ ('a0 :(= nat z (+ z z)) ) -> ('a1 : (= nat (+ (+ (+ z (+ z z)) (+ z z)) (+ z z)) z)) -> (= nat (+ (+ (+ z (+ z z)) (+ z (+ z z))) z) (+ z (+ z (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z z)) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= z 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= 'a0 'a0)) -> ('a5 : (= z 'a0)) -> ('a6 : (= z 'a0)) -> ('a7 : (= 'a0 'a0)) -> ('a8 : (= z 'a0)) -> ('a9 : nat) -> ('a10 : (= 'a0 'a0)) -> (= (s 'a0) 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 'a0)) -> ('a5 : (= nat z 'a0)) -> ('a6 : (= nat z 'a0)) -> ('a7 : (= nat 'a0 'a0))  -> ('a8 : (= nat z 'a0)) -> ('a9 : nat) -> ('a10 : (= nat 'a0 'a0)) -> (= nat (s 'a0) 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 'a0)) -> ('a5 : (= nat z 'a0)) -> ('a6 : (= nat z 'a0)) -> ('a7 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= (+ z z) (+ z z))) -> ('a1 : (= z (+ (+ (+ z z) z) z))) -> ('a2 : (= z (+ z (+ z z)))) -> (= (+ (+ z (+ (+ z z) z)) z) (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) (+ z z)) ) -> ('a1 : (= nat z (+ (+ (+ z z) z) z))) -> ('a2 : (= nat z (+ z (+ z z)))) -> (= nat (+ (+ z (+ (+ z z) z)) z) (+ z (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) (+ z z)) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= z (+ z z))) -> ('a1 : nat) -> ('a2 : (= 'a1 (+ z (+ z (+ z z))))) -> ('a3 : nat) -> (= (+ z z) (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z (+ z z)) ) -> ('a1 : nat) -> ('a2 : (= nat 'a1 (+ z (+ z (+ z z))))) -> ('a3 : nat) -> (= nat (+ z z) (+ z (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z z)) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 (+ (+ 'a0 z) 'a0))) -> ('a3 : (= z (+ (+ 'a0 'a0) (s z)))) -> (= 'a0 (+ (+ 'a0 (+ (+ 'a0 z) 'a0)) (s z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 (+ (+ 'a0 z) 'a0))) -> ('a3 : (= nat z (+ (+ 'a0 'a0) (s z)))) -> (= nat 'a0 (+ (+ 'a0 (+ (+ 'a0 z) 'a0)) (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= z 'a0)) -> ('a3 : (= z (+ (+ z 'a0) (s z)))) -> ('a4 : (= z (+ (+ z 'a0) (s z)))) -> ('a5 : (= z (+ (+ z 'a0) (s z)))) -> (= (+ (+ z 'a0) (s z)) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat z (+ (+ z 'a0) (s z)))) -> ('a4 : (= nat z (+ (+ z 'a0) (s z)))) -> ('a5 : (= nat z (+ (+ z 'a0) (s z))))  -> (= nat (+ (+ z 'a0) (s z)) z)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= z 'a0)) -> ('a3 : (= z (+ (+ z 'a0) (s z)))) -> ('a4 : (= z (+ (+ z 'a0) (s z)))) -> ('a5 : (= z (+ (+ z 'a0) (s z)))) -> (= (+ (+ z 'a0) (s z)) z)] {",
            "intro x : nat.",
            "intro x0 : (= x x).",
            "intro x1 : (= z x).",
            "intro x2 : (= z (+ (+ z x) (s z))).",
            "intro x3 : (= z (+ (+ z x) (s z))).",
            "show (= (+ (+ z x) (s z)) z) by eq_symm.",
            "intro _ : [('a5 : (= z (+ (+ z x) (s z)))) -> (= (+ (+ z x) (s z)) z)].",
            "}"
        ],
        "logprob": -6.8298454134050175,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "c eq_symm",
            "=> (= (+ (+ z x) (s z)) z).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat z (+ (+ z 'a0) (s z)))) -> ('a4 : (= nat z (+ (+ z 'a0) (s z)))) -> ('a5 : (= nat z (+ (+ z 'a0) (s z)))) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= (+ 'a0 'a0) (+ 'a0 (+ (+ (s 'a0) 'a0) 'a0)))) -> (= z (+ (+ (s 'a0) 'a0) 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= nat (+ 'a0 'a0) (+ 'a0 (+ (+ (s 'a0) 'a0) 'a0)))) -> (= nat z (+ (+ (s 'a0) 'a0) 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ z (+ z (+ (+ z z) (+ z z)))))) -> ('a2 : (= z (+ z (+ z z)))) -> (= z (+ z (+ (+ z z) (+ z z))))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z (+ z (+ z (+ (+ z z) (+ z z)))))) -> ('a2 : (= nat z (+ z (+ z z)))) -> (= nat z (+ z (+ (+ z z) (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ z 'a0) (+ (s (+ z (s z))) z)))) -> (= 'a0 (+ (+ z (+ (+ z 'a0) (+ (s (+ z (s z))) z))) (s z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ z 'a0) (+ (s (+ z (s z))) z)))) -> (= nat 'a0 (+ (+ z (+ (+ z 'a0) (+ (s (+ z (s z))) z))) (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= z 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= 'a0 'a0)) -> ('a5 : (= z 'a0)) -> ('a6 : (= 'a0 'a0)) -> (= z 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 'a0)) -> ('a5 : (= nat z 'a0)) -> ('a6 : (= nat 'a0 'a0))  -> (= nat z 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= z 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= 'a0 'a0)) -> ('a5 : (= z 'a0)) -> ('a6 : (= 'a0 'a0)) -> (= z 'a0)] {",
            "intro x : nat.",
            "intro x0 : (= x z).",
            "intro x1 : (= z x).",
            "intro x2 : (= x x).",
            "intro x3 : (= x x).",
            "intro x4 : (= z x).",
            "intro _ : [('a6 : (= x x)) -> (= z x)].",
            "}"
        ],
        "logprob": -4.134219107062045,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 'a0)) -> ('a5 : (= nat z 'a0)) -> ('a6 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= z (+ z z))) -> ('a1 : (= (+ (+ (+ z (+ z z)) (+ z z)) (+ z z)) z)) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> (= z (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z (+ z z)) ) -> ('a1 : (= nat (+ (+ (+ z (+ z z)) (+ z z)) (+ z z)) z)) -> ('a2 : nat) -> ('a3 : (= nat z (+ z (+ z z)))) -> (= nat z (+ z (+ z z)))]",
        "proof": [
            "theorem t : [('a0 : (= z (+ z z))) -> ('a1 : (= (+ (+ (+ z (+ z z)) (+ z z)) (+ z z)) z)) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> (= z (+ z (+ z z)))] {",
            "intro x : (= z (+ z z)).",
            "intro x0 : (= (+ (+ (+ z (+ z z)) (+ z z)) (+ z z)) z).",
            "intro x1 : nat.",
            "intro _ : [('a3 : (= z (+ z (+ z z)))) -> (= z (+ z (+ z z)))].",
            "}"
        ],
        "logprob": -5.689752088093323,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z z)) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= (+ (+ (+ 'a0 'a0) 'a0) (s z)) (+ (+ (+ 'a0 'a0) 'a0) (s z)))) -> (= z (s (+ (+ (+ 'a0 'a0) 'a0) 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat (+ (+ (+ 'a0 'a0) 'a0) (s z)) (+ (+ (+ 'a0 'a0) 'a0) (s z))))  -> (= nat z (s (+ (+ (+ 'a0 'a0) 'a0) 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat (+ (+ (+ 'a0 'a0) 'a0) (s z)) (+ (+ (+ 'a0 'a0) 'a0) (s z)))) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= (s 'a0) z)) -> ('a2 : (= z (+ (s 'a0) z))) -> ('a3 : (= z (s 'a0))) -> ('a4 : (= z (s (+ (s 'a0) z)))) -> (= z (+ (s 'a0) z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (s 'a0) z)) -> ('a2 : (= nat z (+ (s 'a0) z))) -> ('a3 : (= nat z (s 'a0)))  -> ('a4 : (= nat z (s (+ (s 'a0) z)))) -> (= nat z (+ (s 'a0) z))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= (s 'a0) z)) -> ('a2 : (= z (+ (s 'a0) z))) -> ('a3 : (= z (s 'a0))) -> ('a4 : (= z (s (+ (s 'a0) z)))) -> (= z (+ (s 'a0) z))] {",
            "intro x : nat.",
            "intro x0 : (= (s x) z).",
            "intro x1 : (= z (+ (s x) z)).",
            "intro x2 : (= z (s x)).",
            "intro _ : [('a4 : (= z (s (+ (s x) z)))) -> (= z (+ (s x) z))].",
            "}"
        ],
        "logprob": -3.8288688726539384,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat (s 'a0) z)) -> ('a2 : (= nat z (+ (s 'a0) z))) -> ('a3 : (= nat z (s 'a0))) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= z (+ z (+ z z)))) -> ('a1 : (= (+ (+ z z) (+ z z)) z)) -> ('a2 : nat) -> ('a3 : (= z (+ z z))) -> (= z (+ z z))]",
        "problem_raw": "[('a0 : (= nat z (+ z (+ z z)))) -> ('a1 : (= nat (+ (+ z z) (+ z z)) z)) -> ('a2 : nat) -> ('a3 : (= nat z (+ z z))) -> (= nat z (+ z z))]",
        "proof": [
            "theorem t : [('a0 : (= z (+ z (+ z z)))) -> ('a1 : (= (+ (+ z z) (+ z z)) z)) -> ('a2 : nat) -> ('a3 : (= z (+ z z))) -> (= z (+ z z))] {",
            "intro x : (= z (+ z (+ z z))).",
            "intro x0 : (= (+ (+ z z) (+ z z)) z).",
            "intro x1 : nat.",
            "intro _ : [('a3 : (= z (+ z z))) -> (= z (+ z z))].",
            "}"
        ],
        "logprob": -6.379728549162674,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= (s 'a0) z)) -> ('a2 : (= 'a0 z)) -> ('a3 : (= z (+ 'a0 'a0))) -> ('a4 : (= z (+ z (+ z 'a0)))) -> ('a5 : (= z (+ z (+ z 'a0)))) -> (= 'a0 (+ z (+ z 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (s 'a0) z)) -> ('a2 : (= nat 'a0 z)) -> ('a3 : (= nat z (+ 'a0 'a0))) -> ('a4 : (= nat z (+ z (+ z 'a0)))) -> ('a5 : (= nat z (+ z (+ z 'a0))))  -> (= nat 'a0 (+ z (+ z 'a0)))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= (s 'a0) z)) -> ('a2 : (= 'a0 z)) -> ('a3 : (= z (+ 'a0 'a0))) -> ('a4 : (= z (+ z (+ z 'a0)))) -> ('a5 : (= z (+ z (+ z 'a0)))) -> (= 'a0 (+ z (+ z 'a0)))] {",
            "intro x : nat.",
            "intro x0 : (= (s x) z).",
            "intro x1 : (= x z).",
            "intro x2 : (= z (+ x x)).",
            "intro x3 : (= z (+ z (+ z x))).",
            "intro x4 : (= z (+ z (+ z x))).",
            "show (= x (+ z (+ z x))) by rewrite.",
            "}"
        ],
        "logprob": -7.2638270961885425,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "c rewrite",
            "=> (= x (+ z (+ z x)))."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat (s 'a0) z)) -> ('a2 : (= nat 'a0 z)) -> ('a3 : (= nat z (+ 'a0 'a0))) -> ('a4 : (= nat z (+ z (+ z 'a0)))) -> ('a5 : (= nat z (+ z (+ z 'a0)))) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= z z)) -> ('a1 : nat) -> ('a2 : (= 'a1 (s 'a1))) -> ('a3 : (= 'a1 (s 'a1))) -> (= 'a1 (s (s 'a1)))]",
        "problem_raw": "[('a0 : (= nat z z)) -> ('a1 : nat) -> ('a2 : (= nat 'a1 (s 'a1))) -> ('a3 : (= nat 'a1 (s 'a1))) -> (= nat 'a1 (s (s 'a1)))]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> ('a1 : nat) -> ('a2 : (= 'a1 (s 'a1))) -> ('a3 : (= 'a1 (s 'a1))) -> (= 'a1 (s (s 'a1)))] {",
            "intro x : (= z z).",
            "intro x0 : nat.",
            "intro x1 : (= x0 (s x0)).",
            "intro x2 : (= x0 (s x0)).",
            "show (= x0 (s (s x0))) by rewrite.",
            "}"
        ],
        "logprob": -5.122934060163558,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "c rewrite",
            "=> (= x0 (s (s x0)))."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= z (+ (+ z z) z))) -> ('a1 : (= z (+ z (+ z (+ (s (+ z (s z))) z))))) -> (= z (+ (+ z z) (+ z (+ z (+ (s (+ z (s z))) z)))))]",
        "problem_raw": "[ ('a0 :(= nat z (+ (+ z z) z)) ) -> ('a1 : (= nat z (+ z (+ z (+ (s (+ z (s z))) z))))) -> (= nat z (+ (+ z z) (+ z (+ z (+ (s (+ z (s z))) z)))))]",
        "proof": [
            "theorem t : [('a0 : (= z (+ (+ z z) z))) -> ('a1 : (= z (+ z (+ z (+ (s (+ z (s z))) z))))) -> (= z (+ (+ z z) (+ z (+ z (+ (s (+ z (s z))) z)))))] {",
            "intro x : (= z (+ (+ z z) z)).",
            "intro x0 : (= z (+ z (+ z (+ (s (+ z (s z))) z)))).",
            "show (= z (+ (+ z z) (+ z (+ z (+ (s (+ z (s z))) z))))) by rewrite.",
            "}"
        ],
        "logprob": -7.614036851411874,
        "actions": [
            "intro.",
            "intro.",
            "c rewrite",
            "=> (= z (+ (+ z z) (+ z (+ z (+ (s (+ z (s z))) z)))))."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ (+ z z) z)) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 (s 'a0))) -> ('a4 : (= (+ (+ 'a0 'a0) 'a0) (s 'a0))) -> (= (+ (+ 'a0 'a0) 'a0) (s 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0))  -> ('a3 : (= nat 'a0 (s 'a0))) -> ('a4 : (= nat (+ (+ 'a0 'a0) 'a0) (s 'a0))) -> (= nat (+ (+ 'a0 'a0) 'a0) (s 'a0))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 (s 'a0))) -> ('a4 : (= (+ (+ 'a0 'a0) 'a0) (s 'a0))) -> (= (+ (+ 'a0 'a0) 'a0) (s 'a0))] {",
            "intro x : nat.",
            "intro x0 : (= x x).",
            "intro x1 : (= x x).",
            "intro x2 : (= x (s x)).",
            "intro _ : [('a4 : (= (+ (+ x x) x) (s x))) -> (= (+ (+ x x) x) (s x))].",
            "}"
        ],
        "logprob": -3.6040023386754885,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (s (+ z z)) z)) -> ('a2 : (= z (+ (s z) (+ z z)))) -> ('a3 : nat) -> (= z (s (+ z (+ (s z) (+ z z)))))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (s (+ z z)) z)) -> ('a2 : (= nat z (+ (s z) (+ z z)))) -> ('a3 : nat) -> (= nat z (s (+ z (+ (s z) (+ z z)))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= (s (+ z (+ z (+ z z)))) (s (+ z (+ z (+ z z)))))) -> ('a1 : (= z (+ z (+ z z)))) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> (= z (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat (s (+ z (+ z (+ z z)))) (s (+ z (+ z (+ z z))))) ) -> ('a1 : (= nat z (+ z (+ z z)))) -> ('a2 : nat) -> ('a3 : (= nat z (+ z (+ z z)))) -> (= nat z (+ z (+ z z)))]",
        "proof": [
            "theorem t : [('a0 : (= (s (+ z (+ z (+ z z)))) (s (+ z (+ z (+ z z)))))) -> ('a1 : (= z (+ z (+ z z)))) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> (= z (+ z (+ z z)))] {",
            "intro x : (= (s (+ z (+ z (+ z z)))) (s (+ z (+ z (+ z z))))).",
            "intro x0 : (= z (+ z (+ z z))).",
            "intro x1 : nat.",
            "intro _ : [('a3 : (= z (+ z (+ z z)))) -> (= z (+ z (+ z z)))].",
            "}"
        ],
        "logprob": -5.344059551078682,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (s (+ z (+ z (+ z z)))) (s (+ z (+ z (+ z z))))) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= z 'a0)) -> ('a3 : (= z 'a0)) -> ('a4 : (= z 'a0)) -> ('a5 : (= 'a0 'a0)) -> ('a6 : nat) -> ('a7 : (= z 'a0)) -> (= 'a0 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat z 'a0)) -> ('a4 : (= nat z 'a0)) -> ('a5 : (= nat 'a0 'a0)) -> ('a6 : nat) -> ('a7 : (= nat z 'a0)) -> (= nat 'a0 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= z 'a0)) -> ('a3 : (= z 'a0)) -> ('a4 : (= z 'a0)) -> ('a5 : (= 'a0 'a0)) -> ('a6 : nat) -> ('a7 : (= z 'a0)) -> (= 'a0 'a0)] {",
            "intro x : nat.",
            "intro x0 : (= x x).",
            "intro x1 : (= z x).",
            "intro x2 : (= z x).",
            "intro x3 : (= z x).",
            "intro x4 : (= x x).",
            "intro x5 : nat.",
            "intro _ : [('a7 : (= z x)) -> (= x x)].",
            "}"
        ],
        "logprob": -4.8808094435106515,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= (+ (+ z 'a0) 'a0) 'a0)) -> ('a4 : (= (+ (+ z 'a0) 'a0) 'a0)) -> (= z (+ (+ z 'a0) (+ (+ z 'a0) 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> ('a4 : (= nat (+ (+ z 'a0) 'a0) 'a0))  -> (= nat z (+ (+ z 'a0) (+ (+ z 'a0) 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> ('a4 : (= nat (+ (+ z 'a0) 'a0) 'a0)) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= z (+ z (+ z z)))) -> ('a1 : (= (+ (+ z z) (+ z z)) z)) -> ('a2 : nat) -> ('a3 : (= z (+ z z))) -> ('a4 : (= (+ z z) (+ z (+ z z)))) -> (= z (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z (+ z (+ z z))) ) -> ('a1 : (= nat (+ (+ z z) (+ z z)) z)) -> ('a2 : nat) -> ('a3 : (= nat z (+ z z))) -> ('a4 : (= nat (+ z z) (+ z (+ z z)))) -> (= nat z (+ z (+ z z)))]",
        "proof": [
            "theorem t : [('a0 : (= z (+ z (+ z z)))) -> ('a1 : (= (+ (+ z z) (+ z z)) z)) -> ('a2 : nat) -> ('a3 : (= z (+ z z))) -> ('a4 : (= (+ z z) (+ z (+ z z)))) -> (= z (+ z (+ z z)))] {",
            "intro x : (= z (+ z (+ z z))).",
            "intro x0 : (= (+ (+ z z) (+ z z)) z).",
            "intro x1 : nat.",
            "intro x2 : (= z (+ z z)).",
            "intro _ : [('a4 : (= (+ z z) (+ z (+ z z)))) -> (= z (+ z (+ z z)))].",
            "}"
        ],
        "logprob": -8.168924585153711,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z (+ z z))) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= (+ (+ z 'a0) 'a0) 'a0)) -> ('a3 : (= (+ (s 'a0) 'a0) 'a0)) -> (= (s (+ (s 'a0) 'a0)) (s (+ (s 'a0) 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> ('a3 : (= nat (+ (s 'a0) 'a0) 'a0)) -> (= nat (s (+ (s 'a0) 'a0)) (s (+ (s 'a0) 'a0)))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= (+ (+ z 'a0) 'a0) 'a0)) -> ('a3 : (= (+ (s 'a0) 'a0) 'a0)) -> (= (s (+ (s 'a0) 'a0)) (s (+ (s 'a0) 'a0)))] {",
            "intro x : nat.",
            "intro x0 : (= x x).",
            "intro x1 : (= (+ (+ z x) x) x).",
            "intro x2 : (= (+ (s x) x) x).",
            "apply c0014.",
            "}"
        ],
        "logprob": -5.409434838659264,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "a c0014",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= z (+ z (+ (+ z z) z)))) -> ('a1 : nat) -> ('a2 : (= z (+ z (+ z z)))) -> (= z (+ z (+ (+ z (+ (+ z z) z)) z)))]",
        "problem_raw": "[ ('a0 :(= nat z (+ z (+ (+ z z) z))) ) -> ('a1 : nat) -> ('a2 : (= nat z (+ z (+ z z)))) -> (= nat z (+ z (+ (+ z (+ (+ z z) z)) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z (+ (+ z z) z))) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= 'a0 (+ (s 'a0) (+ (s (+ (s 'a0) 'a0)) 'a0)))) -> (= z (+ (s 'a0) (+ (s 'a0) 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= nat 'a0 (+ (s 'a0) (+ (s (+ (s 'a0) 'a0)) 'a0)))) -> (= nat z (+ (s 'a0) (+ (s 'a0) 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (s (+ z (+ z z))) z)) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> ('a4 : (= z (+ z (+ (+ z 'a2) (+ z z))))) -> (= 'a2 z)]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (s (+ z (+ z z))) z)) -> ('a2 : nat) -> ('a3 : (= nat z (+ z (+ z z)))) -> ('a4 : (= nat z (+ z (+ (+ z 'a2) (+ z z))))) -> (= nat 'a2 z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 z) (s z)))) -> ('a2 : (= (+ (+ 'a0 z) (+ z (s z))) z)) -> ('a3 : (= 'a0 (+ (+ 'a0 z) (s z)))) -> (= (+ (+ 'a0 z) (+ z (s z))) (s z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 z) (s z)))) -> ('a2 : (= nat (+ (+ 'a0 z) (+ z (s z))) z)) -> ('a3 : (= nat 'a0 (+ (+ 'a0 z) (s z))))  -> (= nat (+ (+ 'a0 z) (+ z (s z))) (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 z) (s z)))) -> ('a2 : (= nat (+ (+ 'a0 z) (+ z (s z))) z)) -> ('a3 : (= nat 'a0 (+ (+ 'a0 z) (s z)))) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= (+ (+ z 'a0) 'a0) 'a0)) -> ('a3 : (= (+ (s 'a0) (+ 'a0 'a0)) 'a0)) -> (= 'a0 (+ (+ z 'a0) (+ (s 'a0) 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> ('a3 : (= nat (+ (s 'a0) (+ 'a0 'a0)) 'a0)) -> (= nat 'a0 (+ (+ z 'a0) (+ (s 'a0) 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= (+ z (+ z z)) (+ z (+ z z)))) -> ('a1 : (= z (+ (+ z z) z))) -> (= (+ z z) (+ z (+ (+ z z) z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (+ z z)) (+ z (+ z z))) ) -> ('a1 : (= nat z (+ (+ z z) z))) -> (= nat (+ z z) (+ z (+ (+ z z) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (+ z z)) (+ z (+ z z))) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ z 'a0) (s z)))) -> ('a2 : (= z (+ (+ z 'a0) (s z)))) -> (= z (+ (+ z 'a0) (s z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ z 'a0) (s z)))) -> ('a2 : (= nat z (+ (+ z 'a0) (s z)))) -> (= nat z (+ (+ z 'a0) (s z)))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 (+ (+ z 'a0) (s z)))) -> ('a2 : (= z (+ (+ z 'a0) (s z)))) -> (= z (+ (+ z 'a0) (s z)))] {",
            "intro x : nat.",
            "intro x0 : (= x (+ (+ z x) (s z))).",
            "intro _ : [('a2 : (= z (+ (+ z x) (s z)))) -> (= z (+ (+ z x) (s z)))].",
            "}"
        ],
        "logprob": -3.3269274765303796,
        "actions": [
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= (+ z (+ z z)) (+ z (+ z z)))) -> ('a1 : (= (+ (+ z z) (+ z z)) z)) -> ('a2 : nat) -> ('a3 : (= z (+ z z))) -> (= (+ z (+ z z)) (s (+ z z)))]",
        "problem_raw": "[('a0 : (= nat (+ z (+ z z)) (+ z (+ z z)))) -> ('a1 : (= nat (+ (+ z z) (+ z z)) z)) -> ('a2 : nat) -> ('a3 : (= nat z (+ z z))) -> (= nat (+ z (+ z z)) (s (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= z (+ (+ z (s (+ (+ (+ z (s z)) z) z))) z))) -> (= (+ (s (+ z (+ (+ z (s z)) (+ (+ z (s z)) z)))) z) (s z))]",
        "problem_raw": "[('a0 : (= nat z (+ (+ z (s (+ (+ (+ z (s z)) z) z))) z))) -> (= nat (+ (s (+ z (+ (+ z (s z)) (+ (+ z (s z)) z)))) z) (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 z)) -> ('a3 : (= z (+ 'a0 'a0))) -> ('a4 : (= z (+ 'a0 'a0))) -> ('a5 : (= 'a0 (+ 'a0 'a0))) -> (= z (+ (+ 'a0 'a0) 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 z)) -> ('a3 : (= nat z (+ 'a0 'a0))) -> ('a4 : (= nat z (+ 'a0 'a0))) -> ('a5 : (= nat 'a0 (+ 'a0 'a0)))  -> (= nat z (+ (+ 'a0 'a0) 'a0))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 z)) -> ('a3 : (= z (+ 'a0 'a0))) -> ('a4 : (= z (+ 'a0 'a0))) -> ('a5 : (= 'a0 (+ 'a0 'a0))) -> (= z (+ (+ 'a0 'a0) 'a0))] {",
            "intro x : nat.",
            "intro x0 : (= x x).",
            "intro x1 : (= x z).",
            "intro x2 : (= z (+ x x)).",
            "intro x3 : (= z (+ x x)).",
            "intro x4 : (= x (+ x x)).",
            "show (= z (+ (+ x x) x)) by rewrite.",
            "}"
        ],
        "logprob": -7.365433585612761,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "c rewrite",
            "=> (= z (+ (+ x x) x))."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 z)) -> ('a3 : (= nat z (+ 'a0 'a0))) -> ('a4 : (= nat z (+ 'a0 'a0))) -> ('a5 : (= nat 'a0 (+ 'a0 'a0))) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 'a0) (+ z 'a0)))) -> ('a2 : (= 'a0 (+ (+ 'a0 'a0) (+ z 'a0)))) -> (= 'a0 (+ (+ 'a0 'a0) (s 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 'a0) (+ z 'a0)))) -> ('a2 : (= nat 'a0 (+ (+ 'a0 'a0) (+ z 'a0))))  -> (= nat 'a0 (+ (+ 'a0 'a0) (s 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 'a0) (+ z 'a0)))) -> ('a2 : (= nat 'a0 (+ (+ 'a0 'a0) (+ z 'a0)))) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= (s (+ z (+ z (+ z z)))) z)) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> ('a4 : (= z (+ z (+ (+ z 'a2) (+ z z))))) -> (= z (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat (s (+ z (+ z (+ z z)))) z) ) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= nat z (+ z (+ z z)))) -> ('a4 : (= nat z (+ z (+ (+ z 'a2) (+ z z))))) -> (= nat z (+ z (+ z z)))]",
        "proof": [
            "theorem t : [('a0 : (= (s (+ z (+ z (+ z z)))) z)) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> ('a4 : (= z (+ z (+ (+ z 'a2) (+ z z))))) -> (= z (+ z (+ z z)))] {",
            "intro x : (= (s (+ z (+ z (+ z z)))) z).",
            "apply nat_ind.",
            [
                "goal [('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> ('a4 : (= z (+ z (+ (+ z 'a2) (+ z z))))) -> (= z (+ z (+ z z)))] {",
                "intro x0 : nat.",
                "intro x1 : (= z (+ z (+ z z))).",
                "intro _ : [('a4 : (= z (+ z (+ (+ z x0) (+ z z))))) -> (= z (+ z (+ z z)))].",
                "}"
            ],
            [
                "goal [('n : nat) -> [('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> ('a4 : (= z (+ z (+ (+ z 'a2) (+ z z))))) -> (= z (+ z (+ z z)))] -> [('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> ('a4 : (= z (+ z (+ (+ z 'a2) (+ z z))))) -> (= z (+ z (+ z z)))]] {",
                "intro x0 : nat.",
                "intro _ : [[('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> ('a4 : (= z (+ z (+ (+ z 'a2) (+ z z))))) -> (= z (+ z (+ z z)))] -> [('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> ('a4 : (= z (+ z (+ (+ z 'a2) (+ z z))))) -> (= z (+ z (+ z z)))]].",
                "}"
            ],
            "}"
        ],
        "logprob": -8.435386583981643,
        "actions": [
            "intro.",
            "a nat_ind",
            "=> [('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> ('a4 : (= z (+ z (+ (+ z 'a2) (+ z z))))) -> (= z (+ z (+ z z)))]; [('n : nat) -> [('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> ('a4 : (= z (+ z (+ (+ z 'a2) (+ z z))))) -> (= z (+ z (+ z z)))] -> [('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> ('a4 : (= z (+ z (+ (+ z 'a2) (+ z z))))) -> (= z (+ z (+ z z)))]].",
            "[intro., intro., intro.]",
            "[intro., intro.]"
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (s (+ z (+ z (+ z z)))) z) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= 'a0 (+ (s 'a0) (+ (s (+ (+ (s 'a0) 'a0) 'a0)) 'a0)))) -> (= z (+ (s 'a0) 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= nat 'a0 (+ (s 'a0) (+ (s (+ (+ (s 'a0) 'a0) 'a0)) 'a0)))) -> (= nat z (+ (s 'a0) 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= z (+ (+ 'a0 (s z)) (s z)))) -> ('a2 : (= (+ (+ 'a0 (s z)) (+ 'a0 (s z))) z)) -> (= (+ (+ 'a0 (s z)) (+ 'a0 (s z))) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z (+ (+ 'a0 (s z)) (s z)))) -> ('a2 : (= nat (+ (+ 'a0 (s z)) (+ 'a0 (s z))) z)) -> (= nat (+ (+ 'a0 (s z)) (+ 'a0 (s z))) z)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= z (+ (+ 'a0 (s z)) (s z)))) -> ('a2 : (= (+ (+ 'a0 (s z)) (+ 'a0 (s z))) z)) -> (= (+ (+ 'a0 (s z)) (+ 'a0 (s z))) z)] {",
            "intro x : nat.",
            "intro x0 : (= z (+ (+ x (s z)) (s z))).",
            "intro _ : [('a2 : (= (+ (+ x (s z)) (+ x (s z))) z)) -> (= (+ (+ x (s z)) (+ x (s z))) z)].",
            "}"
        ],
        "logprob": -3.030867597622097,
        "actions": [
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= (+ (+ 'a0 'a0) 'a0) 'a0)) -> ('a3 : (= 'a0 (+ (+ 'a0 'a0) (+ (+ 'a0 'a0) 'a0)))) -> (= z (+ (+ 'a0 'a0) (s 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat (+ (+ 'a0 'a0) 'a0) 'a0)) -> ('a3 : (= nat 'a0 (+ (+ 'a0 'a0) (+ (+ 'a0 'a0) 'a0)))) -> (= nat z (+ (+ 'a0 'a0) (s 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= (s (+ 'a0 z)) z)) -> ('a3 : (= z (+ (+ z 'a0) z))) -> (= z (s (+ 'a0 (+ (+ z 'a0) z))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat (s (+ 'a0 z)) z)) -> ('a3 : (= nat z (+ (+ z 'a0) z))) -> (= nat z (s (+ 'a0 (+ (+ z 'a0) z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= z (s (+ z (+ z (+ z z)))))) -> ('a1 : nat) -> ('a2 : (= z (+ z (+ z z)))) -> ('a3 : (= z (+ z (+ z z)))) -> (= z (s (+ z (+ z (+ z z)))))]",
        "problem_raw": "[('a0 : (= nat z (s (+ z (+ z (+ z z)))))) -> ('a1 : nat) -> ('a2 : (= nat z (+ z (+ z z)))) -> ('a3 : (= nat z (+ z (+ z z)))) -> (= nat z (s (+ z (+ z (+ z z)))))]",
        "proof": [
            "theorem t : [('a0 : (= z (s (+ z (+ z (+ z z)))))) -> ('a1 : nat) -> ('a2 : (= z (+ z (+ z z)))) -> ('a3 : (= z (+ z (+ z z)))) -> (= z (s (+ z (+ z (+ z z)))))] {",
            "intro x : (= z (s (+ z (+ z (+ z z))))).",
            "intro x0 : nat.",
            "intro x1 : (= z (+ z (+ z z))).",
            "intro _ : [('a3 : (= z (+ z (+ z z)))) -> (= z (s (+ z (+ z (+ z z)))))].",
            "}"
        ],
        "logprob": -5.483180997121256,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= z (+ z (+ (+ z z) z)))) -> ('a1 : (= (+ z (+ z z)) z)) -> (= z (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z (+ z (+ (+ z z) z))) ) -> ('a1 : (= nat (+ z (+ z z)) z)) -> (= nat z (+ z (+ z z)))]",
        "proof": [
            "theorem t : [('a0 : (= z (+ z (+ (+ z z) z)))) -> ('a1 : (= (+ z (+ z z)) z)) -> (= z (+ z (+ z z)))] {",
            "intro x : (= z (+ z (+ (+ z z) z))).",
            "intro x0 : (= (+ z (+ z z)) z).",
            "apply c0152.",
            "}"
        ],
        "logprob": -5.339187526500764,
        "actions": [
            "intro.",
            "intro.",
            "a c0152",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z (+ (+ z z) z))) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= z 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= 'a0 'a0)) -> ('a5 : (= z 'a0)) -> ('a6 : (= z 'a0)) -> ('a7 : (= 'a0 'a0)) -> ('a8 : (= 'a0 'a0)) -> ('a9 : nat) -> ('a10 : (= z 'a0)) -> (= 'a0 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 'a0))  -> ('a5 : (= nat z 'a0)) -> ('a6 : (= nat z 'a0)) -> ('a7 : (= nat 'a0 'a0)) -> ('a8 : (= nat 'a0 'a0)) -> ('a9 : nat) -> ('a10 : (= nat z 'a0)) -> (= nat 'a0 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= z 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= 'a0 'a0)) -> ('a5 : (= z 'a0)) -> ('a6 : (= z 'a0)) -> ('a7 : (= 'a0 'a0)) -> ('a8 : (= 'a0 'a0)) -> ('a9 : nat) -> ('a10 : (= z 'a0)) -> (= 'a0 'a0)] {",
            "intro x : nat.",
            "intro x0 : (= x z).",
            "intro x1 : (= z x).",
            "intro x2 : (= x x).",
            "intro x3 : (= x x).",
            "intro x4 : (= z x).",
            "intro x5 : (= z x).",
            "intro x6 : (= x x).",
            "intro x7 : (= x x).",
            "intro x8 : nat.",
            "intro _ : [('a10 : (= z x)) -> (= x x)].",
            "}"
        ],
        "logprob": -8.424826394280318,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= z (+ 'a0 'a0))) -> (= (+ (+ 'a0 'a0) (s 'a0)) (s 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= nat z (+ 'a0 'a0))) -> (= nat (+ (+ 'a0 'a0) (s 'a0)) (s 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 (s 'a0))) -> (= (+ (+ 'a0 'a0) 'a0) (s 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 (s 'a0))) -> (= nat (+ (+ 'a0 'a0) 'a0) (s 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 z) (s z)))) -> ('a2 : (= (+ (+ 'a0 z) (+ z (s z))) z)) -> ('a3 : (= 'a0 (+ (+ 'a0 z) (s z)))) -> (= 'a0 (+ (+ 'a0 z) (+ z (s z))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 z) (s z)))) -> ('a2 : (= nat (+ (+ 'a0 z) (+ z (s z))) z)) -> ('a3 : (= nat 'a0 (+ (+ 'a0 z) (s z))))  -> (= nat 'a0 (+ (+ 'a0 z) (+ z (s z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 z) (s z)))) -> ('a2 : (= nat (+ (+ 'a0 z) (+ z (s z))) z)) -> ('a3 : (= nat 'a0 (+ (+ 'a0 z) (s z)))) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= (+ 'a0 'a0) (s 'a0))) -> ('a4 : (= z (+ (+ 'a0 'a0) (s 'a0)))) -> (= z (+ (+ 'a0 'a0) (s 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= nat (+ 'a0 'a0) (s 'a0))) -> ('a4 : (= nat z (+ (+ 'a0 'a0) (s 'a0))))  -> (= nat z (+ (+ 'a0 'a0) (s 'a0)))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= (+ 'a0 'a0) (s 'a0))) -> ('a4 : (= z (+ (+ 'a0 'a0) (s 'a0)))) -> (= z (+ (+ 'a0 'a0) (s 'a0)))] {",
            "intro x : nat.",
            "intro x0 : (= x (s x)).",
            "intro x1 : (= z (+ (+ x x) (s x))).",
            "intro x2 : (= (+ x x) (s x)).",
            "intro _ : [('a4 : (= z (+ (+ x x) (s x)))) -> (= z (+ (+ x x) (s x)))].",
            "}"
        ],
        "logprob": -4.638391043515165,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= nat (+ 'a0 'a0) (s 'a0))) -> ('a4 : (= nat z (+ (+ 'a0 'a0) (s 'a0)))) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= (+ z (+ z z)) (+ z z))) -> ('a1 : (= z (+ (+ z z) z))) -> ('a2 : (= z (+ z z))) -> (= z (+ (+ z (+ (+ z z) z)) z))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (+ z z)) (+ z z)) ) -> ('a1 : (= nat z (+ (+ z z) z))) -> ('a2 : (= nat z (+ z z))) -> (= nat z (+ (+ z (+ (+ z z) z)) z))]",
        "proof": [
            "theorem t : [('a0 : (= (+ z (+ z z)) (+ z z))) -> ('a1 : (= z (+ (+ z z) z))) -> ('a2 : (= z (+ z z))) -> (= z (+ (+ z (+ (+ z z) z)) z))] {",
            "intro x : (= (+ z (+ z z)) (+ z z)).",
            "intro x0 : (= z (+ (+ z z) z)).",
            "show (= z (+ (+ z (+ (+ z z) z)) z)) by rewrite.",
            "intro _ : [('a2 : (= z (+ z z))) -> (= z (+ (+ z (+ (+ z z) z)) z))].",
            "}"
        ],
        "logprob": -6.918231665426493,
        "actions": [
            "intro.",
            "intro.",
            "c rewrite",
            "=> (= z (+ (+ z (+ (+ z z) z)) z)).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (+ z z)) (+ z z)) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (s (+ z z)) z)) -> ('a2 : (= z (+ (s z) (+ z z)))) -> ('a3 : nat) -> (= z (+ 'a3 (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (s (+ z z)) z)) -> ('a2 : (= nat z (+ (s z) (+ z z)))) -> ('a3 : nat) -> (= nat z (+ 'a3 (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (s 'a0) 'a0))) -> ('a2 : (= 'a0 (+ (s 'a0) (+ (s 'a0) 'a0)))) -> (= z (+ (s 'a0) (+ (s (+ (s 'a0) 'a0)) 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (s 'a0) 'a0))) -> ('a2 : (= nat 'a0 (+ (s 'a0) (+ (s 'a0) 'a0)))) -> (= nat z (+ (s 'a0) (+ (s (+ (s 'a0) 'a0)) 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 z)) -> ('a4 : (= z 'a0)) -> ('a5 : (= 'a0 'a0)) -> ('a6 : (= z 'a0)) -> (= 'a0 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 z)) -> ('a4 : (= nat z 'a0)) -> ('a5 : (= nat 'a0 'a0)) -> ('a6 : (= nat z 'a0)) -> (= nat 'a0 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 z)) -> ('a4 : (= z 'a0)) -> ('a5 : (= 'a0 'a0)) -> ('a6 : (= z 'a0)) -> (= 'a0 'a0)] {",
            "intro x : nat.",
            "intro x0 : (= x z).",
            "intro x1 : (= x x).",
            "intro x2 : (= x z).",
            "intro x3 : (= z x).",
            "intro x4 : (= x x).",
            "intro _ : [('a6 : (= z x)) -> (= x x)].",
            "}"
        ],
        "logprob": -4.369881177306298,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= z 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= 'a0 'a0)) -> ('a5 : (= 'a0 'a0)) -> ('a6 : (= z (+ 'a0 'a0))) -> (= z (+ 'a0 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 'a0))  -> ('a5 : (= nat 'a0 'a0)) -> ('a6 : (= nat z (+ 'a0 'a0))) -> (= nat z (+ 'a0 'a0))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= z 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= 'a0 'a0)) -> ('a5 : (= 'a0 'a0)) -> ('a6 : (= z (+ 'a0 'a0))) -> (= z (+ 'a0 'a0))] {",
            "intro x : nat.",
            "intro x0 : (= x x).",
            "intro x1 : (= z x).",
            "intro x2 : (= x x).",
            "intro x3 : (= x x).",
            "intro x4 : (= x x).",
            "intro _ : [('a6 : (= z (+ x x))) -> (= z (+ x x))].",
            "}"
        ],
        "logprob": -4.050369022890212,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= (+ (+ z 'a0) 'a0) 'a0)) -> ('a4 : (= (+ (+ z 'a0) 'a0) 'a0)) -> (= 'a0 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> ('a4 : (= nat (+ (+ z 'a0) 'a0) 'a0))  -> (= nat 'a0 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= (+ (+ z 'a0) 'a0) 'a0)) -> ('a4 : (= (+ (+ z 'a0) 'a0) 'a0)) -> (= 'a0 'a0)] {",
            "intro x : nat.",
            "intro x0 : (= z x).",
            "intro x1 : (= x x).",
            "intro x2 : (= (+ (+ z x) x) x).",
            "intro _ : [('a4 : (= (+ (+ z x) x) x)) -> (= x x)].",
            "}"
        ],
        "logprob": -3.633737043312606,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> ('a4 : (= nat (+ (+ z 'a0) 'a0) 'a0)) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 'a0) (+ z z)))) -> (= 'a0 (+ (+ 'a0 'a0) (+ z z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 'a0) (+ z z)))) -> (= nat 'a0 (+ (+ 'a0 'a0) (+ z z)))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 'a0) (+ z z)))) -> (= 'a0 (+ (+ 'a0 'a0) (+ z z)))] {",
            "intro x : nat.",
            "intro _ : [('a1 : (= x (+ (+ x x) (+ z z)))) -> (= x (+ (+ x x) (+ z z)))].",
            "}"
        ],
        "logprob": -1.6966216192965549,
        "actions": [
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (s 'a0) 'a0))) -> ('a2 : (= 'a0 (+ (s (+ (s 'a0) 'a0)) 'a0))) -> ('a3 : (= (+ (s 'a0) (+ 'a0 'a0)) 'a0)) -> (= 'a0 (+ (s 'a0) (+ 'a0 (+ (s 'a0) 'a0))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (s 'a0) 'a0))) -> ('a2 : (= nat 'a0 (+ (s (+ (s 'a0) 'a0)) 'a0)))  -> ('a3 : (= nat (+ (s 'a0) (+ 'a0 'a0)) 'a0)) -> (= nat 'a0 (+ (s 'a0) (+ 'a0 (+ (s 'a0) 'a0))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (s 'a0) 'a0))) -> ('a2 : (= nat 'a0 (+ (s (+ (s 'a0) 'a0)) 'a0))) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= (+ (s z) (+ z (+ z z))) z)) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> ('a4 : (= (+ z (+ z z)) z)) -> (= z (s (+ z (+ z z))))]",
        "problem_raw": "[ ('a0 :(= nat (+ (s z) (+ z (+ z z))) z) ) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= nat z (+ z (+ z z)))) -> ('a4 : (= nat (+ z (+ z z)) z)) -> (= nat z (s (+ z (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (s z) (+ z (+ z z))) z) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= z 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= 'a0 'a0)) -> ('a5 : (= z 'a0)) -> ('a6 : (= 'a0 'a0)) -> (= (s 'a0) 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 'a0)) -> ('a5 : (= nat z 'a0)) -> ('a6 : (= nat 'a0 'a0))  -> (= nat (s 'a0) 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 'a0)) -> ('a5 : (= nat z 'a0)) -> ('a6 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 (s (+ (+ 'a0 (s z)) z))) z))) -> (= (+ 'a0 (s (+ (+ 'a0 (s z)) z))) (s (+ 'a0 z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 (s (+ (+ 'a0 (s z)) z))) z))) -> (= nat (+ 'a0 (s (+ (+ 'a0 (s z)) z))) (s (+ 'a0 z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= (+ z (+ z (+ z (+ z z)))) (+ z (+ z (+ z (+ z z)))))) -> ('a1 : nat) -> ('a2 : (= z (+ z (+ z z)))) -> (= z (+ z (+ 'a1 (+ z z))))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (+ z (+ z (+ z z)))) (+ z (+ z (+ z (+ z z))))) ) -> ('a1 : nat) -> ('a2 : (= nat z (+ z (+ z z)))) -> (= nat z (+ z (+ 'a1 (+ z z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (+ z (+ z (+ z z)))) (+ z (+ z (+ z (+ z z))))) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= (+ (s z) z) (s z))) -> ('a1 : nat) -> ('a2 : (= 'a1 (+ (s z) (+ (s z) z)))) -> (= 'a1 (+ (s z) (s z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ (s z) z) (s z)) ) -> ('a1 : nat) -> ('a2 : (= nat 'a1 (+ (s z) (+ (s z) z)))) -> (= nat 'a1 (+ (s z) (s z)))]",
        "proof": [
            "theorem t : [('a0 : (= (+ (s z) z) (s z))) -> ('a1 : nat) -> ('a2 : (= 'a1 (+ (s z) (+ (s z) z)))) -> (= 'a1 (+ (s z) (s z)))] {",
            "intro x : (= (+ (s z) z) (s z)).",
            "intro x0 : nat.",
            "intro x1 : (= x0 (+ (s z) (+ (s z) z))).",
            "show (= x0 (+ (s z) (s z))) by rewrite.",
            "}"
        ],
        "logprob": -5.696772765749177,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "c rewrite",
            "=> (= x0 (+ (s z) (s z)))."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (s z) z) (s z)) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= (+ (s z) z) (+ (s z) z))) -> ('a1 : nat) -> ('a2 : (= (s (+ (s z) (+ (s z) z))) z)) -> ('a3 : nat) -> (= (s (+ z (+ (s z) z))) (s (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ (s z) z) (+ (s z) z)) ) -> ('a1 : nat) -> ('a2 : (= nat (s (+ (s z) (+ (s z) z))) z)) -> ('a3 : nat) -> (= nat (s (+ z (+ (s z) z))) (s (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (s z) z) (+ (s z) z)) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= 'a0 'a0)) -> ('a5 : (= z (+ 'a0 'a0))) -> (= (+ 'a0 'a0) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat 'a0 'a0))  -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 'a0)) -> ('a5 : (= nat z (+ 'a0 'a0))) -> (= nat (+ 'a0 'a0) z)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= 'a0 'a0)) -> ('a5 : (= z (+ 'a0 'a0))) -> (= (+ 'a0 'a0) z)] {",
            "intro x : nat.",
            "intro x0 : (= x z).",
            "intro x1 : (= x x).",
            "intro x2 : (= x x).",
            "intro x3 : (= x x).",
            "intro x4 : (= z (+ x x)).",
            "apply c0307.",
            "}"
        ],
        "logprob": -6.814746804641328,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "a c0307",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= (+ (+ z z) z) z)) -> ('a1 : (= z (+ (+ z z) (+ (s (+ z z)) z)))) -> (= z (+ (+ z (+ (+ z z) (+ (s (+ z z)) z))) (+ (s (+ z z)) z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z z) z) z) ) -> ('a1 : (= nat z (+ (+ z z) (+ (s (+ z z)) z)))) -> (= nat z (+ (+ z (+ (+ z z) (+ (s (+ z z)) z))) (+ (s (+ z z)) z)))]",
        "proof": [
            "theorem t : [('a0 : (= (+ (+ z z) z) z)) -> ('a1 : (= z (+ (+ z z) (+ (s (+ z z)) z)))) -> (= z (+ (+ z (+ (+ z z) (+ (s (+ z z)) z))) (+ (s (+ z z)) z)))] {",
            "intro x : (= (+ (+ z z) z) z).",
            "intro x0 : (= z (+ (+ z z) (+ (s (+ z z)) z))).",
            "show (= z (+ (+ z (+ (+ z z) (+ (s (+ z z)) z))) (+ (s (+ z z)) z))) by rewrite.",
            "}"
        ],
        "logprob": -6.536188957451354,
        "actions": [
            "intro.",
            "intro.",
            "c rewrite",
            "=> (= z (+ (+ z (+ (+ z z) (+ (s (+ z z)) z))) (+ (s (+ z z)) z)))."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z z) z) z) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= z (s (+ z (+ z (+ z z)))))) -> ('a1 : nat) -> ('a2 : (= z (+ z (+ z z)))) -> ('a3 : (= (s (+ z (+ z z))) z)) -> (= z (s (+ z (+ z (+ z z)))))]",
        "problem_raw": "[('a0 : (= nat z (s (+ z (+ z (+ z z)))))) -> ('a1 : nat) -> ('a2 : (= nat z (+ z (+ z z)))) -> ('a3 : (= nat (s (+ z (+ z z))) z)) -> (= nat z (s (+ z (+ z (+ z z)))))]",
        "proof": [
            "theorem t : [('a0 : (= z (s (+ z (+ z (+ z z)))))) -> ('a1 : nat) -> ('a2 : (= z (+ z (+ z z)))) -> ('a3 : (= (s (+ z (+ z z))) z)) -> (= z (s (+ z (+ z (+ z z)))))] {",
            "intro x : (= z (s (+ z (+ z (+ z z))))).",
            "intro x0 : nat.",
            "intro x1 : (= z (+ z (+ z z))).",
            "intro _ : [('a3 : (= (s (+ z (+ z z))) z)) -> (= z (s (+ z (+ z (+ z z)))))].",
            "}"
        ],
        "logprob": -5.46152660242605,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= (+ 'a0 'a0) (+ 'a0 (+ (+ (s 'a0) 'a0) 'a0)))) -> (= (+ 'a0 (+ (+ (s 'a0) 'a0) 'a0)) (+ 'a0 (+ (+ (s 'a0) 'a0) 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= nat (+ 'a0 'a0) (+ 'a0 (+ (+ (s 'a0) 'a0) 'a0)))) -> (= nat (+ 'a0 (+ (+ (s 'a0) 'a0) 'a0)) (+ 'a0 (+ (+ (s 'a0) 'a0) 'a0)))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= (+ 'a0 'a0) (+ 'a0 (+ (+ (s 'a0) 'a0) 'a0)))) -> (= (+ 'a0 (+ (+ (s 'a0) 'a0) 'a0)) (+ 'a0 (+ (+ (s 'a0) 'a0) 'a0)))] {",
            "intro x : nat.",
            "intro x0 : (= x (+ (+ (s x) x) x)).",
            "intro x1 : (= (+ x x) (+ x (+ (+ (s x) x) x))).",
            "apply c0014.",
            "}"
        ],
        "logprob": -5.064141395486139,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "a c0014",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 z)) -> ('a3 : (= z (+ 'a0 'a0))) -> ('a4 : (= z (+ 'a0 'a0))) -> (= z (+ 'a0 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0))  -> ('a2 : (= nat 'a0 z)) -> ('a3 : (= nat z (+ 'a0 'a0))) -> ('a4 : (= nat z (+ 'a0 'a0))) -> (= nat z (+ 'a0 'a0))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 z)) -> ('a3 : (= z (+ 'a0 'a0))) -> ('a4 : (= z (+ 'a0 'a0))) -> (= z (+ 'a0 'a0))] {",
            "intro x : nat.",
            "intro x0 : (= x x).",
            "intro x1 : (= x z).",
            "intro x2 : (= z (+ x x)).",
            "intro _ : [('a4 : (= z (+ x x))) -> (= z (+ x x))].",
            "}"
        ],
        "logprob": -3.7044311375527985,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ (+ z z) (+ z z)))) -> (= (+ (+ z z) (s z)) (+ (+ (+ (+ z z) (+ z z)) z) (s z)))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z (+ (+ z z) (+ z z)))) -> (= nat (+ (+ z z) (s z)) (+ (+ (+ (+ z z) (+ z z)) z) (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= (+ (+ z z) z) (+ z z))) -> ('a1 : (= z (+ (+ z (+ (+ z z) z)) z))) -> (= z (+ (+ z z) (+ (+ z (+ (+ z z) z)) z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z z) z) (+ z z)) ) -> ('a1 : (= nat z (+ (+ z (+ (+ z z) z)) z))) -> (= nat z (+ (+ z z) (+ (+ z (+ (+ z z) z)) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z z) z) (+ z z)) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (s (+ z (+ z z))) z)) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> ('a4 : (= z (+ z (+ (+ z 'a2) (+ z z))))) -> (= z (s z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (s (+ z (+ z z))) z)) -> ('a2 : nat) -> ('a3 : (= nat z (+ z (+ z z)))) -> ('a4 : (= nat z (+ z (+ (+ z 'a2) (+ z z))))) -> (= nat z (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (s z))) -> ('a2 : (= (+ (+ z z) z) (s z))) -> ('a3 : (= z (s (+ (+ z z) z)))) -> (= (+ (+ z z) z) (s (s (+ (+ z z) z))))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z (s z))) -> ('a2 : (= nat (+ (+ z z) z) (s z))) -> ('a3 : (= nat z (s (+ (+ z z) z)))) -> (= nat (+ (+ z z) z) (s (s (+ (+ z z) z))))]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> ('a1 : (= z (s z))) -> ('a2 : (= (+ (+ z z) z) (s z))) -> ('a3 : (= z (s (+ (+ z z) z)))) -> (= (+ (+ z z) z) (s (s (+ (+ z z) z))))] {",
            "intro x : (= z z).",
            "intro x0 : (= z (s z)).",
            "intro x1 : (= (+ (+ z z) z) (s z)).",
            "intro x2 : (= z (s (+ (+ z z) z))).",
            "show (= (+ (+ z z) z) (s (s (+ (+ z z) z)))) by rewrite.",
            "}"
        ],
        "logprob": -7.1826318315854385,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "c rewrite",
            "=> (= (+ (+ z z) z) (s (s (+ (+ z z) z))))."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 (+ (+ 'a0 z) 'a0))) -> (= 'a0 (+ (+ 'a0 z) (+ (+ 'a0 z) 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0))  -> ('a3 : (= nat 'a0 (+ (+ 'a0 z) 'a0))) -> (= nat 'a0 (+ (+ 'a0 z) (+ (+ 'a0 z) 'a0)))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 (+ (+ 'a0 z) 'a0))) -> (= 'a0 (+ (+ 'a0 z) (+ (+ 'a0 z) 'a0)))] {",
            "intro x : nat.",
            "intro x0 : (= x x).",
            "intro x1 : (= x x).",
            "intro x2 : (= x (+ (+ x z) x)).",
            "show (= x (+ (+ x z) (+ (+ x z) x))) by rewrite.",
            "}"
        ],
        "logprob": -5.6537282407220735,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "c rewrite",
            "=> (= x (+ (+ x z) (+ (+ x z) x)))."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= z (+ (+ z (s (+ (+ (+ z (s z)) z) z))) z))) -> (= (s (s (+ z (+ (+ (+ (+ z (s (+ (+ z (s z)) z))) z) z) z)))) (s (+ z z)))]",
        "problem_raw": "[('a0 : (= nat z (+ (+ z (s (+ (+ (+ z (s z)) z) z))) z))) -> (= nat (s (s (+ z (+ (+ (+ (+ z (s (+ (+ z (s z)) z))) z) z) z)))) (s (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= (+ (+ 'a0 'a0) 'a0) (s 'a0))) -> ('a3 : (= 'a0 (s (+ (+ 'a0 'a0) 'a0)))) -> (= z (+ (+ 'a0 (s (+ (+ 'a0 'a0) 'a0))) 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat (+ (+ 'a0 'a0) 'a0) (s 'a0))) -> ('a3 : (= nat 'a0 (s (+ (+ 'a0 'a0) 'a0)))) -> (= nat z (+ (+ 'a0 (s (+ (+ 'a0 'a0) 'a0))) 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 z) (+ z z)))) -> (= 'a0 (+ (+ 'a0 z) (+ z (+ (+ 'a0 z) (+ z z)))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 z) (+ z z)))) -> (= nat 'a0 (+ (+ 'a0 z) (+ z (+ (+ 'a0 z) (+ z z)))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= z (+ 'a0 'a0))) -> ('a4 : (= z (+ (+ 'a0 'a0) (s 'a0)))) -> (= z (+ (+ 'a0 'a0) (s 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= nat z (+ 'a0 'a0))) -> ('a4 : (= nat z (+ (+ 'a0 'a0) (s 'a0)))) -> (= nat z (+ (+ 'a0 'a0) (s 'a0)))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= z (+ 'a0 'a0))) -> ('a4 : (= z (+ (+ 'a0 'a0) (s 'a0)))) -> (= z (+ (+ 'a0 'a0) (s 'a0)))] {",
            "intro x : nat.",
            "intro x0 : (= x (s x)).",
            "intro x1 : (= z (+ (+ x x) (s x))).",
            "intro x2 : (= z (+ x x)).",
            "intro _ : [('a4 : (= z (+ (+ x x) (s x)))) -> (= z (+ (+ x x) (s x)))].",
            "}"
        ],
        "logprob": -4.2571362939515485,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= (+ (+ z (s z)) z) (+ (+ z (s z)) z))) -> (= z (+ (+ (+ (+ z (s z)) z) (s z)) (s z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z (s z)) z) (+ (+ z (s z)) z)) ) -> (= nat z (+ (+ (+ (+ z (s z)) z) (s z)) (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z (s z)) z) (+ (+ z (s z)) z)) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= z (+ z (+ (+ z z) z)))) -> ('a1 : nat) -> ('a2 : (= z (+ z (+ z z)))) -> (= z (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z (+ z (+ (+ z z) z))) ) -> ('a1 : nat) -> ('a2 : (= nat z (+ z (+ z z)))) -> (= nat z (+ z (+ z z)))]",
        "proof": [
            "theorem t : [('a0 : (= z (+ z (+ (+ z z) z)))) -> ('a1 : nat) -> ('a2 : (= z (+ z (+ z z)))) -> (= z (+ z (+ z z)))] {",
            "intro x : (= z (+ z (+ (+ z z) z))).",
            "intro x0 : nat.",
            "intro _ : [('a2 : (= z (+ z (+ z z)))) -> (= z (+ z (+ z z)))].",
            "}"
        ],
        "logprob": -4.479581702599095,
        "actions": [
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z (+ (+ z z) z))) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= (+ z (s z)) (+ z (s z)))) -> ('a1 : (= z (+ (+ z (s (s z))) (s z)))) -> (= (+ (+ (+ z (s (s z))) z) (s z)) (s (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (s z)) (+ z (s z))) ) -> ('a1 : (= nat z (+ (+ z (s (s z))) (s z)))) -> (= nat (+ (+ (+ z (s (s z))) z) (s z)) (s (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (s z)) (+ z (s z))) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (s (+ z z)) z)) -> ('a2 : (= z (+ (s z) (+ z z)))) -> (= z (s (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (s (+ z z)) z)) -> ('a2 : (= nat z (+ (s z) (+ z z)))) -> (= nat z (s (+ z z)))]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> ('a1 : (= (s (+ z z)) z)) -> ('a2 : (= z (+ (s z) (+ z z)))) -> (= z (s (+ z z)))] {",
            "intro x : (= z z).",
            "intro x0 : (= (s (+ z z)) z).",
            "show (= z (s (+ z z))) by eq_symm.",
            "intro _ : [('a2 : (= z (+ (s z) (+ z z)))) -> (= z (s (+ z z)))].",
            "}"
        ],
        "logprob": -3.7261220835290274,
        "actions": [
            "intro.",
            "intro.",
            "c eq_symm",
            "=> (= z (s (+ z z))).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= (+ 'a0 'a0) 'a0)) -> ('a2 : nat) -> ('a3 : (= 'a0 (+ 'a0 (+ z 'a0)))) -> (= z (+ 'a0 (+ z 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (+ 'a0 'a0) 'a0)) -> ('a2 : nat) -> ('a3 : (= nat 'a0 (+ 'a0 (+ z 'a0)))) -> (= nat z (+ 'a0 (+ z 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= 'a0 z)) -> ('a5 : (= (+ 'a0 'a0) 'a0)) -> (= 'a0 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 z)) -> ('a5 : (= nat (+ 'a0 'a0) 'a0)) -> (= nat 'a0 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= 'a0 z)) -> ('a5 : (= (+ 'a0 'a0) 'a0)) -> (= 'a0 'a0)] {",
            "intro x : nat.",
            "intro x0 : (= z x).",
            "intro x1 : (= x x).",
            "intro x2 : (= x x).",
            "intro x3 : (= x z).",
            "intro _ : [('a5 : (= (+ x x) x)) -> (= x x)].",
            "}"
        ],
        "logprob": -4.2950804744792235,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : nat) -> ('a3 : (= z 'a0)) -> ('a4 : (= z 'a0)) -> ('a5 : nat) -> ('a6 : (= 'a0 'a0)) -> (= 'a0 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : nat) -> ('a3 : (= nat z 'a0)) -> ('a4 : (= nat z 'a0)) -> ('a5 : nat) -> ('a6 : (= nat 'a0 'a0)) -> (= nat 'a0 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : nat) -> ('a3 : (= z 'a0)) -> ('a4 : (= z 'a0)) -> ('a5 : nat) -> ('a6 : (= 'a0 'a0)) -> (= 'a0 'a0)] {",
            "intro x : nat.",
            "intro x0 : (= z x).",
            "intro x1 : nat.",
            "intro x2 : (= z x).",
            "intro x3 : (= z x).",
            "intro x4 : nat.",
            "intro _ : [('a6 : (= x x)) -> (= x x)].",
            "}"
        ],
        "logprob": -5.95539912323033,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= (+ z (s z)) (s (+ z z)))) -> ('a1 : (= z (+ (+ z (s (+ z z))) (s z)))) -> (= (s (+ (+ z (s (+ z z))) z)) (s (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (s z)) (s (+ z z))) ) -> ('a1 : (= nat z (+ (+ z (s (+ z z))) (s z)))) -> (= nat (s (+ (+ z (s (+ z z))) z)) (s (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (s z)) (s (+ z z))) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= z 'a0)) -> ('a3 : (= z 'a0)) -> ('a4 : (= 'a0 'a0)) -> ('a5 : (= z (+ z 'a0))) -> (= z z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat z 'a0)) -> ('a4 : (= nat 'a0 'a0)) -> ('a5 : (= nat z (+ z 'a0))) -> (= nat z z)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= z 'a0)) -> ('a3 : (= z 'a0)) -> ('a4 : (= 'a0 'a0)) -> ('a5 : (= z (+ z 'a0))) -> (= z z)] {",
            "intro x : nat.",
            "intro x0 : (= x x).",
            "intro x1 : (= z x).",
            "intro x2 : (= z x).",
            "intro x3 : (= x x).",
            "intro x4 : (= z (+ z x)).",
            "apply c0014.",
            "}"
        ],
        "logprob": -6.785507694497272,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "a c0014",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 z) (s z)))) -> ('a2 : (= (+ (+ 'a0 z) (+ z (s z))) z)) -> (= z (+ (+ 'a0 z) (s z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 z) (s z)))) -> ('a2 : (= nat (+ (+ 'a0 z) (+ z (s z))) z)) -> (= nat z (+ (+ 'a0 z) (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ (+ z z) z))) -> ('a2 : (= z (+ (+ z z) (+ (+ z z) z)))) -> (= z (+ (+ z z) (+ (+ z z) z)))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z (+ (+ z z) z))) -> ('a2 : (= nat z (+ (+ z z) (+ (+ z z) z)))) -> (= nat z (+ (+ z z) (+ (+ z z) z)))]",
        "proof": [
            "theorem t : [('a0 : (= z z)) -> ('a1 : (= z (+ (+ z z) z))) -> ('a2 : (= z (+ (+ z z) (+ (+ z z) z)))) -> (= z (+ (+ z z) (+ (+ z z) z)))] {",
            "intro x : (= z z).",
            "intro x0 : (= z (+ (+ z z) z)).",
            "intro _ : [('a2 : (= z (+ (+ z z) (+ (+ z z) z)))) -> (= z (+ (+ z z) (+ (+ z z) z)))].",
            "}"
        ],
        "logprob": -2.9073387695314277,
        "actions": [
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= z 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= 'a0 z)) -> ('a5 : nat) -> ('a6 : (= z 'a0)) -> (= 'a0 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 z))  -> ('a5 : nat) -> ('a6 : (= nat z 'a0)) -> (= nat 'a0 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= z 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= 'a0 z)) -> ('a5 : nat) -> ('a6 : (= z 'a0)) -> (= 'a0 'a0)] {",
            "intro x : nat.",
            "intro x0 : (= z x).",
            "intro x1 : (= z x).",
            "intro x2 : (= x x).",
            "intro x3 : (= x z).",
            "intro x4 : nat.",
            "intro _ : [('a6 : (= z x)) -> (= x x)].",
            "}"
        ],
        "logprob": -4.8179724834891084,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 z)) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= (+ (+ 'a0 'a0) 'a0) (s 'a0))) -> ('a3 : (= (+ (+ 'a0 'a0) (s 'a0)) (+ (+ 'a0 'a0) (s 'a0)))) -> (= 'a0 (s (s 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat (+ (+ 'a0 'a0) 'a0) (s 'a0))) -> ('a3 : (= nat (+ (+ 'a0 'a0) (s 'a0)) (+ (+ 'a0 'a0) (s 'a0)))) -> (= nat 'a0 (s (s 'a0)))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= (+ (+ 'a0 'a0) 'a0) (s 'a0))) -> ('a3 : (= (+ (+ 'a0 'a0) (s 'a0)) (+ (+ 'a0 'a0) (s 'a0)))) -> (= 'a0 (s (s 'a0)))] {",
            "intro x : nat.",
            "intro x0 : (= x (s x)).",
            "intro x1 : (= (+ (+ x x) x) (s x)).",
            "intro x2 : (= (+ (+ x x) (s x)) (+ (+ x x) (s x))).",
            "show (= x (s (s x))) by rewrite.",
            "}"
        ],
        "logprob": -6.798571314523273,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "c rewrite",
            "=> (= x (s (s x)))."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= z (+ (+ z (+ (+ z z) z)) z))) -> (= z (+ (+ z (+ (+ z z) (+ (+ z z) z))) z))]",
        "problem_raw": "[ ('a0 :(= nat z (+ (+ z (+ (+ z z) z)) z)) ) -> (= nat z (+ (+ z (+ (+ z z) (+ (+ z z) z))) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ (+ z (+ (+ z z) z)) z)) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 (+ (+ z z) z)) z))) -> (= 'a0 (+ (+ 'a0 (+ (+ z z) z)) z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 (+ (+ z z) z)) z))) -> (= nat 'a0 (+ (+ 'a0 (+ (+ z z) z)) z))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 (+ (+ z z) z)) z))) -> (= 'a0 (+ (+ 'a0 (+ (+ z z) z)) z))] {",
            "intro x : nat.",
            "intro _ : [('a1 : (= x (+ (+ x (+ (+ z z) z)) z))) -> (= x (+ (+ x (+ (+ z z) z)) z))].",
            "}"
        ],
        "logprob": -1.7023499304911285,
        "actions": [
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= z (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= (+ (s 'a0) 'a0) (+ (s 'a0) (+ (s 'a0) 'a0)))) -> ('a3 : (= (+ (s 'a0) (+ (s 'a0) 'a0)) (+ (s 'a0) (+ (s 'a0) 'a0)))) -> (= 'a0 (+ (s (+ (s (+ (s 'a0) 'a0)) 'a0)) 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= nat (+ (s 'a0) 'a0) (+ (s 'a0) (+ (s 'a0) 'a0)))) -> ('a3 : (= nat (+ (s 'a0) (+ (s 'a0) 'a0)) (+ (s 'a0) (+ (s 'a0) 'a0))))  -> (= nat 'a0 (+ (s (+ (s (+ (s 'a0) 'a0)) 'a0)) 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat z (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= nat (+ (s 'a0) 'a0) (+ (s 'a0) (+ (s 'a0) 'a0)))) -> ('a3 : (= nat (+ (s 'a0) (+ (s 'a0) 'a0)) (+ (s 'a0) (+ (s 'a0) 'a0)))) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= (+ (+ z z) z) (+ (+ z z) z))) -> ('a1 : nat) -> ('a2 : (= z (+ z (+ z z)))) -> (= z (+ z (+ (s (+ z (s z))) z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z z) z) (+ (+ z z) z)) ) -> ('a1 : nat) -> ('a2 : (= nat z (+ z (+ z z)))) -> (= nat z (+ z (+ (s (+ z (s z))) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z z) z) (+ (+ z z) z)) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= (s (+ z z)) (s (+ z z)))) -> ('a1 : (= z (+ (s z) z))) -> ('a2 : (= z (+ z (+ z z)))) -> (= (+ z (+ z (+ z z))) z)]",
        "problem_raw": "[('a0 : (= nat (s (+ z z)) (s (+ z z)))) -> ('a1 : (= nat z (+ (s z) z))) -> ('a2 : (= nat z (+ z (+ z z)))) -> (= nat (+ z (+ z (+ z z))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ z 'a0))) -> ('a2 : (= z (+ 'a0 (+ z (+ z z))))) -> ('a3 : (= (+ 'a0 (+ z (+ z z))) z)) -> (= z (+ (+ (s 'a0) (+ z (+ z z))) 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ z 'a0))) -> ('a2 : (= nat z (+ 'a0 (+ z (+ z z))))) -> ('a3 : (= nat (+ 'a0 (+ z (+ z z))) z))  -> (= nat z (+ (+ (s 'a0) (+ z (+ z z))) 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ z 'a0))) -> ('a2 : (= nat z (+ 'a0 (+ z (+ z z))))) -> ('a3 : (= nat (+ 'a0 (+ z (+ z z))) z)) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= (+ (+ (+ 'a0 'a0) 'a0) (s z)) (+ (+ (+ 'a0 'a0) 'a0) (s z)))) -> (= z (+ (+ (+ 'a0 'a0) 'a0) (s z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat (+ (+ (+ 'a0 'a0) 'a0) (s z)) (+ (+ (+ 'a0 'a0) 'a0) (s z))))  -> (= nat z (+ (+ (+ 'a0 'a0) 'a0) (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat (+ (+ (+ 'a0 'a0) 'a0) (s z)) (+ (+ (+ 'a0 'a0) 'a0) (s z)))) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= (+ (+ z z) z) (+ z z))) -> ('a1 : (= (+ z (+ z (+ (s (+ z (s z))) z))) (+ (+ z (+ z z)) z))) -> (= (+ z (s (+ z (+ z z)))) (s (+ z (s z))))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z z) z) (+ z z)) ) -> ('a1 : (= nat (+ z (+ z (+ (s (+ z (s z))) z))) (+ (+ z (+ z z)) z))) -> (= nat (+ z (s (+ z (+ z z)))) (s (+ z (s z))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z z) z) (+ z z)) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z z)) -> ('a2 : (= z (s z))) -> ('a3 : (= z (s z))) -> ('a4 : (= z (s z))) -> (= (+ (+ z z) z) (s z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z z)) -> ('a2 : (= nat z (s z))) -> ('a3 : (= nat z (s z))) -> ('a4 : (= nat z (s z))) -> (= nat (+ (+ z z) z) (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= (+ z (s z)) (+ z (s z)))) -> ('a1 : (= z (+ (+ z (s (s z))) (s z)))) -> (= (+ (+ (+ z (s (s z))) (s z)) (s z)) (s (+ (+ (+ z (s (s z))) (s z)) z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (s z)) (+ z (s z))) ) -> ('a1 : (= nat z (+ (+ z (s (s z))) (s z)))) -> (= nat (+ (+ (+ z (s (s z))) (s z)) (s z)) (s (+ (+ (+ z (s (s z))) (s z)) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (s z)) (+ z (s z))) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 (+ (+ z 'a0) 'a0))) -> ('a3 : (= (+ 'a0 (s 'a0)) (+ 'a0 (s 'a0)))) -> (= (+ (+ z 'a0) 'a0) (+ (+ z 'a0) 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 (+ (+ z 'a0) 'a0))) -> ('a3 : (= nat (+ 'a0 (s 'a0)) (+ 'a0 (s 'a0))))  -> (= nat (+ (+ z 'a0) 'a0) (+ (+ z 'a0) 'a0))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 (+ (+ z 'a0) 'a0))) -> ('a3 : (= (+ 'a0 (s 'a0)) (+ 'a0 (s 'a0)))) -> (= (+ (+ z 'a0) 'a0) (+ (+ z 'a0) 'a0))] {",
            "intro x : nat.",
            "intro x0 : (= x x).",
            "intro x1 : (= x (+ (+ z x) x)).",
            "intro x2 : (= (+ x (s x)) (+ x (s x))).",
            "apply c0014.",
            "}"
        ],
        "logprob": -5.614421691963811,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "a c0014",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 (+ (+ z 'a0) 'a0))) -> ('a3 : (= nat (+ 'a0 (s 'a0)) (+ 'a0 (s 'a0)))) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ 'a0 (+ z 'a0)))) -> (= 'a0 (+ (+ 'a0 (+ z 'a0)) z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ 'a0 (+ z 'a0)))) -> (= nat 'a0 (+ (+ 'a0 (+ z 'a0)) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= (+ z z) (+ z z))) -> ('a1 : (= (+ (+ z (+ z z)) (+ (s (+ z z)) z)) (+ z z))) -> (= z (+ (+ (+ z z) z) (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) (+ z z)) ) -> ('a1 : (= nat (+ (+ z (+ z z)) (+ (s (+ z z)) z)) (+ z z))) -> (= nat z (+ (+ (+ z z) z) (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) (+ z z)) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= z (+ (+ 'a0 'a0) (s 'a0)))) -> (= z (+ (+ 'a0 'a0) (s 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= nat z (+ (+ 'a0 'a0) (s 'a0))))  -> (= nat z (+ (+ 'a0 'a0) (s 'a0)))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= z (+ (+ 'a0 'a0) (s 'a0)))) -> (= z (+ (+ 'a0 'a0) (s 'a0)))] {",
            "intro x : nat.",
            "intro x0 : (= x (s x)).",
            "intro x1 : (= z (+ (+ x x) (s x))).",
            "intro _ : [('a3 : (= z (+ (+ x x) (s x)))) -> (= z (+ (+ x x) (s x)))].",
            "}"
        ],
        "logprob": -3.588875170010425,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= nat z (+ (+ 'a0 'a0) (s 'a0)))) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= z (+ (+ z (s (+ (+ (+ z (s z)) z) z))) z))) -> (= z (+ (+ z (s (+ (+ (s (+ z z)) z) z))) z))]",
        "problem_raw": "[('a0 : (= nat z (+ (+ z (s (+ (+ (+ z (s z)) z) z))) z))) -> (= nat z (+ (+ z (s (+ (+ (s (+ z z)) z) z))) z))]",
        "proof": [
            "theorem t : [('a0 : (= z (+ (+ z (s (+ (+ (+ z (s z)) z) z))) z))) -> (= z (+ (+ z (s (+ (+ (s (+ z z)) z) z))) z))] {",
            "intro x : (= z (+ (+ z (s (+ (+ (+ z (s z)) z) z))) z)).",
            "show (= (+ z (s z)) (s (+ z z))) by +_s.",
            "show (= z (+ (+ z (s (+ (+ (s (+ z z)) z) z))) z)) by rewrite.",
            "}"
        ],
        "logprob": -6.406563282036635,
        "actions": [
            "intro.",
            "c +_s",
            "=> (= (+ z (s z)) (s (+ z z))).",
            "c rewrite",
            "=> (= z (+ (+ z (s (+ (+ (s (+ z z)) z) z))) z))."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= z (+ (+ z (s (+ (+ (+ z (s z)) z) z))) z))) -> (= z (+ (+ z (s (+ (+ (+ z (s z)) z) z))) z))]",
        "problem_raw": "[('a0 : (= nat z (+ (+ z (s (+ (+ (+ z (s z)) z) z))) z))) -> (= nat z (+ (+ z (s (+ (+ (+ z (s z)) z) z))) z))]",
        "proof": [
            "theorem t : [('a0 : (= z (+ (+ z (s (+ (+ (+ z (s z)) z) z))) z))) -> (= z (+ (+ z (s (+ (+ (+ z (s z)) z) z))) z))] {",
            "intro _ : [('a0 : (= z (+ (+ z (s (+ (+ (+ z (s z)) z) z))) z))) -> (= z (+ (+ z (s (+ (+ (+ z (s z)) z) z))) z))].",
            "}"
        ],
        "logprob": -0.8653123113372958,
        "actions": [
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (s (+ z (+ z z))) z)) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> ('a4 : (= (+ z (+ z z)) z)) -> (= (+ z (+ (+ 'a2 (+ z z)) z)) z)]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (s (+ z (+ z z))) z)) -> ('a2 : nat) -> ('a3 : (= nat z (+ z (+ z z)))) -> ('a4 : (= nat (+ z (+ z z)) z)) -> (= nat (+ z (+ (+ 'a2 (+ z z)) z)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= (+ z (+ z z)) (+ z (+ z z)))) -> ('a1 : (= z (+ (+ z z) z))) -> (= (+ (+ z z) z) (s (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (+ z z)) (+ z (+ z z))) ) -> ('a1 : (= nat z (+ (+ z z) z))) -> (= nat (+ (+ z z) z) (s (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (+ z z)) (+ z (+ z z))) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= z (+ z (+ z z)))) -> ('a1 : (= (+ (+ z z) (+ z z)) z)) -> ('a2 : nat) -> ('a3 : (= z (+ z z))) -> ('a4 : (= (+ z z) (+ z (+ z z)))) -> (= z (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat z (+ z (+ z z))) ) -> ('a1 : (= nat (+ (+ z z) (+ z z)) z)) -> ('a2 : nat) -> ('a3 : (= nat z (+ z z))) -> ('a4 : (= nat (+ z z) (+ z (+ z z)))) -> (= nat z (+ z z))]",
        "proof": [
            "theorem t : [('a0 : (= z (+ z (+ z z)))) -> ('a1 : (= (+ (+ z z) (+ z z)) z)) -> ('a2 : nat) -> ('a3 : (= z (+ z z))) -> ('a4 : (= (+ z z) (+ z (+ z z)))) -> (= z (+ z z))] {",
            "intro x : (= z (+ z (+ z z))).",
            "intro x0 : (= (+ (+ z z) (+ z z)) z).",
            "intro x1 : nat.",
            "intro x2 : (= z (+ z z)).",
            "intro _ : [('a4 : (= (+ z z) (+ z (+ z z)))) -> (= z (+ z z))].",
            "}"
        ],
        "logprob": -7.528744164279265,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z (+ z z))) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= z z)) -> ('a1 : nat) -> ('a2 : (= (s (+ 'a1 z)) (s (+ 'a1 z)))) -> ('a3 : (= z (+ (+ 'a1 z) (+ z (+ z z))))) -> (= z (s (+ 'a1 (+ (+ 'a1 z) (+ z (+ z z))))))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : nat) -> ('a2 : (= nat (s (+ 'a1 z)) (s (+ 'a1 z)))) -> ('a3 : (= nat z (+ (+ 'a1 z) (+ z (+ z z))))) -> (= nat z (s (+ 'a1 (+ (+ 'a1 z) (+ z (+ z z))))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= (+ 'a0 'a0) 'a0)) -> ('a3 : (= (+ (+ 'a0 'a0) (+ 'a0 'a0)) 'a0)) -> (= 'a0 (+ (+ 'a0 'a0) (+ 'a0 (+ (+ 'a0 'a0) 'a0))))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= nat (+ 'a0 'a0) 'a0)) -> ('a3 : (= nat (+ (+ 'a0 'a0) (+ 'a0 'a0)) 'a0)) -> (= nat 'a0 (+ (+ 'a0 'a0) (+ 'a0 (+ (+ 'a0 'a0) 'a0))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= (s 'a0) (s 'a0))) -> ('a2 : nat) -> ('a3 : (= 'a0 (s 'a0))) -> ('a4 : (= z (+ (+ 'a0 'a0) (s 'a0)))) -> (= (s 'a0) (s (+ (+ 'a0 'a0) 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (s 'a0) (s 'a0)))  -> ('a2 : nat) -> ('a3 : (= nat 'a0 (s 'a0))) -> ('a4 : (= nat z (+ (+ 'a0 'a0) (s 'a0)))) -> (= nat (s 'a0) (s (+ (+ 'a0 'a0) 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat (s 'a0) (s 'a0))) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 (s (+ (+ (+ 'a0 (s z)) z) z))) 'a0))) -> (= 'a0 (+ (+ (+ 'a0 (s z)) z) 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 (s (+ (+ (+ 'a0 (s z)) z) z))) 'a0))) -> (= nat 'a0 (+ (+ (+ 'a0 (s z)) z) 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= (s 'a0) z)) -> ('a2 : (= 'a0 z)) -> ('a3 : (= z (+ 'a0 'a0))) -> ('a4 : (= z (+ z (+ z 'a0)))) -> ('a5 : (= z (+ z (+ z 'a0)))) -> (= z (+ z (+ z 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (s 'a0) z)) -> ('a2 : (= nat 'a0 z)) -> ('a3 : (= nat z (+ 'a0 'a0))) -> ('a4 : (= nat z (+ z (+ z 'a0)))) -> ('a5 : (= nat z (+ z (+ z 'a0))))  -> (= nat z (+ z (+ z 'a0)))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= (s 'a0) z)) -> ('a2 : (= 'a0 z)) -> ('a3 : (= z (+ 'a0 'a0))) -> ('a4 : (= z (+ z (+ z 'a0)))) -> ('a5 : (= z (+ z (+ z 'a0)))) -> (= z (+ z (+ z 'a0)))] {",
            "intro x : nat.",
            "intro x0 : (= (s x) z).",
            "intro x1 : (= x z).",
            "intro x2 : (= z (+ x x)).",
            "intro x3 : (= z (+ z (+ z x))).",
            "intro _ : [('a5 : (= z (+ z (+ z x)))) -> (= z (+ z (+ z x)))].",
            "}"
        ],
        "logprob": -4.526802379823975,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat (s 'a0) z)) -> ('a2 : (= nat 'a0 z)) -> ('a3 : (= nat z (+ 'a0 'a0))) -> ('a4 : (= nat z (+ z (+ z 'a0)))) -> ('a5 : (= nat z (+ z (+ z 'a0)))) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= (+ (s (+ z z)) z) (s (+ z z)))) -> ('a1 : (= z (+ (s z) z))) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> (= z (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ (s (+ z z)) z) (s (+ z z))) ) -> ('a1 : (= nat z (+ (s z) z))) -> ('a2 : nat) -> ('a3 : (= nat z (+ z (+ z z)))) -> (= nat z (+ z (+ z z)))]",
        "proof": [
            "theorem t : [('a0 : (= (+ (s (+ z z)) z) (s (+ z z)))) -> ('a1 : (= z (+ (s z) z))) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> (= z (+ z (+ z z)))] {",
            "intro x : (= (+ (s (+ z z)) z) (s (+ z z))).",
            "intro x0 : (= z (+ (s z) z)).",
            "intro x1 : nat.",
            "intro _ : [('a3 : (= z (+ z (+ z z)))) -> (= z (+ z (+ z z)))].",
            "}"
        ],
        "logprob": -4.752330122597742,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (s (+ z z)) z) (s (+ z z))) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= (+ (+ 'a0 'a0) 'a0) (+ (+ 'a0 'a0) 'a0))) -> ('a3 : (= 'a0 (+ z (+ z 'a0)))) -> (= z (+ z (+ z 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat (+ (+ 'a0 'a0) 'a0) (+ (+ 'a0 'a0) 'a0)))  -> ('a3 : (= nat 'a0 (+ z (+ z 'a0)))) -> (= nat z (+ z (+ z 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat (+ (+ 'a0 'a0) 'a0) (+ (+ 'a0 'a0) 'a0))) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= z (+ z (+ z z)))) -> ('a1 : (= (+ (+ z z) (+ z z)) z)) -> ('a2 : nat) -> ('a3 : (= (+ z z) (+ z z))) -> ('a4 : (= (+ z z) (+ z z))) -> (= z (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat z (+ z (+ z z))) ) -> ('a1 : (= nat (+ (+ z z) (+ z z)) z)) -> ('a2 : nat) -> ('a3 : (= nat (+ z z) (+ z z))) -> ('a4 : (= nat (+ z z) (+ z z))) -> (= nat z (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z (+ z z))) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= (+ z z) (+ z z))) -> ('a1 : (= z (+ (+ (+ z z) z) z))) -> ('a2 : (= z (+ z (+ z z)))) -> (= (+ (+ z z) z) (+ z (+ (+ (+ z z) z) z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) (+ z z)) ) -> ('a1 : (= nat z (+ (+ (+ z z) z) z))) -> ('a2 : (= nat z (+ z (+ z z)))) -> (= nat (+ (+ z z) z) (+ z (+ (+ (+ z z) z) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) (+ z z)) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= 'a0 'a0)) -> ('a5 : (= z 'a0)) -> (= (s (+ 'a0 'a0)) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 'a0)) -> ('a5 : (= nat z 'a0))  -> (= nat (s (+ 'a0 'a0)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat 'a0 'a0)) -> ('a5 : (= nat z 'a0)) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= (+ 'a0 'a0) 'a0)) -> ('a2 : (= z (+ 'a0 'a0))) -> ('a3 : (= z (+ z 'a0))) -> ('a4 : (= z (+ z 'a0))) -> (= 'a0 (+ (+ 'a0 'a0) (+ 'a0 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (+ 'a0 'a0) 'a0)) -> ('a2 : (= nat z (+ 'a0 'a0))) -> ('a3 : (= nat z (+ z 'a0))) -> ('a4 : (= nat z (+ z 'a0))) -> (= nat 'a0 (+ (+ 'a0 'a0) (+ 'a0 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= (+ (+ 'a0 'a0) 'a0) 'a0)) -> ('a3 : (= (+ (+ 'a0 'a0) 'a0) 'a0)) -> (= (+ (+ 'a0 'a0) 'a0) (+ (+ 'a0 'a0) 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat (+ (+ 'a0 'a0) 'a0) 'a0)) -> ('a3 : (= nat (+ (+ 'a0 'a0) 'a0) 'a0))  -> (= nat (+ (+ 'a0 'a0) 'a0) (+ (+ 'a0 'a0) 'a0))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= (+ (+ 'a0 'a0) 'a0) 'a0)) -> ('a3 : (= (+ (+ 'a0 'a0) 'a0) 'a0)) -> (= (+ (+ 'a0 'a0) 'a0) (+ (+ 'a0 'a0) 'a0))] {",
            "intro x : nat.",
            "intro x0 : (= x x).",
            "intro x1 : (= (+ (+ x x) x) x).",
            "intro x2 : (= (+ (+ x x) x) x).",
            "apply c0242.",
            "}"
        ],
        "logprob": -5.318126099598343,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "a c0242",
            "=> ."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat (+ (+ 'a0 'a0) 'a0) 'a0)) -> ('a3 : (= nat (+ (+ 'a0 'a0) 'a0) 'a0)) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= z (+ (+ z z) z))) -> ('a1 : (= z (+ (+ (+ z z) (+ z z)) z))) -> (= (+ (+ (+ (+ z z) z) (+ z z)) z) (+ z z))]",
        "problem_raw": "[ ('a0 :(= nat z (+ (+ z z) z)) ) -> ('a1 : (= nat z (+ (+ (+ z z) (+ z z)) z))) -> (= nat (+ (+ (+ (+ z z) z) (+ z z)) z) (+ z z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ (+ z z) z)) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= (+ z (+ z z)) (+ z (+ z z)))) -> ('a1 : (= z (+ (+ z z) z))) -> ('a2 : (= z (+ z z))) -> (= (+ (+ z z) (+ z z)) z)]",
        "problem_raw": "[ ('a0 :(= nat (+ z (+ z z)) (+ z (+ z z))) ) -> ('a1 : (= nat z (+ (+ z z) z))) -> ('a2 : (= nat z (+ z z))) -> (= nat (+ (+ z z) (+ z z)) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (+ z z)) (+ z (+ z z))) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= (+ (+ z (s z)) z) (+ z (s z)))) -> ('a1 : nat) -> ('a2 : (= z (+ (+ z (s (+ (+ z (s z)) z))) z))) -> (= z (+ (+ z (s (+ (+ z (s z)) z))) z))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z (s z)) z) (+ z (s z))) ) -> ('a1 : nat) -> ('a2 : (= nat z (+ (+ z (s (+ (+ z (s z)) z))) z))) -> (= nat z (+ (+ z (s (+ (+ z (s z)) z))) z))]",
        "proof": [
            "theorem t : [('a0 : (= (+ (+ z (s z)) z) (+ z (s z)))) -> ('a1 : nat) -> ('a2 : (= z (+ (+ z (s (+ (+ z (s z)) z))) z))) -> (= z (+ (+ z (s (+ (+ z (s z)) z))) z))] {",
            "intro x : (= (+ (+ z (s z)) z) (+ z (s z))).",
            "intro x0 : nat.",
            "intro _ : [('a2 : (= z (+ (+ z (s (+ (+ z (s z)) z))) z))) -> (= z (+ (+ z (s (+ (+ z (s z)) z))) z))].",
            "}"
        ],
        "logprob": -3.7608238497751216,
        "actions": [
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z (s z)) z) (+ z (s z))) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= (+ (+ 'a0 'a0) 'a0) (s 'a0))) -> ('a3 : (= 'a0 (s (s 'a0)))) -> (= 'a0 (s (s 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat (+ (+ 'a0 'a0) 'a0) (s 'a0))) -> ('a3 : (= nat 'a0 (s (s 'a0)))) -> (= nat 'a0 (s (s 'a0)))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= (+ (+ 'a0 'a0) 'a0) (s 'a0))) -> ('a3 : (= 'a0 (s (s 'a0)))) -> (= 'a0 (s (s 'a0)))] {",
            "intro x : nat.",
            "intro x0 : (= x (s x)).",
            "intro x1 : (= (+ (+ x x) x) (s x)).",
            "intro _ : [('a3 : (= x (s (s x)))) -> (= x (s (s x)))].",
            "}"
        ],
        "logprob": -3.608131301373077,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= (+ (+ z z) z) (+ z z))) -> ('a1 : (= z (+ (+ z (+ (+ z z) z)) z))) -> (= z (+ (+ z (+ (+ z z) z)) (+ (+ z (+ (+ z z) z)) z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z z) z) (+ z z)) ) -> ('a1 : (= nat z (+ (+ z (+ (+ z z) z)) z))) -> (= nat z (+ (+ z (+ (+ z z) z)) (+ (+ z (+ (+ z z) z)) z)))]",
        "proof": [
            "theorem t : [('a0 : (= (+ (+ z z) z) (+ z z))) -> ('a1 : (= z (+ (+ z (+ (+ z z) z)) z))) -> (= z (+ (+ z (+ (+ z z) z)) (+ (+ z (+ (+ z z) z)) z)))] {",
            "intro x : (= (+ (+ z z) z) (+ z z)).",
            "intro x0 : (= z (+ (+ z (+ (+ z z) z)) z)).",
            "show (= z (+ (+ z (+ (+ z z) z)) (+ (+ z (+ (+ z z) z)) z))) by rewrite.",
            "}"
        ],
        "logprob": -6.430674971315647,
        "actions": [
            "intro.",
            "intro.",
            "c rewrite",
            "=> (= z (+ (+ z (+ (+ z z) z)) (+ (+ z (+ (+ z z) z)) z)))."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z z) z) (+ z z)) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= (+ (+ 'a0 'a0) 'a0) 'a0)) -> ('a3 : (= (+ (+ 'a0 'a0) (+ (s 'a0) 'a0)) 'a0)) -> (= (+ (+ 'a0 'a0) (s 'a0)) (s 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat (+ (+ 'a0 'a0) 'a0) 'a0)) -> ('a3 : (= nat (+ (+ 'a0 'a0) (+ (s 'a0) 'a0)) 'a0)) -> (= nat (+ (+ 'a0 'a0) (s 'a0)) (s 'a0))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= (+ (+ 'a0 'a0) 'a0) 'a0)) -> ('a3 : (= (+ (+ 'a0 'a0) (+ (s 'a0) 'a0)) 'a0)) -> (= (+ (+ 'a0 'a0) (s 'a0)) (s 'a0))] {",
            "intro x : nat.",
            "intro x0 : (= x x).",
            "intro x1 : (= (+ (+ x x) x) x).",
            "intro x2 : (= (+ (+ x x) (+ (s x) x)) x).",
            "show (= (+ (+ x x) (s x)) (s (+ (+ x x) x))) by +_s.",
            "show (= (+ (+ x x) (s x)) (s x)) by rewrite.",
            "}"
        ],
        "logprob": -5.761441085538353,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "c +_s",
            "=> (= (+ (+ x x) (s x)) (s (+ (+ x x) x))).",
            "c rewrite",
            "=> (= (+ (+ x x) (s x)) (s x))."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= z (+ z (s z)))) -> ('a1 : (= z (+ (+ z z) (s z)))) -> ('a2 : (= (+ (+ z z) (+ z (s z))) z)) -> (= (+ z (+ (+ z z) (s z))) z)]",
        "problem_raw": "[('a0 : (= nat z (+ z (s z)))) -> ('a1 : (= nat z (+ (+ z z) (s z)))) -> ('a2 : (= nat (+ (+ z z) (+ z (s z))) z)) -> (= nat (+ z (+ (+ z z) (s z))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= 'a0 (+ (+ (s 'a0) (+ (+ (s 'a0) 'a0) 'a0)) 'a0))) -> (= 'a0 (+ (+ (s 'a0) (+ (+ (s 'a0) 'a0) 'a0)) 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= nat 'a0 (+ (+ (s 'a0) (+ (+ (s 'a0) 'a0) 'a0)) 'a0))) -> (= nat 'a0 (+ (+ (s 'a0) (+ (+ (s 'a0) 'a0) 'a0)) 'a0))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= 'a0 (+ (+ (s 'a0) (+ (+ (s 'a0) 'a0) 'a0)) 'a0))) -> (= 'a0 (+ (+ (s 'a0) (+ (+ (s 'a0) 'a0) 'a0)) 'a0))] {",
            "intro x : nat.",
            "intro x0 : (= x (+ (+ (s x) x) x)).",
            "intro _ : [('a2 : (= x (+ (+ (s x) (+ (+ (s x) x) x)) x))) -> (= x (+ (+ (s x) (+ (+ (s x) x) x)) x))].",
            "}"
        ],
        "logprob": -2.6744306911832627,
        "actions": [
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= z (+ (+ 'a0 z) (+ z z)))) -> (= z (+ (+ 'a0 (+ (+ 'a0 z) (+ z z))) (+ z z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z (+ (+ 'a0 z) (+ z z)))) -> (= nat z (+ (+ 'a0 (+ (+ 'a0 z) (+ z z))) (+ z z)))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= z (+ (+ 'a0 z) (+ z z)))) -> (= z (+ (+ 'a0 (+ (+ 'a0 z) (+ z z))) (+ z z)))] {",
            "intro x : nat.",
            "intro x0 : (= z (+ (+ x z) (+ z z))).",
            "show (= z (+ (+ x (+ (+ x z) (+ z z))) (+ z z))) by rewrite.",
            "}"
        ],
        "logprob": -4.808298809029816,
        "actions": [
            "intro.",
            "intro.",
            "c rewrite",
            "=> (= z (+ (+ x (+ (+ x z) (+ z z))) (+ z z)))."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= (s z) (s z))) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= z (+ 'a1 'a1))) -> (= 'a1 (+ (+ 'a1 'a1) 'a1))]",
        "problem_raw": "[('a0 : (= nat (s z) (s z))) -> ('a1 : nat) -> ('a2 : nat) -> ('a3 : (= nat z (+ 'a1 'a1))) -> (= nat 'a1 (+ (+ 'a1 'a1) 'a1))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= (+ (+ z 'a0) 'a0) 'a0)) -> ('a3 : (= 'a0 (+ (+ z 'a0) (+ (s (+ z (s z))) z)))) -> (= z (+ (s (+ z (s z))) (s z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat (+ (+ z 'a0) 'a0) 'a0)) -> ('a3 : (= nat 'a0 (+ (+ z 'a0) (+ (s (+ z (s z))) z)))) -> (= nat z (+ (s (+ z (s z))) (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= (+ 'a0 'a0) (s 'a0))) -> ('a4 : (= (+ (+ 'a0 'a0) (s 'a0)) z)) -> ('a5 : (= (+ (+ 'a0 'a0) (s 'a0)) z)) -> ('a6 : (= (+ (+ 'a0 'a0) (s 'a0)) z)) -> (= z (s 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= nat (+ 'a0 'a0) (s 'a0))) -> ('a4 : (= nat (+ (+ 'a0 'a0) (s 'a0)) z)) -> ('a5 : (= nat (+ (+ 'a0 'a0) (s 'a0)) z)) -> ('a6 : (= nat (+ (+ 'a0 'a0) (s 'a0)) z))  -> (= nat z (s 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= nat (+ 'a0 'a0) (s 'a0))) -> ('a4 : (= nat (+ (+ 'a0 'a0) (s 'a0)) z)) -> ('a5 : (= nat (+ (+ 'a0 'a0) (s 'a0)) z)) -> ('a6 : (= nat (+ (+ 'a0 'a0) (s 'a0)) z)) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 z) (s z)))) -> ('a2 : (= 'a0 (+ (+ 'a0 z) (s (+ (+ 'a0 z) (s z)))))) -> (= z (+ (+ 'a0 z) (s z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 z) (s z)))) -> ('a2 : (= nat 'a0 (+ (+ 'a0 z) (s (+ (+ 'a0 z) (s z)))))) -> (= nat z (+ (+ 'a0 z) (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= (s (+ z (+ z (+ z z)))) (s (+ z (+ z (+ z z)))))) -> ('a1 : (= z (+ z (+ z z)))) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> ('a4 : (= z (+ z (+ (+ z 'a2) (+ z z))))) -> (= z (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat (s (+ z (+ z (+ z z)))) (s (+ z (+ z (+ z z))))) ) -> ('a1 : (= nat z (+ z (+ z z)))) -> ('a2 : nat) -> ('a3 : (= nat z (+ z (+ z z)))) -> ('a4 : (= nat z (+ z (+ (+ z 'a2) (+ z z))))) -> (= nat z (+ z (+ z z)))]",
        "proof": [
            "theorem t : [('a0 : (= (s (+ z (+ z (+ z z)))) (s (+ z (+ z (+ z z)))))) -> ('a1 : (= z (+ z (+ z z)))) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> ('a4 : (= z (+ z (+ (+ z 'a2) (+ z z))))) -> (= z (+ z (+ z z)))] {",
            "intro x : (= (s (+ z (+ z (+ z z)))) (s (+ z (+ z (+ z z))))).",
            "intro x0 : (= z (+ z (+ z z))).",
            "intro x1 : nat.",
            "intro x2 : (= z (+ z (+ z z))).",
            "intro _ : [('a4 : (= z (+ z (+ (+ z x1) (+ z z))))) -> (= z (+ z (+ z z)))].",
            "}"
        ],
        "logprob": -6.064111318140949,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (s (+ z (+ z (+ z z)))) (s (+ z (+ z (+ z z))))) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= z (+ z z))) -> ('a1 : (= (+ (+ (+ z (+ z z)) (+ z z)) (+ z z)) z)) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> (= z (+ (+ z (+ z z)) (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z (+ z z)) ) -> ('a1 : (= nat (+ (+ (+ z (+ z z)) (+ z z)) (+ z z)) z)) -> ('a2 : nat) -> ('a3 : (= nat z (+ z (+ z z)))) -> (= nat z (+ (+ z (+ z z)) (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z z)) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (s 'a0) 'a0))) -> ('a2 : nat) -> ('a3 : (= 'a0 (+ (s 'a0) (+ (s 'a0) 'a0)))) -> (= 'a0 (+ (s 'a0) (+ (s (+ (s 'a0) 'a0)) 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (s 'a0) 'a0))) -> ('a2 : nat) -> ('a3 : (= nat 'a0 (+ (s 'a0) (+ (s 'a0) 'a0)))) -> (= nat 'a0 (+ (s 'a0) (+ (s (+ (s 'a0) 'a0)) 'a0)))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 (+ (s 'a0) 'a0))) -> ('a2 : nat) -> ('a3 : (= 'a0 (+ (s 'a0) (+ (s 'a0) 'a0)))) -> (= 'a0 (+ (s 'a0) (+ (s (+ (s 'a0) 'a0)) 'a0)))] {",
            "intro x : nat.",
            "intro x0 : (= x (+ (s x) x)).",
            "intro x1 : nat.",
            "intro x2 : (= x (+ (s x) (+ (s x) x))).",
            "show (= x (+ (s x) (+ (s (+ (s x) x)) x))) by rewrite.",
            "}"
        ],
        "logprob": -7.559759069462439,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "c rewrite",
            "=> (= x (+ (s x) (+ (s (+ (s x) x)) x)))."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 (+ (+ z z) z)) z))) -> (= (+ 'a0 (+ (+ 'a0 (+ (+ z z) z)) z)) 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 (+ (+ z z) z)) z))) -> (= nat (+ 'a0 (+ (+ 'a0 (+ (+ z z) z)) z)) 'a0)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= (s z) (s z))) -> ('a1 : nat) -> ('a2 : (= 'a1 (+ (+ 'a1 'a1) 'a1))) -> (= z (+ (+ 'a1 'a1) (+ (+ 'a1 'a1) 'a1)))]",
        "problem_raw": "[('a0 : (= nat (s z) (s z))) -> ('a1 : nat) -> ('a2 : (= nat 'a1 (+ (+ 'a1 'a1) 'a1))) -> (= nat z (+ (+ 'a1 'a1) (+ (+ 'a1 'a1) 'a1)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= (+ z (+ z z)) (+ z (+ z z)))) -> ('a1 : (= (+ (+ z z) (+ z z)) z)) -> ('a2 : (= z (+ z z))) -> (= z (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ z (+ z z)) (+ z (+ z z))) ) -> ('a1 : (= nat (+ (+ z z) (+ z z)) z)) -> ('a2 : (= nat z (+ z z))) -> (= nat z (+ z (+ z z)))]",
        "proof": [
            "theorem t : [('a0 : (= (+ z (+ z z)) (+ z (+ z z)))) -> ('a1 : (= (+ (+ z z) (+ z z)) z)) -> ('a2 : (= z (+ z z))) -> (= z (+ z (+ z z)))] {",
            "intro x : (= (+ z (+ z z)) (+ z (+ z z))).",
            "intro x0 : (= (+ (+ z z) (+ z z)) z).",
            "show (= z z) by rewrite.",
            "intro x1 : (= z (+ z z)).",
            "show (= z (+ z (+ z z))) by rewrite.",
            "}"
        ],
        "logprob": -6.668579266324958,
        "actions": [
            "intro.",
            "intro.",
            "c rewrite",
            "=> (= z z).",
            "intro.",
            "c rewrite",
            "=> (= z (+ z (+ z z)))."
        ],
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z (+ z z)) (+ z (+ z z))) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= z (+ (+ 'a0 z) (+ z z)))) -> ('a2 : (= (+ (+ 'a0 z) (+ z z)) z)) -> (= (+ (+ 'a0 z) (+ z z)) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z (+ (+ 'a0 z) (+ z z)))) -> ('a2 : (= nat (+ (+ 'a0 z) (+ z z)) z)) -> (= nat (+ (+ 'a0 z) (+ z z)) z)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= z (+ (+ 'a0 z) (+ z z)))) -> ('a2 : (= (+ (+ 'a0 z) (+ z z)) z)) -> (= (+ (+ 'a0 z) (+ z z)) z)] {",
            "intro x : nat.",
            "intro x0 : (= z (+ (+ x z) (+ z z))).",
            "intro _ : [('a2 : (= (+ (+ x z) (+ z z)) z)) -> (= (+ (+ x z) (+ z z)) z)].",
            "}"
        ],
        "logprob": -3.288226909632154,
        "actions": [
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= z (+ (+ z z) z))) -> ('a1 : (= z (+ (+ (+ z z) (+ z z)) z))) -> (= z (+ (+ (+ (+ (+ (+ z z) z) z) z) z) (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z (+ (+ z z) z)) ) -> ('a1 : (= nat z (+ (+ (+ z z) (+ z z)) z))) -> (= nat z (+ (+ (+ (+ (+ (+ z z) z) z) z) z) (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ (+ z z) z)) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= z (+ (+ z z) (s z)))) -> ('a2 : (= (+ (+ z z) (+ z (s z))) z)) -> (= (+ (+ z z) (+ z (s z))) (s z))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat z (+ (+ z z) (s z)))) -> ('a2 : (= nat (+ (+ z z) (+ z (s z))) z)) -> (= nat (+ (+ z z) (+ z (s z))) (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= z 'a0)) -> ('a3 : (= z (+ (+ z 'a0) (s z)))) -> ('a4 : (= z (+ (+ z 'a0) (s z)))) -> ('a5 : (= (+ (+ z 'a0) (s z)) z)) -> (= z (+ (+ z 'a0) (s z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat z (+ (+ z 'a0) (s z)))) -> ('a4 : (= nat z (+ (+ z 'a0) (s z)))) -> ('a5 : (= nat (+ (+ z 'a0) (s z)) z))  -> (= nat z (+ (+ z 'a0) (s z)))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= z 'a0)) -> ('a3 : (= z (+ (+ z 'a0) (s z)))) -> ('a4 : (= z (+ (+ z 'a0) (s z)))) -> ('a5 : (= (+ (+ z 'a0) (s z)) z)) -> (= z (+ (+ z 'a0) (s z)))] {",
            "intro x : nat.",
            "intro x0 : (= x x).",
            "intro x1 : (= z x).",
            "intro x2 : (= z (+ (+ z x) (s z))).",
            "intro x3 : (= z (+ (+ z x) (s z))).",
            "intro _ : [('a5 : (= (+ (+ z x) (s z)) z)) -> (= z (+ (+ z x) (s z)))].",
            "}"
        ],
        "logprob": -5.721801784712095,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat z 'a0)) -> ('a3 : (= nat z (+ (+ z 'a0) (s z)))) -> ('a4 : (= nat z (+ (+ z 'a0) (s z)))) -> ('a5 : (= nat (+ (+ z 'a0) (s z)) z)) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= z (+ (+ 'a0 'a0) (s 'a0)))) -> (= (+ z (+ (+ 'a0 'a0) (s 'a0))) z)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= nat z (+ (+ 'a0 'a0) (s 'a0))))  -> (= nat (+ z (+ (+ 'a0 'a0) (s 'a0))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat z (+ (+ 'a0 'a0) (s 'a0)))) -> ('a3 : (= nat z (+ (+ 'a0 'a0) (s 'a0)))) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= (+ (+ 'a0 'a0) 'a0) (s 'a0))) -> ('a3 : (= 'a0 (s (+ (+ 'a0 'a0) 'a0)))) -> (= (s 'a0) (+ (+ 'a0 'a0) (s 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat (+ (+ 'a0 'a0) 'a0) (s 'a0))) -> ('a3 : (= nat 'a0 (s (+ (+ 'a0 'a0) 'a0)))) -> (= nat (s 'a0) (+ (+ 'a0 'a0) (s 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 z)) -> ('a4 : (= 'a0 'a0)) -> ('a5 : (= 'a0 'a0)) -> (= 'a0 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 z))  -> ('a4 : (= nat 'a0 'a0)) -> ('a5 : (= nat 'a0 'a0)) -> (= nat 'a0 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 z)) -> ('a4 : (= 'a0 'a0)) -> ('a5 : (= 'a0 'a0)) -> (= 'a0 'a0)] {",
            "intro x : nat.",
            "intro x0 : (= z x).",
            "intro x1 : (= x x).",
            "intro x2 : (= x z).",
            "intro x3 : (= x x).",
            "intro _ : [('a5 : (= x x)) -> (= x x)].",
            "}"
        ],
        "logprob": -4.207012662210538,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 z)) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= (+ (+ z z) z) z)) -> ('a1 : nat) -> ('a2 : (= z (+ (+ z 'a1) 'a1))) -> (= z (+ (+ (+ (+ z 'a1) z) 'a1) z))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z z) z) z) ) -> ('a1 : nat) -> ('a2 : (= nat z (+ (+ z 'a1) 'a1))) -> (= nat z (+ (+ (+ (+ z 'a1) z) 'a1) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z z) z) z) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= (+ (+ z z) (+ z (s z))) z)) -> ('a1 : nat) -> ('a2 : (= z (+ (+ z z) (s z)))) -> (= (+ (+ z z) (+ (+ z z) (s z))) z)]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z z) (+ z (s z))) z) ) -> ('a1 : nat) -> ('a2 : (= nat z (+ (+ z z) (s z)))) -> (= nat (+ (+ z z) (+ (+ z z) (s z))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z z) (+ z (s z))) z) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= (s (+ z (+ z (+ z z)))) (s (+ z (+ z (+ z z)))))) -> ('a1 : (= z (+ z (+ z z)))) -> (= (+ z (+ z (+ z z))) (s (+ z (+ z (+ z z)))))]",
        "problem_raw": "[('a0 : (= nat (s (+ z (+ z (+ z z)))) (s (+ z (+ z (+ z z)))))) -> ('a1 : (= nat z (+ z (+ z z)))) -> (= nat (+ z (+ z (+ z z))) (s (+ z (+ z (+ z z)))))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= (+ z z) (+ z z))) -> ('a1 : (= (+ (+ z (+ z z)) (+ (s (+ z z)) z)) (+ z z))) -> (= z (+ z (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ z z) (+ z z)) ) -> ('a1 : (= nat (+ (+ z (+ z z)) (+ (s (+ z z)) z)) (+ z z))) -> (= nat z (+ z (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ z z) (+ z z)) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= (+ (+ z z) z) (+ (+ z z) z))) -> ('a1 : nat) -> ('a2 : (= z (+ (+ z (+ (+ (s (+ z z)) z) z)) z))) -> (= (+ z z) (+ z (+ (+ z (+ (+ (s (+ z z)) z) z)) z)))]",
        "problem_raw": "[ ('a0 :(= nat (+ (+ z z) z) (+ (+ z z) z)) ) -> ('a1 : nat) -> ('a2 : (= nat z (+ (+ z (+ (+ (s (+ z z)) z) z)) z))) -> (= nat (+ z z) (+ z (+ (+ z (+ (+ (s (+ z z)) z) z)) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (+ z z) z) (+ (+ z z) z)) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= (+ 'a0 'a0) 'a0)) -> ('a3 : (= 'a0 (+ 'a0 (+ (+ 'a0 'a0) 'a0)))) -> (= (+ 'a0 (+ (+ 'a0 'a0) 'a0)) 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= nat (+ 'a0 'a0) 'a0)) -> ('a3 : (= nat 'a0 (+ 'a0 (+ (+ 'a0 'a0) 'a0)))) -> (= nat (+ 'a0 (+ (+ 'a0 'a0) 'a0)) 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= 'a0 (+ (+ (s 'a0) 'a0) 'a0))) -> ('a2 : (= (+ 'a0 'a0) 'a0)) -> ('a3 : (= 'a0 (+ 'a0 (+ (+ 'a0 'a0) 'a0)))) -> (= (+ 'a0 (+ (+ 'a0 'a0) 'a0)) 'a0)] {",
            "intro x : nat.",
            "intro x0 : (= x (+ (+ (s x) x) x)).",
            "intro x1 : (= (+ x x) x).",
            "intro x2 : (= x (+ x (+ (+ x x) x))).",
            "show (= (+ x (+ (+ x x) x)) x) by eq_symm.",
            "}"
        ],
        "logprob": -6.551013649806361,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "c eq_symm",
            "=> (= (+ x (+ (+ x x) x)) x)."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : nat) -> ('a3 : (= 'a0 z)) -> ('a4 : (= z 'a0)) -> ('a5 : (= 'a0 'a0)) -> (= z 'a0)]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z 'a0)) -> ('a2 : nat) -> ('a3 : (= nat 'a0 z)) -> ('a4 : (= nat z 'a0)) -> ('a5 : (= nat 'a0 'a0)) -> (= nat z 'a0)]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= z 'a0)) -> ('a2 : nat) -> ('a3 : (= 'a0 z)) -> ('a4 : (= z 'a0)) -> ('a5 : (= 'a0 'a0)) -> (= z 'a0)] {",
            "intro x : nat.",
            "intro x0 : (= z x).",
            "intro x1 : nat.",
            "intro x2 : (= x z).",
            "intro x3 : (= z x).",
            "intro _ : [('a5 : (= x x)) -> (= z x)].",
            "}"
        ],
        "logprob": -4.632101206716762,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro.",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 z)) -> ('a2 : (= (s (+ 'a0 z)) z)) -> ('a3 : (= z (+ (+ z 'a0) z))) -> ('a4 : (= (+ (s (+ 'a0 z)) z) (+ (s (+ 'a0 z)) z))) -> (= (+ (+ (s (+ 'a0 z)) z) z) (+ (+ z 'a0) z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat (s (+ 'a0 z)) z)) -> ('a3 : (= nat z (+ (+ z 'a0) z))) -> ('a4 : (= nat (+ (s (+ 'a0 z)) z) (+ (s (+ 'a0 z)) z)))  -> (= nat (+ (+ (s (+ 'a0 z)) z) z) (+ (+ z 'a0) z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 z)) -> ('a2 : (= nat (s (+ 'a0 z)) z)) -> ('a3 : (= nat z (+ (+ z 'a0) z))) -> ('a4 : (= nat (+ (s (+ 'a0 z)) z) (+ (s (+ 'a0 z)) z))) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= (+ z z) z)) -> ('a1 : (= (+ z (+ z (+ (s (+ z (s z))) z))) (+ (+ z (+ z z)) z))) -> (= z (+ z (+ z z)))]",
        "problem_raw": "[('a0 : (= nat (+ z z) z)) -> ('a1 : (= nat (+ z (+ z (+ (s (+ z (s z))) z))) (+ (+ z (+ z z)) z))) -> (= nat z (+ z (+ z z)))]",
        "proof": [
            "theorem t : [('a0 : (= (+ z z) z)) -> ('a1 : (= (+ z (+ z (+ (s (+ z (s z))) z))) (+ (+ z (+ z z)) z))) -> (= z (+ z (+ z z)))] {",
            "intro x : (= (+ z z) z).",
            "show (= z (+ z z)) by eq_symm.",
            "intro x0 : (= (+ z (+ z (+ (s (+ z (s z))) z))) (+ (+ z (+ z z)) z)).",
            "show (= z (+ z (+ z z))) by rewrite.",
            "}"
        ],
        "logprob": -5.576546419189693,
        "actions": [
            "intro.",
            "c eq_symm",
            "=> (= z (+ z z)).",
            "intro.",
            "c rewrite",
            "=> (= z (+ z (+ z z)))."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= (+ (+ 'a0 'a0) 'a0) (s 'a0))) -> ('a3 : (= (+ (+ 'a0 'a0) 'a0) (s 'a0))) -> (= z (+ (+ 'a0 'a0) (s 'a0)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat (+ (+ 'a0 'a0) 'a0) (s 'a0))) -> ('a3 : (= nat (+ (+ 'a0 'a0) 'a0) (s 'a0)))  -> (= nat z (+ (+ 'a0 'a0) (s 'a0)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat (+ (+ 'a0 'a0) 'a0) (s 'a0))) -> ('a3 : (= nat (+ (+ 'a0 'a0) 'a0) (s 'a0))) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= z (+ (+ z z) (+ (s (+ (+ z z) z)) z)))) -> (= (+ (+ (+ (+ z z) (+ (s (+ (+ z z) z)) z)) (s z)) z) (s z))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat z (+ (+ z z) (+ (s (+ (+ z z) z)) z)))) -> (= nat (+ (+ (+ (+ z z) (+ (s (+ (+ z z) z)) z)) (s z)) z) (s z))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 (s (+ (+ (+ 'a0 (s z)) z) z))) z))) -> (= z (+ 'a0 (s z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 (s (+ (+ (+ 'a0 (s z)) z) z))) z))) -> (= nat z (+ 'a0 (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= z z)) -> ('a1 : (= (s (+ z (+ z z))) z)) -> ('a2 : nat) -> ('a3 : (= z (+ z (+ z z)))) -> ('a4 : (= z (+ z (+ (+ z 'a2) (+ z z))))) -> (= z (s (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z z) ) -> ('a1 : (= nat (s (+ z (+ z z))) z)) -> ('a2 : nat) -> ('a3 : (= nat z (+ z (+ z z)))) -> ('a4 : (= nat z (+ z (+ (+ z 'a2) (+ z z))))) -> (= nat z (s (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z z) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= z (+ z z))) -> ('a1 : (= (+ (+ (+ z (+ z z)) (+ z z)) (+ z z)) z)) -> (= z (+ (+ (+ z z) (+ (+ (+ z z) z) z)) (+ z z)))]",
        "problem_raw": "[ ('a0 :(= nat z (+ z z)) ) -> ('a1 : (= nat (+ (+ (+ z (+ z z)) (+ z z)) (+ z z)) z)) -> (= nat z (+ (+ (+ z z) (+ (+ (+ z z) z) z)) (+ z z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat z (+ z z)) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= (s (+ 'a0 z)) z)) -> ('a2 : (= z (+ (+ 'a0 z) (+ z (+ z z))))) -> ('a3 : (= z (+ z (+ z z)))) -> (= z (s (+ 'a0 z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat (s (+ 'a0 z)) z)) -> ('a2 : (= nat z (+ (+ 'a0 z) (+ z (+ z z))))) -> ('a3 : (= nat z (+ z (+ z z)))) -> (= nat z (s (+ 'a0 z)))]",
        "proof": [
            "theorem t : [('a0 : nat) -> ('a1 : (= (s (+ 'a0 z)) z)) -> ('a2 : (= z (+ (+ 'a0 z) (+ z (+ z z))))) -> ('a3 : (= z (+ z (+ z z)))) -> (= z (s (+ 'a0 z)))] {",
            "intro x : nat.",
            "intro x0 : (= (s (+ x z)) z).",
            "intro x1 : (= z (+ (+ x z) (+ z (+ z z)))).",
            "show (= z (s (+ x z))) by eq_symm.",
            "intro _ : [('a3 : (= z (+ z (+ z z)))) -> (= z (s (+ x z)))].",
            "}"
        ],
        "logprob": -5.20193977339532,
        "actions": [
            "intro.",
            "intro.",
            "intro.",
            "c eq_symm",
            "=> (= z (s (+ x z))).",
            "intro."
        ],
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 'a0)) -> ('a2 : (= 'a0 'a0)) -> ('a3 : (= 'a0 'a0)) -> ('a4 : (= (+ (+ 'a0 'a0) 'a0) 'a0)) -> (= 'a0 (s 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 'a0)) -> ('a2 : (= nat 'a0 'a0)) -> ('a3 : (= nat 'a0 'a0)) -> ('a4 : (= nat (+ (+ 'a0 'a0) 'a0) 'a0)) -> (= nat 'a0 (s 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ 'a0 z) (s z)))) -> ('a2 : (= (+ (+ 'a0 z) (+ z (s z))) z)) -> (= (+ (+ 'a0 z) (+ z (s z))) (+ (+ (+ (+ 'a0 z) (s z)) z) (s z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ 'a0 z) (s z)))) -> ('a2 : (= nat (+ (+ 'a0 z) (+ z (s z))) z)) -> (= nat (+ (+ 'a0 z) (+ z (s z))) (+ (+ (+ (+ 'a0 z) (s z)) z) (s z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (+ (+ z 'a0) (+ (s (+ z (s z))) z)))) -> ('a2 : (= 'a0 (+ (+ z 'a0) (+ (s (+ z (s z))) z)))) -> (= z (+ (+ z 'a0) (+ (s (+ z (s z))) z)))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ z 'a0) (+ (s (+ z (s z))) z)))) -> ('a2 : (= nat 'a0 (+ (+ z 'a0) (+ (s (+ z (s z))) z))))  -> (= nat z (+ (+ z 'a0) (+ (s (+ z (s z))) z)))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[('a0 : nat) -> ('a1 : (= nat 'a0 (+ (+ z 'a0) (+ (s (+ z (s z))) z)))) -> ('a2 : (= nat 'a0 (+ (+ z 'a0) (+ (s (+ z (s z))) z)))) "
    },
    {
        "iteration": 8,
        "problem": "[('a0 : nat) -> ('a1 : (= 'a0 (s 'a0))) -> ('a2 : (= (+ (+ 'a0 'a0) 'a0) (s 'a0))) -> ('a3 : (= 'a0 (s (+ (+ 'a0 'a0) 'a0)))) -> (= z (+ (+ 'a0 (s 'a0)) 'a0))]",
        "problem_raw": "[('a0 : nat) -> ('a1 : (= nat 'a0 (s 'a0))) -> ('a2 : (= nat (+ (+ 'a0 'a0) 'a0) (s 'a0))) -> ('a3 : (= nat 'a0 (s (+ (+ 'a0 'a0) 'a0)))) -> (= nat z (+ (+ 'a0 (s 'a0)) 'a0))]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": null
    },
    {
        "iteration": 8,
        "problem": "[('a0 : (= (+ (s (+ z z)) z) (s (+ z z)))) -> ('a1 : (= z (+ (s z) z))) -> ('a2 : (= z (+ z (+ z z)))) -> (= (+ z (+ z (+ (s z) z))) z)]",
        "problem_raw": "[ ('a0 :(= nat (+ (s (+ z z)) z) (s (+ z z))) ) -> ('a1 : (= nat z (+ (s z) z))) -> ('a2 : (= nat z (+ z (+ z z)))) -> (= nat (+ z (+ z (+ (s z) z))) z)]",
        "proof": null,
        "logprob": null,
        "actions": null,
        "hindsight": false,
        "seed_used": "[ ('a0 :(= nat (+ (s (+ z z)) z) (s (+ z z))) "
    }
]